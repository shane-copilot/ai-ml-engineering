[
  {
    "id": "cmd_apt_001",
    "command": "apt",
    "scenario": "Install, update, and manage packages on Ubuntu/Debian",
    "problem": "Need to install software, update system, or fix broken packages",
    "solution": "Use apt commands for package management on Debian-based systems",
    "steps": [
      "Update package lists: sudo apt update",
      "Always do this first to get latest package info",
      "Upgrade all packages: sudo apt upgrade",
      "Asks for confirmation before upgrading",
      "Non-interactive upgrade: sudo apt upgrade -y",
      "Full upgrade (handles dependencies better): sudo apt full-upgrade",
      "Search for package: apt search package_name",
      "Or: apt-cache search package_name",
      "Show package info: apt show package_name",
      "Install package: sudo apt install package_name",
      "Multiple packages: sudo apt install pkg1 pkg2 pkg3",
      "Reinstall package: sudo apt install --reinstall package_name",
      "Install specific version: sudo apt install package_name=version",
      "Example: sudo apt install nginx=1.18.0-1",
      "Install without recommends: sudo apt install --no-install-recommends package_name",
      "Remove package: sudo apt remove package_name",
      "Remove with config files: sudo apt purge package_name",
      "Autoremove unused dependencies: sudo apt autoremove",
      "Clean package cache: sudo apt clean",
      "Autoclean old packages: sudo apt autoclean",
      "List installed packages: apt list --installed",
      "List upgradable: apt list --upgradable",
      "Check if package installed: dpkg -l | grep package_name",
      "Show package files: dpkg -L package_name",
      "Find which package provides file: dpkg -S /path/to/file",
      "Or: apt-file search filename (need apt-file installed)",
      "Fix broken packages: sudo apt --fix-broken install",
      "Or: sudo dpkg --configure -a then sudo apt install -f",
      "Reconfigure package: sudo dpkg-reconfigure package_name",
      "Hold package version: sudo apt-mark hold package_name",
      "Unhold: sudo apt-mark unhold package_name",
      "List held packages: apt-mark showhold",
      "Add PPA repository: sudo add-apt-repository ppa:user/ppa-name",
      "Then: sudo apt update",
      "Remove PPA: sudo add-apt-repository --remove ppa:user/ppa-name",
      "Edit sources list: sudo nano /etc/apt/sources.list",
      "Or add files to: /etc/apt/sources.list.d/",
      "Check for updates: apt list --upgradable | grep -v 'Listing'",
      "Simulate install: apt install -s package_name (dry run)",
      "Download only: sudo apt install --download-only package_name",
      "Packages in: /var/cache/apt/archives/",
      "Check apt logs: cat /var/log/apt/history.log",
      "Or: cat /var/log/apt/term.log"
    ],
    "commands": ["apt", "apt-cache", "dpkg", "add-apt-repository", "apt-file", "apt-mark", "nano", "cat", "grep"],
    "packages": {
      "debian_ubuntu": ["apt", "dpkg", "software-properties-common", "apt-file"]
    },
    "related_commands": ["dpkg", "apt-cache", "apt-file", "apt-mark", "snap", "flatpak"],
    "complexity": "beginner",
    "tags": ["apt", "package-management", "ubuntu", "debian", "install", "update"]
  },
  {
    "id": "cmd_pacman_001",
    "command": "pacman",
    "scenario": "Install, update, and manage packages on Arch Linux",
    "problem": "Need to install software, update system, or manage packages on Arch",
    "solution": "Use pacman commands for package management on Arch-based systems",
    "steps": [
      "Update package database: sudo pacman -Sy",
      "Upgrade all packages: sudo pacman -Syu",
      "S=sync, y=refresh database, u=upgrade",
      "This is the main update command for Arch",
      "Force refresh and upgrade: sudo pacman -Syyu",
      "Search for package: pacman -Ss package_name",
      "Show package info: pacman -Si package_name",
      "Install package: sudo pacman -S package_name",
      "Multiple packages: sudo pacman -S pkg1 pkg2 pkg3",
      "Install without confirmation: sudo pacman -S --noconfirm package_name",
      "Download only: sudo pacman -Sw package_name",
      "Remove package: sudo pacman -R package_name",
      "Remove with dependencies: sudo pacman -Rs package_name",
      "Remove with all dependencies: sudo pacman -Rns package_name",
      "Recommended for clean removal",
      "Remove config files: sudo pacman -Rn package_name",
      "List installed packages: pacman -Q",
      "List explicitly installed: pacman -Qe",
      "List foreign (AUR) packages: pacman -Qm",
      "Search installed: pacman -Qs package_name",
      "Show installed package info: pacman -Qi package_name",
      "List package files: pacman -Ql package_name",
      "Find package owning file: pacman -Qo /path/to/file",
      "Check for package file database: pacman -F filename",
      "Or: pkgfile filename (need pkgfile installed)",
      "Update file database: sudo pacman -Fy",
      "Clean package cache: sudo pacman -Sc",
      "Keep only current versions",
      "Clean all cache: sudo pacman -Scc (careful!)",
      "Check for orphaned packages: pacman -Qdt",
      "Remove orphans: sudo pacman -Rns $(pacman -Qdtq)",
      "Verify package integrity: sudo pacman -Qk package_name",
      "Fix broken packages: sudo pacman -S --overwrite '*' package_name",
      "Ignore package: Edit /etc/pacman.conf, add IgnorePkg = package_name",
      "Or one-time: sudo pacman -Syu --ignore package_name",
      "List package groups: pacman -Sg",
      "Install group: sudo pacman -S group_name",
      "Download PKGBUILD: git clone https://aur.archlinux.org/package_name.git",
      "Build from AUR: cd package_name && makepkg -si",
      "Or use AUR helper: yay -S package_name or paru -S package_name",
      "Downgrade package: Install from cache: sudo pacman -U /var/cache/pacman/pkg/package-version.pkg.tar.zst",
      "View pacman log: cat /var/log/pacman.log | tail -50",
      "Mirror optimization: sudo pacman -S reflector then sudo reflector --latest 20 --protocol https --sort rate --save /etc/pacman.d/mirrorlist"
    ],
    "commands": ["pacman", "makepkg", "yay", "paru", "pkgfile", "reflector", "cat", "git"],
    "packages": {
      "arch": ["pacman", "pkgfile", "reflector", "base-devel"]
    },
    "related_commands": ["yay", "paru", "makepkg", "pkgfile"],
    "complexity": "beginner",
    "tags": ["pacman", "package-management", "arch-linux", "install", "update", "aur"]
  },
  {
    "id": "cmd_df_001",
    "command": "df",
    "scenario": "Check disk space usage across all filesystems",
    "problem": "System showing low disk space warnings, need to identify which partition is full",
    "solution": "Use df to display filesystem disk space usage",
    "steps": [
      "Show all filesystems: df",
      "Output in 1K blocks by default",
      "Human-readable format: df -h",
      "Shows sizes in KB, MB, GB",
      "This is the most common usage",
      "Show all including pseudo filesystems: df -a",
      "Exclude certain filesystem types: df -x tmpfs -x devtmpfs",
      "Show only specific type: df -t ext4",
      "Show inode usage: df -i",
      "Useful when 'No space left' but df shows space available",
      "Combine with human format: df -ih",
      "Show filesystem type: df -T",
      "Local filesystems only: df -l",
      "Excludes network mounts",
      "Specific filesystem: df -h /dev/sda1",
      "Or by mount point: df -h /home",
      "Total at bottom: df -h --total",
      "Output in 1MB blocks: df -BM",
      "Or 1GB blocks: df -BG",
      "Print type and mount point: df -hT",
      "Show access time: df --output=source,fstype,size,used,avail,pcent,target",
      "Custom output: df -h --output=target,pcent,size",
      "Only percentages: df -h | awk '{print $5, $6}'",
      "Sort by usage: df -h | sort -k 5 -r",
      "Alert if >80%: df -h | awk '$5+0 > 80'",
      "Exclude snap mounts: df -h | grep -v '/snap/'",
      "Watch continuously: watch -n 5 df -h",
      "Find what's using space: du -sh /* | sort -h",
      "Or: ncdu / (interactive disk usage)",
      "Check specific directory: du -sh /var/log",
      "After finding full partition:",
      "Clean package cache: sudo apt clean or sudo pacman -Sc",
      "Clean logs: sudo journalctl --vacuum-size=100M",
      "Remove old kernels (Ubuntu): sudo apt autoremove",
      "Find large files: find / -type f -size +1G 2>/dev/null",
      "If inode full: find / -xdev -printf '%h\\n' | sort | uniq -c | sort -k 1 -n",
      "Shows which directory has most files"
    ],
    "commands": ["df", "du", "ncdu", "awk", "sort", "grep", "watch", "find", "journalctl"],
    "packages": {
      "debian_ubuntu": ["coreutils", "ncdu"],
      "arch": ["coreutils", "ncdu"]
    },
    "related_commands": ["du", "ncdu", "lsblk", "findmnt"],
    "complexity": "beginner",
    "tags": ["df", "disk-space", "filesystem", "storage", "monitoring"]
  },
  {
    "id": "cmd_du_001",
    "command": "du",
    "scenario": "Find which directories are consuming most disk space",
    "problem": "Partition is full, need to identify large directories to clean up",
    "solution": "Use du to analyze disk usage by directory",
    "steps": [
      "Directory size: du -sh /path/to/directory",
      "s=summarize, h=human-readable",
      "Current directory: du -sh .",
      "All subdirectories: du -h -d 1 /path/",
      "d 1 = depth 1 (one level deep)",
      "Top-level directories: du -sh /*",
      "Shows size of each directory in /",
      "Sort by size: du -sh /* | sort -h",
      "h flag in sort = human-readable numbers",
      "Top 10 largest: du -h / 2>/dev/null | sort -rh | head -10",
      "Exclude certain dirs: du -sh --exclude='*.iso' --exclude='/proc' /",
      "One filesystem only: du -shx /",
      "x = don't cross filesystem boundaries",
      "Show all files: du -ah /path/",
      "a = all files, not just directories",
      "Limit depth: du -h --max-depth=2 /path/",
      "With apparent size: du -sh --apparent-size /path/",
      "Shows file size vs disk usage (sparse files)",
      "Specific directory depth: du -h /var/ --max-depth=3 | sort -rh | head -20",
      "Find directories over 1GB: du -h / 2>/dev/null | grep '^[0-9\\.]*G'",
      "With threshold: du -h -t 100M /path/",
      "Only shows items over 100MB",
      "Exclude pattern: du -sh --exclude='node_modules' .",
      "Time-based: find /path -type f -mtime -7 -exec du -sh {} \\; | sort -h",
      "Files modified in last 7 days",
      "Compare two directories: diff <(du -ah dir1 | sort) <(du -ah dir2 | sort)",
      "Interactive alternative: ncdu /path/",
      "Ncurses interface, easier to navigate",
      "Can delete files directly from interface",
      "Export to file: ncdu -o dump.txt /path/ then ncdu -f dump.txt",
      "Analyze specific file types: du -sh /path/**/*.log",
      "Or: find /path -name '*.log' -exec du -ch {} + | tail -1",
      "Sum of specific type: find /path -name '*.mp4' -print0 | du -ch --files0-from=- | tail -1",
      "Per user home dirs: du -sh /home/* | sort -h",
      "Cache directories: du -sh ~/.cache /var/cache",
      "Log directories: du -sh /var/log/*",
      "Docker usage: du -sh /var/lib/docker",
      "After identifying large dirs:",
      "Clean logs: sudo find /var/log -name '*.log' -mtime +30 -delete",
      "Clean cache: rm -rf ~/.cache/* or sudo apt clean",
      "Remove old downloads: find ~/Downloads -mtime +90 -type f -delete"
    ],
    "commands": ["du", "sort", "head", "grep", "find", "ncdu", "diff", "rm"],
    "packages": {
      "debian_ubuntu": ["coreutils", "ncdu"],
      "arch": ["coreutils", "ncdu"]
    },
    "related_commands": ["df", "ncdu", "find", "ls"],
    "complexity": "intermediate",
    "tags": ["du", "disk-usage", "storage-analysis", "cleanup", "filesystem"]
  },
  {
    "id": "cmd_mount_001",
    "command": "mount",
    "scenario": "Mount external drive or network share",
    "problem": "Need to access files on external USB drive or network storage",
    "solution": "Use mount to attach filesystem to directory tree",
    "steps": [
      "List all mounts: mount or findmnt",
      "Findmnt shows tree view",
      "Check available devices: lsblk or sudo fdisk -l",
      "Identify device: e.g., /dev/sdb1",
      "Create mount point: sudo mkdir -p /mnt/usb",
      "Mount device: sudo mount /dev/sdb1 /mnt/usb",
      "With filesystem type: sudo mount -t ext4 /dev/sdb1 /mnt/usb",
      "Auto-detect type usually works",
      "Mount read-only: sudo mount -o ro /dev/sdb1 /mnt/usb",
      "Useful for data recovery",
      "Mount with specific options: sudo mount -o rw,user,exec /dev/sdb1 /mnt/usb",
      "Common options: rw=read-write, ro=read-only, user=allow non-root, exec=allow execution",
      "Mount NTFS (Windows): sudo mount -t ntfs-3g /dev/sdb1 /mnt/windows",
      "Requires ntfs-3g package",
      "Mount with permissions: sudo mount -o uid=1000,gid=1000 /dev/sdb1 /mnt/usb",
      "Files owned by UID 1000 (your user)",
      "Mount ISO file: sudo mount -o loop file.iso /mnt/iso",
      "Network share (SMB/CIFS): sudo mount -t cifs //server/share /mnt/network -o username=user",
      "Prompts for password",
      "With credentials: sudo mount -t cifs //server/share /mnt/network -o credentials=/path/to/credentials",
      "Credentials file: username=user\\npassword=pass",
      "NFS mount: sudo mount -t nfs server:/share /mnt/nfs",
      "With options: sudo mount -t nfs -o vers=4,soft,rsize=8192,wsize=8192 server:/share /mnt/nfs",
      "Unmount: sudo umount /mnt/usb",
      "Or by device: sudo umount /dev/sdb1",
      "Force unmount: sudo umount -f /mnt/usb",
      "Lazy unmount: sudo umount -l /mnt/usb",
      "Detaches but waits for operations to complete",
      "Check what's using mount: lsof +f -- /mnt/usb or fuser -m /mnt/usb",
      "Kill processes: sudo fuser -km /mnt/usb",
      "Remount with new options: sudo mount -o remount,rw /mnt/usb",
      "Make permanent (fstab): sudo nano /etc/fstab",
      "Add line: /dev/sdb1 /mnt/usb ext4 defaults 0 2",
      "Or by UUID: UUID=xxxx /mnt/usb ext4 defaults 0 2",
      "Find UUID: sudo blkid /dev/sdb1",
      "Test fstab: sudo mount -a",
      "Auto-mount on insert: Use systemd automount or udev rules",
      "systemd: Create /etc/systemd/system/mnt-usb.automount",
      "Check mount status: mountpoint /mnt/usb",
      "View mount options: mount | grep /mnt/usb"
    ],
    "commands": ["mount", "umount", "lsblk", "fdisk", "mkdir", "findmnt", "lsof", "fuser", "blkid", "nano", "mountpoint"],
    "packages": {
      "debian_ubuntu": ["mount", "cifs-utils", "nfs-common", "ntfs-3g"],
      "arch": ["util-linux", "cifs-utils", "nfs-utils", "ntfs-3g"]
    },
    "related_commands": ["umount", "findmnt", "lsblk", "blkid", "fdisk"],
    "complexity": "intermediate",
    "tags": ["mount", "filesystem", "usb", "network-share", "nfs", "cifs", "storage"]
  }
]
