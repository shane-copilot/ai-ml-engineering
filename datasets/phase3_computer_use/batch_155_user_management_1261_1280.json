[
  {
    "id": "scenario_user_management_153",
    "command": "useradd",
    "scenario": "Manage Linux users and groups for system administration and access control.",
    "problem": "Need to create new user accounts, set passwords, manage groups, configure user permissions, add users to sudo, lock/unlock accounts, and understand user/group configuration for multi-user systems.",
    "solution": "Use useradd/adduser to create users, usermod to modify, userdel to delete, passwd to set passwords, groups/groupadd for group management, and understand /etc/passwd, /etc/shadow, /etc/group files.",
    "steps": [
      "USER SAYS: 'How do I create user accounts and manage permissions on Linux? I need to set up accounts for my team.'",
      "AGENT: 'Let me show you Linux user management! We'll create users, set passwords, manage groups, configure sudo access, and handle permissions.'",
      "AGENT: ''",
      "AGENT: 'üîç RESEARCH PHASE: User management...'",
      "AGENT: '[Searching] \"linux user management useradd passwd groups sudo\"'",
      "AGENT: '[Found] useradd creates users, passwd sets passwords.'",
      "AGENT: '[Found] /etc/passwd stores user info, /etc/shadow stores passwords.'",
      "AGENT: '[Found] Groups control file access, sudo gives admin rights.'",
      "AGENT: '[Found] usermod modifies users, userdel removes them.'",
      "AGENT: '‚úì Research complete! Let's master user management.'",
      "AGENT: ''",
      "AGENT: '--- Approach 1: Create New User (Simple) ---'",
      "Run command: `sudo useradd john`",
      "AGENT: 'Creates user \"john\" with defaults'",
      "AGENT: ''",
      "Run command: `sudo passwd john`",
      "AGENT: 'New password: '",
      "AGENT: 'Retype new password: '",
      "AGENT: 'passwd: password updated successfully'",
      "AGENT: 'Sets password for john'",
      "AGENT: ''",
      "Run command: `id john`",
      "AGENT: 'uid=1001(john) gid=1001(john) groups=1001(john)'",
      "AGENT: 'Shows user ID and group info'",
      "AGENT: ''",
      "AGENT: '--- Approach 2: Create User with Full Setup ---'",
      "Run command: `sudo useradd -m -s /bin/bash -c \"John Doe\" -G sudo,developers john`",
      "AGENT: '  -m = Create home directory'",
      "AGENT: '  -s /bin/bash = Set shell'",
      "AGENT: '  -c \"John Doe\" = Full name (comment)'",
      "AGENT: '  -G sudo,developers = Additional groups'",
      "AGENT: ''",
      "Run command: `ls -la /home/john`",
      "AGENT: 'drwxr-xr-x 2 john john 4096 Oct  8 19:00 .'",
      "AGENT: 'Home directory created'",
      "AGENT: ''",
      "AGENT: '--- Approach 3: Interactive User Creation (adduser) ---'",
      "Run command: `sudo adduser jane`",
      "AGENT: 'Adding user `jane\\' ...'",
      "AGENT: 'Adding new group `jane\\' (1002) ...'",
      "AGENT: 'Adding new user `jane\\' (1002) with group `jane\\' ...'",
      "AGENT: 'Creating home directory `/home/jane\\' ...'",
      "AGENT: 'Copying files from `/etc/skel\\' ...'",
      "AGENT: 'New password: '",
      "AGENT: 'Retype new password: '",
      "AGENT: 'Enter the new value, or press ENTER for the default'",
      "AGENT: '\tFull Name []: Jane Smith'",
      "AGENT: '\tRoom Number []: '",
      "AGENT: '\tWork Phone []: '",
      "AGENT: '\tHome Phone []: '",
      "AGENT: '\tOther []: '",
      "AGENT: 'Is the information correct? [Y/n] Y'",
      "AGENT: ''",
      "AGENT: 'adduser is more user-friendly (interactive)'",
      "AGENT: 'useradd is lower-level (requires more flags)'",
      "AGENT: ''",
      "AGENT: '--- Approach 4: View User Information ---'",
      "Run command: `cat /etc/passwd | grep john`",
      "AGENT: 'john:x:1001:1001:John Doe:/home/john:/bin/bash'",
      "AGENT: '  ^   ^ ^    ^    ^         ^           ^'",
      "AGENT: '  |   | |    |    |         |           ‚îî‚îÄ Shell'",
      "AGENT: '  |   | |    |    |         ‚îî‚îÄ Home directory'",
      "AGENT: '  |   | |    |    ‚îî‚îÄ Full name (GECOS)'",
      "AGENT: '  |   | |    ‚îî‚îÄ Primary GID'",
      "AGENT: '  |   | ‚îî‚îÄ UID'",
      "AGENT: '  |   ‚îî‚îÄ Password (x = in /etc/shadow)'",
      "AGENT: '  ‚îî‚îÄ Username'",
      "AGENT: ''",
      "Run command: `getent passwd john`",
      "AGENT: 'Better way to query user database'",
      "AGENT: ''",
      "Run command: `id john`",
      "AGENT: 'uid=1001(john) gid=1001(john) groups=1001(john),27(sudo),1003(developers)'",
      "AGENT: ''",
      "Run command: `groups john`",
      "AGENT: 'john : john sudo developers'",
      "AGENT: 'Lists all groups user belongs to'",
      "AGENT: ''",
      "Run command: `finger john`",
      "AGENT: 'Login: john           Name: John Doe'",
      "AGENT: 'Directory: /home/john Shell: /bin/bash'",
      "AGENT: '(May need to install: sudo apt install finger)'",
      "AGENT: ''",
      "AGENT: '--- Approach 5: Modify Existing User ---'",
      "Run command: `sudo usermod -c \"John Smith\" john`",
      "AGENT: 'Change full name'",
      "AGENT: ''",
      "Run command: `sudo usermod -s /bin/zsh john`",
      "AGENT: 'Change shell to zsh'",
      "AGENT: ''",
      "Run command: `sudo usermod -aG docker john`",
      "AGENT: '  -a = Append (important!)'",
      "AGENT: '  -G = Groups'",
      "AGENT: 'Add user to docker group (without removing from other groups)'",
      "AGENT: ''",
      "Run command: `sudo usermod -G sudo,developers,docker john`",
      "AGENT: 'WARNING: Without -a, replaces all groups!'",
      "AGENT: ''",
      "Run command: `sudo usermod -d /home/john_new -m john`",
      "AGENT: '  -d = New home directory'",
      "AGENT: '  -m = Move contents'",
      "AGENT: 'Change home directory and move files'",
      "AGENT: ''",
      "Run command: `sudo usermod -L john`",
      "AGENT: '  -L = Lock account (disable login)'",
      "AGENT: ''",
      "Run command: `sudo usermod -U john`",
      "AGENT: '  -U = Unlock account'",
      "AGENT: ''",
      "AGENT: '--- Approach 6: Group Management ---'",
      "Run command: `sudo groupadd developers`",
      "AGENT: 'Create new group'",
      "AGENT: ''",
      "Run command: `cat /etc/group | grep developers`",
      "AGENT: 'developers:x:1003:john,jane'",
      "AGENT: '  ^         ^ ^    ^'",
      "AGENT: '  |         | |    ‚îî‚îÄ Members'",
      "AGENT: '  |         | ‚îî‚îÄ GID'",
      "AGENT: '  |         ‚îî‚îÄ Password (rarely used)'",
      "AGENT: '  ‚îî‚îÄ Group name'",
      "AGENT: ''",
      "Run command: `sudo usermod -aG developers jane`",
      "AGENT: 'Add jane to developers group'",
      "AGENT: ''",
      "Run command: `sudo gpasswd -a bob developers`",
      "AGENT: 'Alternative way to add user to group'",
      "AGENT: ''",
      "Run command: `sudo gpasswd -d bob developers`",
      "AGENT: 'Remove user from group'",
      "AGENT: ''",
      "Run command: `sudo groupdel developers`",
      "AGENT: 'Delete group (only if no users have it as primary)'",
      "AGENT: ''",
      "AGENT: '--- Approach 7: Grant Sudo Access ---'",
      "Run command: `sudo usermod -aG sudo john`",
      "AGENT: 'Add user to sudo group (Debian/Ubuntu)'",
      "AGENT: ''",
      "Run command: `sudo usermod -aG wheel john`",
      "AGENT: 'Add user to wheel group (RHEL/CentOS/Arch)'",
      "AGENT: ''",
      "Run command: `groups john`",
      "AGENT: 'john : john sudo'",
      "AGENT: 'Verify sudo group membership'",
      "AGENT: ''",
      "AGENT: 'User must log out and back in for group changes to take effect!'",
      "AGENT: ''",
      "AGENT: 'Configure specific sudo permissions:'",
      "Run command: `sudo visudo`",
      "AGENT: 'Opens /etc/sudoers in safe editor'",
      "AGENT: ''",
      "AGENT: 'Add at end:'",
      "AGENT: '# Allow john to run docker without password'",
      "AGENT: 'john ALL=(ALL) NOPASSWD: /usr/bin/docker'",
      "AGENT: ''",
      "AGENT: '# Allow developers group to restart services'",
      "AGENT: '%developers ALL=(ALL) /bin/systemctl restart *'",
      "AGENT: ''",
      "AGENT: '--- Approach 8: Password Management ---'",
      "Run command: `sudo passwd john`",
      "AGENT: 'Set/change password'",
      "AGENT: ''",
      "Run command: `sudo passwd -l john`",
      "AGENT: '  -l = Lock password (disable password login)'",
      "AGENT: ''",
      "Run command: `sudo passwd -u john`",
      "AGENT: '  -u = Unlock password'",
      "AGENT: ''",
      "Run command: `sudo passwd -d john`",
      "AGENT: '  -d = Delete password (empty password)'",
      "AGENT: 'WARNING: Not recommended!'",
      "AGENT: ''",
      "Run command: `sudo passwd -e john`",
      "AGENT: '  -e = Expire password (force change on next login)'",
      "AGENT: ''",
      "Run command: `sudo chage -l john`",
      "AGENT: 'Last password change\t\t\t: Oct 08, 2025'",
      "AGENT: 'Password expires\t\t\t: never'",
      "AGENT: 'Password inactive\t\t\t: never'",
      "AGENT: 'Account expires\t\t\t: never'",
      "AGENT: 'Show password aging information'",
      "AGENT: ''",
      "Run command: `sudo chage -M 90 john`",
      "AGENT: '  -M = Maximum days (password expires in 90 days)'",
      "AGENT: ''",
      "Run command: `sudo chage -E 2025-12-31 john`",
      "AGENT: '  -E = Expiration date (account expires Dec 31)'",
      "AGENT: ''",
      "AGENT: '--- Approach 9: Delete User ---'",
      "Run command: `sudo userdel john`",
      "AGENT: 'Delete user (keeps home directory)'",
      "AGENT: ''",
      "Run command: `sudo userdel -r john`",
      "AGENT: '  -r = Remove home directory and mail spool'",
      "AGENT: ''",
      "Run command: `sudo deluser john`",
      "AGENT: 'Interactive deletion (Debian/Ubuntu)'",
      "AGENT: ''",
      "Run command: `sudo deluser --remove-home john`",
      "AGENT: 'Delete user and home directory'",
      "AGENT: ''",
      "AGENT: 'Backup before deleting:'",
      "Run command: `sudo tar -czf /backups/john-home-backup.tar.gz /home/john`",
      "AGENT: ''",
      "AGENT: '--- Approach 10: List All Users ---'",
      "Run command: `cat /etc/passwd`",
      "AGENT: 'Shows all users (including system users)'",
      "AGENT: ''",
      "Run command: `cat /etc/passwd | grep -v nologin | grep -v false`",
      "AGENT: 'Filter to only users with real shells'",
      "AGENT: ''",
      "Run command: `awk -F: '$3 >= 1000 {print $1}' /etc/passwd`",
      "AGENT: 'john'",
      "AGENT: 'jane'",
      "AGENT: 'Only regular users (UID >= 1000)'",
      "AGENT: ''",
      "Run command: `getent passwd | awk -F: '$3 >= 1000 && $3 < 65534 {print $1}'`",
      "AGENT: 'Better approach using getent'",
      "AGENT: ''",
      "Run command: `compgen -u`",
      "AGENT: 'Lists all usernames'",
      "AGENT: ''",
      "AGENT: '--- Bonus: User Management Script ---'",
      "Create tool: `cat > create-user.sh << 'EOF'`",
      "#!/bin/bash\nset -euo pipefail\n\nif [ \"$(id -u)\" -ne 0 ]; then\n    echo \"Must run as root\"\n    exit 1\nfi\n\nif [ $# -ne 1 ]; then\n    echo \"Usage: $0 <username>\"\n    exit 1\nfi\n\nUSERNAME=\"$1\"\n\necho \"Creating user: $USERNAME\"\n\n# Create user with home directory\nuseradd -m -s /bin/bash \"$USERNAME\"\n\n# Set password\npasswd \"$USERNAME\"\n\n# Add to common groups\nusermod -aG sudo,developers \"$USERNAME\"\n\n# Copy skeleton files\ncp -r /etc/skel/. \"/home/$USERNAME/\"\nchown -R \"$USERNAME:$USERNAME\" \"/home/$USERNAME\"\n\necho \"\"\necho \"User $USERNAME created successfully!\"\necho \"Home: /home/$USERNAME\"\necho \"Groups: $(groups $USERNAME)\"\necho \"\"\necho \"User can now login with their password.\"\nEOF",
      "Run command: `chmod +x create-user.sh`",
      "Run command: `sudo ./create-user.sh bob`",
      "AGENT: ''",
      "AGENT: '--- Bonus: Bulk User Creation ---'",
      "Create tool: `cat > users.txt << 'EOF'`",
      "john:John Doe:developers\njane:Jane Smith:developers,designers\nbob:Bob Johnson:developers\nEOF",
      "AGENT: ''",
      "Create tool: `cat > bulk-create-users.sh << 'EOF'`",
      "#!/bin/bash\nset -euo pipefail\n\nif [ \"$(id -u)\" -ne 0 ]; then\n    echo \"Must run as root\"\n    exit 1\nfi\n\nwhile IFS=: read -r username fullname groups; do\n    echo \"Creating user: $username\"\n    \n    # Create user\n    useradd -m -s /bin/bash -c \"$fullname\" \"$username\"\n    \n    # Set default password (user should change)\n    echo \"$username:changeme123\" | chpasswd\n    \n    # Force password change on first login\n    passwd -e \"$username\"\n    \n    # Add to groups\n    if [ -n \"$groups\" ]; then\n        usermod -aG \"$groups\" \"$username\"\n    fi\n    \n    echo \"  ‚úì User $username created (groups: $groups)\"\ndone < users.txt\n\necho \"\"\necho \"All users created! They must change password on first login.\"\nEOF",
      "Run command: `chmod +x bulk-create-users.sh && sudo ./bulk-create-users.sh`",
      "AGENT: ''",
      "AGENT: '--- Bonus: User Audit Script ---'",
      "Create tool: `cat > audit-users.sh << 'EOF'`",
      "#!/bin/bash\nset -euo pipefail\n\necho \"=== User Audit Report ===\"\necho \"\"\n\necho \"Total Users (UID >= 1000):\"\ngetent passwd | awk -F: '$3 >= 1000 && $3 < 65534 {print $1}' | wc -l\necho \"\"\n\necho \"Users with Shell Access:\"\ngetent passwd | awk -F: '$3 >= 1000 && $3 < 65534 && $7 !~ /nologin|false/ {print $1, $5, $7}'\necho \"\"\n\necho \"Users with Sudo Access:\"\ngetent group sudo | cut -d: -f4 | tr ',' '\\n'\necho \"\"\n\necho \"Locked Accounts:\"\npasswd -S -a 2>/dev/null | grep ' L ' || echo \"None\"\necho \"\"\n\necho \"Password Expiration Info:\"\nfor user in $(getent passwd | awk -F: '$3 >= 1000 && $3 < 65534 {print $1}'); do\n    echo \"$user:\"\n    chage -l \"$user\" | grep -E 'Password expires|Account expires'\ndone\necho \"\"\n\necho \"=== Audit Complete ===\"\nEOF",
      "Run command: `chmod +x audit-users.sh && sudo ./audit-users.sh`",
      "AGENT: ''",
      "AGENT: '--- Bonus: Quick Commands Reference ---'",
      "AGENT: ''",
      "AGENT: 'Create user:'",
      "AGENT: '  sudo adduser username          Interactive'",
      "AGENT: '  sudo useradd -m -s /bin/bash username  With options'",
      "AGENT: ''",
      "AGENT: 'Set password:'",
      "AGENT: '  sudo passwd username'",
      "AGENT: ''",
      "AGENT: 'Modify user:'",
      "AGENT: '  sudo usermod -aG group username  Add to group'",
      "AGENT: '  sudo usermod -s /bin/zsh username  Change shell'",
      "AGENT: '  sudo usermod -L username         Lock account'",
      "AGENT: ''",
      "AGENT: 'Delete user:'",
      "AGENT: '  sudo userdel -r username  Remove with home dir'",
      "AGENT: ''",
      "AGENT: 'View user info:'",
      "AGENT: '  id username'",
      "AGENT: '  groups username'",
      "AGENT: '  getent passwd username'",
      "AGENT: ''",
      "AGENT: 'Grant sudo:'",
      "AGENT: '  sudo usermod -aG sudo username     Debian/Ubuntu'",
      "AGENT: '  sudo usermod -aG wheel username    RHEL/Arch'",
      "AGENT: ''",
      "AGENT: '‚úì SOLUTION SUMMARY:'",
      "AGENT: '  ‚úì Created users with useradd/adduser.'",
      "AGENT: '  ‚úì Set passwords with passwd command.'",
      "AGENT: '  ‚úì Modified users with usermod.'",
      "AGENT: '  ‚úì Managed groups with groupadd/gpasswd.'",
      "AGENT: '  ‚úì Granted sudo access via group membership.'",
      "AGENT: '  ‚úì Locked/unlocked accounts as needed.'",
      "AGENT: '  ‚úì Deleted users with userdel.'",
      "AGENT: '  ‚úì Understood /etc/passwd and /etc/group.'",
      "AGENT: '  ‚úì Created scripts for bulk user management.'",
      "AGENT: '  ‚úì You now master Linux user management! üë•'"
    ],
    "commands": ["useradd", "usermod", "userdel", "passwd", "groupadd", "groups"],
    "packages": {
      "debian_ubuntu": ["passwd"],
      "arch": ["shadow"]
    },
    "related_commands": ["adduser", "deluser", "chage", "id", "su", "sudo"],
    "complexity": "intermediate",
    "tags": ["users", "groups", "useradd", "passwd", "sudo", "permissions", "user-management", "accounts"]
  }
]
