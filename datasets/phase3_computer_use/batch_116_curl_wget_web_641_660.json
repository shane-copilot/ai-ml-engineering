[
  {
    "id": "scenario_curl_wget_web_tools_127",
    "command": "curl",
    "scenario": "Master HTTP requests, API testing, and web scraping with curl and wget.",
    "problem": "Need to test APIs, download files from web, send POST/PUT requests with JSON data, authenticate with APIs, handle cookies and headers, and automate web interactions.",
    "solution": "Master curl for flexible HTTP requests with custom headers, methods, authentication, and data. Use wget for recursive downloads and mirroring. Understand REST API testing, JSON handling, and common HTTP operations.",
    "steps": [
      "USER SAYS: 'I need to test my REST API, download files from URLs, send JSON data, and handle authentication. How do I work with HTTP from command line?'",
      "AGENT: 'Let me show you curl and wget - essential tools for HTTP operations! curl is perfect for API testing and complex requests, while wget excels at downloading files and website mirroring.'",
      "AGENT: ''",
      "AGENT: '🔍 RESEARCH PHASE: HTTP tools curl and wget...'",
      "AGENT: '[Searching] \"curl wget tutorial api testing json post get headers\"'",
      "AGENT: '[Found] curl supports all HTTP methods: GET, POST, PUT, DELETE, PATCH.'",
      "AGENT: '[Found] Use -H for custom headers, -d for data, -X for method.'",
      "AGENT: '[Found] wget -r for recursive download, -m for mirroring.'",
      "AGENT: '[Found] Both support authentication: Basic, Bearer token, OAuth.'",
      "AGENT: '✓ Research complete! Let's master HTTP tools.'",
      "AGENT: ''",
      "AGENT: '--- Approach 1: Basic GET Requests ---'",
      "Run command: `curl https://api.github.com`",
      "AGENT: '{'",
      "AGENT: '  \"current_user_url\": \"https://api.github.com/user\",'",
      "AGENT: '  \"current_user_authorizations_html_url\": \"https://github.com/settings/connections/applications{/client_id}\",'",
      "AGENT: '  ...'",
      "AGENT: '}'",
      "AGENT: ''",
      "Run command: `curl -s https://api.github.com | jq .`",
      "AGENT: '  -s = Silent mode (no progress bar)'",
      "AGENT: '  jq = Pretty-print JSON'",
      "AGENT: ''",
      "Run command: `curl -i https://api.github.com`",
      "AGENT: '  -i = Include HTTP response headers'",
      "AGENT: 'HTTP/2 200'",
      "AGENT: 'content-type: application/json'",
      "AGENT: 'x-ratelimit-limit: 60'",
      "AGENT: 'x-ratelimit-remaining: 59'",
      "AGENT: ''",
      "AGENT: '{...response body...}'",
      "AGENT: ''",
      "Run command: `curl -I https://api.github.com`",
      "AGENT: '  -I = HEAD request (headers only, no body)'",
      "AGENT: ''",
      "AGENT: '--- Approach 2: Download Files ---'",
      "Run command: `curl -O https://example.com/file.zip`",
      "AGENT: '  -O = Save with original filename (file.zip)'",
      "AGENT: ''",
      "Run command: `curl -o myfile.zip https://example.com/file.zip`",
      "AGENT: '  -o = Save with custom filename'",
      "AGENT: ''",
      "Run command: `curl -# -O https://example.com/large-file.iso`",
      "AGENT: '  -# = Show progress bar'",
      "AGENT: '######################################################################## 100.0%'",
      "AGENT: ''",
      "Run command: `curl -C - -O https://example.com/large-file.iso`",
      "AGENT: '  -C - = Resume interrupted download'",
      "AGENT: ''",
      "AGENT: '--- Approach 3: POST Requests with Data ---'",
      "Run command: `curl -X POST https://api.example.com/users -d \"name=John&email=john@example.com\"`",
      "AGENT: '  -X POST = HTTP method'",
      "AGENT: '  -d = Data (form-encoded by default)'",
      "AGENT: ''",
      "Run command: `curl -X POST https://api.example.com/users -H \"Content-Type: application/json\" -d '{\"name\":\"John\",\"email\":\"john@example.com\"}'`",
      "AGENT: '  -H = Custom header'",
      "AGENT: '  Sends JSON data'",
      "AGENT: ''",
      "AGENT: 'From file:'",
      "Create tool: `cat > user.json << 'EOF'`",
      "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"age\": 30\n}\nEOF",
      "Run command: `curl -X POST https://api.example.com/users -H \"Content-Type: application/json\" -d @user.json`",
      "AGENT: '  @user.json = Read data from file'",
      "AGENT: ''",
      "AGENT: '--- Approach 4: Authentication ---'",
      "Run command: `curl -u username:password https://api.example.com/private`",
      "AGENT: '  -u = Basic authentication'",
      "AGENT: ''",
      "Run command: `curl -H \"Authorization: Bearer eyJhbGci...token...\" https://api.example.com/private`",
      "AGENT: 'Bearer token authentication (JWT)'",
      "AGENT: ''",
      "Run command: `curl -H \"X-API-Key: your-api-key-here\" https://api.example.com/data`",
      "AGENT: 'API key authentication'",
      "AGENT: ''",
      "AGENT: '--- Approach 5: Custom Headers ---'",
      "Run command: `curl -H \"User-Agent: MyApp/1.0\" -H \"Accept: application/json\" -H \"X-Custom-Header: value\" https://api.example.com`",
      "AGENT: 'Multiple custom headers'",
      "AGENT: ''",
      "Run command: `curl -A \"Mozilla/5.0\" https://example.com`",
      "AGENT: '  -A = Set User-Agent (shortcut)'",
      "AGENT: ''",
      "Run command: `curl -H \"Accept-Encoding: gzip\" https://example.com | gunzip`",
      "AGENT: 'Request and decompress gzipped response'",
      "AGENT: ''",
      "AGENT: '--- Approach 6: Handle Cookies ---'",
      "Run command: `curl -c cookies.txt https://example.com/login -d \"user=john&pass=secret\"`",
      "AGENT: '  -c = Save cookies to file'",
      "AGENT: ''",
      "Run command: `curl -b cookies.txt https://example.com/dashboard`",
      "AGENT: '  -b = Load cookies from file'",
      "AGENT: '  Now authenticated!'",
      "AGENT: ''",
      "Run command: `curl -c cookies.txt -b cookies.txt https://example.com`",
      "AGENT: 'Save and load cookies in same request (session handling)'",
      "AGENT: ''",
      "AGENT: '--- Approach 7: PUT, PATCH, DELETE Requests ---'",
      "Run command: `curl -X PUT https://api.example.com/users/123 -H \"Content-Type: application/json\" -d '{\"name\":\"Jane Doe\"}'`",
      "AGENT: 'Update user with PUT'",
      "AGENT: ''",
      "Run command: `curl -X PATCH https://api.example.com/users/123 -H \"Content-Type: application/json\" -d '{\"email\":\"newemail@example.com\"}'`",
      "AGENT: 'Partial update with PATCH'",
      "AGENT: ''",
      "Run command: `curl -X DELETE https://api.example.com/users/123`",
      "AGENT: 'Delete resource'",
      "AGENT: ''",
      "AGENT: '--- Approach 8: Follow Redirects and Timeouts ---'",
      "Run command: `curl -L https://example.com/redirect`",
      "AGENT: '  -L = Follow redirects (301, 302)'",
      "AGENT: ''",
      "Run command: `curl --max-time 30 https://slow-site.com`",
      "AGENT: '  --max-time = Timeout after 30 seconds'",
      "AGENT: ''",
      "Run command: `curl --connect-timeout 10 --max-time 60 https://example.com`",
      "AGENT: '  --connect-timeout = Timeout for connection only'",
      "AGENT: '  --max-time = Total timeout'",
      "AGENT: ''",
      "AGENT: '--- Approach 9: Debugging and Verbose Output ---'",
      "Run command: `curl -v https://api.example.com`",
      "AGENT: '  -v = Verbose (shows request/response headers, SSL handshake)'",
      "AGENT: '* Trying 93.184.216.34:443...'",
      "AGENT: '* Connected to api.example.com'",
      "AGENT: '> GET / HTTP/2'",
      "AGENT: '> Host: api.example.com'",
      "AGENT: '> User-Agent: curl/7.81.0'",
      "AGENT: '< HTTP/2 200'",
      "AGENT: '< content-type: application/json'",
      "AGENT: ''",
      "Run command: `curl --trace-ascii trace.txt https://api.example.com`",
      "AGENT: 'Save full trace to file'",
      "AGENT: ''",
      "Run command: `curl -w \"HTTP Status: %{http_code}\\nTime: %{time_total}s\\n\" -o /dev/null -s https://example.com`",
      "AGENT: '  -w = Custom output format'",
      "AGENT: 'HTTP Status: 200'",
      "AGENT: 'Time: 0.245s'",
      "AGENT: ''",
      "AGENT: '--- Approach 10: wget for Downloads ---'",
      "Run command: `wget https://example.com/file.zip`",
      "AGENT: 'Simple download'",
      "AGENT: ''",
      "Run command: `wget -c https://example.com/large-file.iso`",
      "AGENT: '  -c = Continue interrupted download'",
      "AGENT: ''",
      "Run command: `wget -b https://example.com/large-file.iso`",
      "AGENT: '  -b = Background download'",
      "AGENT: 'Output will be written to 'wget-log'.'",
      "AGENT: ''",
      "Run command: `wget --limit-rate=1m https://example.com/file.zip`",
      "AGENT: 'Limit download speed to 1 MB/s'",
      "AGENT: ''",
      "Run command: `wget -i urls.txt`",
      "AGENT: 'Download all URLs from file'",
      "AGENT: ''",
      "AGENT: '--- Bonus: Advanced wget Usage ---'",
      "Run command: `wget -r -np -nd -A \"*.pdf\" https://example.com/documents/`",
      "AGENT: '  -r = Recursive'",
      "AGENT: '  -np = No parent (don\\'t ascend to parent directory)'",
      "AGENT: '  -nd = No directories (flat structure)'",
      "AGENT: '  -A = Accept only matching files'",
      "AGENT: 'Downloads all PDFs from the documents directory'",
      "AGENT: ''",
      "Run command: `wget -m -k -p https://example.com`",
      "AGENT: '  -m = Mirror (infinite recursion depth)'",
      "AGENT: '  -k = Convert links for local viewing'",
      "AGENT: '  -p = Download page requisites (images, CSS, JS)'",
      "AGENT: 'Complete website mirror!'",
      "AGENT: ''",
      "AGENT: '--- Bonus: Practical curl Examples ---'",
      "AGENT: ''",
      "AGENT: 'Example 1: Test API endpoint health'",
      "Run command: `curl -f -s -o /dev/null -w \"%{http_code}\" https://api.example.com/health`",
      "AGENT: '200  ← API is healthy'",
      "AGENT: ''",
      "AGENT: 'Example 2: GraphQL query'",
      "Run command: `curl -X POST https://api.example.com/graphql -H \"Content-Type: application/json\" -d '{\"query\":\"{users{id name}}\"}'`",
      "AGENT: ''",
      "AGENT: 'Example 3: Upload file'",
      "Run command: `curl -F \"file=@document.pdf\" -F \"description=My Document\" https://api.example.com/upload`",
      "AGENT: '  -F = Form data (multipart/form-data)'",
      "AGENT: ''",
      "AGENT: 'Example 4: Test response time'",
      "Create tool: `cat > test-api-speed.sh << 'EOF'`",
      "#!/bin/bash\nfor i in {1..10}; do\n  curl -w \"Request $i: %{time_total}s\\n\" -o /dev/null -s https://api.example.com\ndone\nEOF",
      "Run command: `chmod +x test-api-speed.sh && ./test-api-speed.sh`",
      "AGENT: 'Request 1: 0.234s'",
      "AGENT: 'Request 2: 0.189s'",
      "AGENT: '...'",
      "AGENT: ''",
      "AGENT: 'Example 5: Download with progress bar'",
      "Run command: `curl --progress-bar -O https://example.com/file.zip`",
      "AGENT: '######################################################################## 100.0%'",
      "AGENT: ''",
      "AGENT: 'Example 6: Check SSL certificate'",
      "Run command: `curl -vI https://example.com 2>&1 | grep -A 10 'SSL certificate'`",
      "AGENT: ''",
      "AGENT: 'Example 7: Test load balancer'",
      "Run command: `for i in {1..5}; do curl -s https://api.example.com | grep server-id; done`",
      "AGENT: 'Shows which backend server responds (if header present)'",
      "AGENT: ''",
      "AGENT: '--- Bonus: curl vs wget ---'",
      "AGENT: ''",
      "AGENT: 'Use curl when:'",
      "AGENT: '  ✓ Testing APIs (POST, PUT, DELETE, custom headers)'",
      "AGENT: '  ✓ Need detailed control over requests'",
      "AGENT: '  ✓ Working with authentication/cookies'",
      "AGENT: '  ✓ Sending JSON data'",
      "AGENT: '  ✓ Scripting HTTP interactions'",
      "AGENT: '  ✓ Debugging HTTP issues'",
      "AGENT: ''",
      "AGENT: 'Use wget when:'",
      "AGENT: '  ✓ Downloading files (especially large ones)'",
      "AGENT: '  ✓ Recursive downloads'",
      "AGENT: '  ✓ Mirroring websites'",
      "AGENT: '  ✓ Batch downloads from file list'",
      "AGENT: '  ✓ Background downloads'",
      "AGENT: '  ✓ Resuming interrupted downloads'",
      "AGENT: ''",
      "AGENT: '✓ SOLUTION SUMMARY:'",
      "AGENT: '  ✓ Made GET requests with curl for API testing.'",
      "AGENT: '  ✓ Downloaded files with -O (original name) or -o (custom name).'",
      "AGENT: '  ✓ Sent POST/PUT/PATCH/DELETE requests with JSON data.'",
      "AGENT: '  ✓ Authenticated with Basic Auth, Bearer tokens, API keys.'",
      "AGENT: '  ✓ Added custom headers with -H flag.'",
      "AGENT: '  ✓ Handled cookies with -c (save) and -b (load).'",
      "AGENT: '  ✓ Debugged requests with -v (verbose) and -w (write-out).'",
      "AGENT: '  ✓ Used wget for recursive downloads and website mirroring.'",
      "AGENT: '  ✓ Applied timeouts, redirects, and error handling.'",
      "AGENT: '  ✓ You now master HTTP operations from command line! 🌐'"
    ],
    "commands": ["curl", "wget", "jq", "gunzip"],
    "packages": {
      "debian_ubuntu": ["curl", "wget", "jq"],
      "arch": ["curl", "wget", "jq"]
    },
    "related_commands": ["httpie", "aria2c", "lynx", "w3m"],
    "complexity": "intermediate",
    "tags": ["curl", "wget", "http", "api-testing", "rest", "json", "web", "download", "authentication", "headers"]
  }
]
