[
  {
    "id": "cmd_useradd_001",
    "command": "useradd",
    "scenario": "Create new user account with proper configuration",
    "problem": "Need to add new user to the system with home directory and shell",
    "solution": "Use useradd/adduser to create user with appropriate settings",
    "steps": [
      "Create basic user (Ubuntu/Debian): sudo adduser username",
      "Interactive, prompts for password and details",
      "Creates home directory automatically",
      "Create user (Arch/minimal): sudo useradd -m username",
      "-m creates home directory",
      "Set password: sudo passwd username",
      "Full user creation command: sudo useradd -m -s /bin/bash -c 'Full Name' username",
      "-s sets default shell, -c sets comment/full name",
      "With specific UID: sudo useradd -m -u 1500 username",
      "Useful for keeping UIDs consistent across systems",
      "With specific group: sudo useradd -m -g groupname username",
      "-g sets primary group",
      "Multiple groups: sudo useradd -m -G group1,group2,group3 username",
      "-G adds to supplementary groups",
      "Create system user: sudo useradd -r -s /usr/sbin/nologin svc_account",
      "-r creates system account, no login shell",
      "With home directory path: sudo useradd -m -d /custom/path username",
      "With expiry date: sudo useradd -m -e 2025-12-31 username",
      "Create skeleton files: sudo useradd -m -k /etc/skel username",
      "-k specifies skeleton directory",
      "No home directory: sudo useradd -M username",
      "-M explicitly prevents home creation",
      "Verify user created: id username",
      "Or: grep username /etc/passwd",
      "Check home directory: ls -la /home/username",
      "Add user to sudo group (Ubuntu): sudo usermod -aG sudo username",
      "Add to wheel group (Arch): sudo usermod -aG wheel username",
      "Then: visudo to enable wheel group if needed",
      "Set password requirements: sudo chage -m 0 -M 90 -W 7 username",
      "-m min days, -M max days, -W warning days",
      "Force password change: sudo passwd -e username",
      "Lock account: sudo passwd -l username",
      "Unlock: sudo passwd -u username",
      "Delete user: sudo userdel username",
      "Delete with home: sudo userdel -r username",
      "Check user info: sudo chage -l username",
      "Edit user defaults: sudoedit /etc/default/useradd",
      "View skeleton: ls -la /etc/skel/",
      "Set custom shell: sudo usermod -s /bin/zsh username",
      "Disable login: sudo usermod -s /usr/sbin/nologin username",
      "Common user creation script:",
      "sudo useradd -m -s /bin/bash -c 'John Doe' -G sudo jdoe && sudo passwd jdoe",
      "Batch user creation: for user in user1 user2 user3; do sudo useradd -m $user; sudo passwd $user; done",
      "After creation: su - username to test"
    ],
    "commands": ["useradd", "adduser", "usermod", "passwd", "userdel", "chage", "id", "grep", "ls", "visudo", "su"],
    "packages": {
      "debian_ubuntu": ["passwd", "adduser"],
      "arch": ["shadow"]
    },
    "related_commands": ["usermod", "userdel", "passwd", "groupadd", "id"],
    "complexity": "intermediate",
    "tags": ["useradd", "user-management", "account-creation", "users", "system-administration"]
  },
  {
    "id": "cmd_cron_001",
    "command": "cron",
    "scenario": "Schedule automated tasks with cron",
    "problem": "Need to run script or command automatically at specific times/intervals",
    "solution": "Use crontab to schedule recurring tasks",
    "steps": [
      "Edit crontab: crontab -e",
      "Opens editor for current user's crontab",
      "First time asks for editor preference",
      "View current crontab: crontab -l",
      "Remove crontab: crontab -r",
      "Edit another user's crontab: sudo crontab -e -u username",
      "Crontab syntax: minute hour day month weekday command",
      "Fields: 0-59 0-23 1-31 1-12 0-7 (0 and 7 are Sunday)",
      "Every minute: * * * * * /path/to/command",
      "Every hour: 0 * * * * /path/to/command",
      "Runs at minute 0 of every hour",
      "Every day at 2:30 AM: 30 2 * * * /path/to/backup.sh",
      "Every week on Sunday: 0 0 * * 0 /path/to/weekly.sh",
      "Every month on 1st: 0 0 1 * * /path/to/monthly.sh",
      "Multiple times: 0 0,12 * * * /path/to/twice-daily.sh",
      "Runs at midnight and noon",
      "Every 5 minutes: */5 * * * * /path/to/script.sh",
      "Every 15 minutes: */15 * * * * /path/to/monitor.sh",
      "Range: 0 9-17 * * * /path/to/business-hours.sh",
      "Runs every hour from 9 AM to 5 PM",
      "Weekdays only: 0 9 * * 1-5 /path/to/weekday.sh",
      "Monday through Friday",
      "Specific days: 0 8 * * 1,3,5 /path/to/mwf.sh",
      "Monday, Wednesday, Friday",
      "Every 2 hours: 0 */2 * * * /path/to/script.sh",
      "Every 6 hours: 0 */6 * * * /path/to/script.sh",
      "Yearly: 0 0 1 1 * /path/to/yearly.sh",
      "January 1st at midnight",
      "Special strings: @reboot /path/to/startup.sh",
      "Runs once at boot",
      "@hourly /path/to/hourly.sh (equivalent to 0 * * * *)",
      "@daily /path/to/daily.sh or @midnight",
      "@weekly /path/to/weekly.sh",
      "@monthly /path/to/monthly.sh",
      "@yearly /path/to/yearly.sh or @annually",
      "With environment variables: SHELL=/bin/bash\\nPATH=/usr/local/bin:/usr/bin:/bin\\n0 * * * * command",
      "Redirect output: 0 * * * * /path/to/script.sh > /tmp/cron.log 2>&1",
      "2>&1 captures stderr too",
      "Silent (discard output): 0 * * * * /path/to/script.sh > /dev/null 2>&1",
      "Email results: MAILTO=user@example.com\\n0 0 * * * /path/to/script.sh",
      "Disable email: MAILTO=\"\"",
      "Check cron service: systemctl status cron (Ubuntu) or systemctl status cronie (Arch)",
      "Start cron: sudo systemctl start cron && sudo systemctl enable cron",
      "View cron logs: grep CRON /var/log/syslog or journalctl -u cron",
      "System crontab: sudo nano /etc/crontab",
      "Has additional user field: minute hour day month weekday user command",
      "Cron directories: /etc/cron.{hourly,daily,weekly,monthly}/",
      "Drop executable scripts here (no extension)",
      "Test cron job: Run command manually first",
      "Common issues: Path not set (use absolute paths), no execute permission (chmod +x script.sh)",
      "Script not executable: Make sure first line is #!/bin/bash",
      "Debugging: Add logging to script, check /var/log/syslog",
      "Disable cron job: Comment out with #: # 0 0 * * * /path/to/disabled.sh",
      "Examples: Database backup: 0 2 * * * /usr/local/bin/backup-db.sh",
      "Clear cache: 0 3 * * * find /var/cache/app -mtime +7 -delete",
      "System update: 0 4 * * 0 apt update && apt upgrade -y (weekly Sunday 4 AM)",
      "Disk cleanup: 0 0 * * * find /tmp -mtime +7 -delete"
    ],
    "commands": ["crontab", "systemctl", "grep", "journalctl", "nano", "chmod", "find"],
    "packages": {
      "debian_ubuntu": ["cron"],
      "arch": ["cronie"]
    },
    "related_commands": ["at", "systemd-timer", "anacron"],
    "complexity": "intermediate",
    "tags": ["cron", "crontab", "scheduling", "automation", "scheduled-tasks"]
  },
  {
    "id": "cmd_lsof_001",
    "command": "lsof",
    "scenario": "Find which process is using a file or port",
    "problem": "File is locked or port is already in use, need to identify the process",
    "solution": "Use lsof to list open files and network connections",
    "steps": [
      "Install if needed: sudo apt install lsof or sudo pacman -S lsof",
      "List all open files: sudo lsof",
      "Huge output, usually need to filter",
      "Specific file: lsof /path/to/file",
      "Shows processes using that file",
      "Specific directory: lsof +D /path/to/directory/",
      "+D searches recursively",
      "Faster non-recursive: lsof +d /path/",
      "By process ID: lsof -p <PID>",
      "Example: lsof -p 1234",
      "Exclude process: lsof -p ^<PID>",
      "By process name: lsof -c process_name",
      "Example: lsof -c nginx",
      "By user: lsof -u username",
      "All files opened by user",
      "Multiple users: lsof -u user1,user2",
      "Exclude user: lsof -u ^username",
      "Network connections: lsof -i",
      "Specific port: lsof -i :80",
      "Or: lsof -i :8080",
      "TCP only: lsof -i tcp",
      "UDP only: lsof -i udp",
      "Specific protocol and port: lsof -i tcp:22",
      "Port range: lsof -i :1-1024",
      "All listening ports: lsof -i -P -n | grep LISTEN",
      "-P shows port numbers (not names), -n shows IPs (not hostnames)",
      "IPv4 only: lsof -i 4",
      "IPv6 only: lsof -i 6",
      "Who's connected to server: lsof -i @server.com",
      "Deleted files still open: lsof | grep '(deleted)'",
      "Can cause disk space issues",
      "Processes can't unmount device: lsof +f -- /mnt/usb",
      "Or: lsof /mnt/usb",
      "Find who's using command: lsof -t -c sshd",
      "-t shows PID only (useful for piping)",
      "Kill processes using file: kill $(lsof -t /path/to/file)",
      "Or port: kill $(lsof -t -i:8080)",
      "Repeat every N seconds: lsof -i :80 -r 5",
      "Updates every 5 seconds",
      "AND conditions: lsof -u username -c process_name",
      "OR conditions: lsof -u username -o -c process_name",
      "-o means OR",
      "Count open files per process: lsof | awk '{print $1}' | sort | uniq -c | sort -rn | head",
      "Check file descriptor limit: lsof -p <PID> | wc -l",
      "Compare to: ulimit -n",
      "Common troubleshooting:",
      "Port 80 in use: sudo lsof -i :80",
      "Then: sudo kill <PID>",
      "Can't delete file: lsof /path/to/file (see who's using it)",
      "Can't unmount: lsof +f -- /mnt/point",
      "Then: fuser -km /mnt/point (kill and unmount)",
      "Database locked: lsof /var/lib/database/data.db",
      "Deleted log file recovery: lsof | grep '(deleted)' | grep '.log'",
      "Can recover: cat /proc/<PID>/fd/<FD> > recovered.log",
      "Check if file open: lsof /path/to/file || echo 'File not open'",
      "Alternative to lsof: fuser -v /path/to/file",
      "Or: ss -tulpn (for network ports)",
      "Systemd socket: systemctl list-sockets"
    ],
    "commands": ["lsof", "awk", "sort", "uniq", "wc", "kill", "fuser", "ss", "systemctl", "cat"],
    "packages": {
      "debian_ubuntu": ["lsof"],
      "arch": ["lsof"]
    },
    "related_commands": ["fuser", "ss", "netstat", "ps"],
    "complexity": "intermediate",
    "tags": ["lsof", "open-files", "ports", "process-management", "troubleshooting", "file-locks"]
  },
  {
    "id": "cmd_strace_001",
    "command": "strace",
    "scenario": "Debug application by tracing system calls",
    "problem": "Application failing mysteriously, need to see what it's actually doing at system level",
    "solution": "Use strace to trace system calls and signals",
    "steps": [
      "Install if needed: sudo apt install strace or sudo pacman -S strace",
      "Trace command: strace command arg1 arg2",
      "Example: strace ls -la",
      "Shows every system call",
      "Trace running process: strace -p <PID>",
      "Attach to already-running process",
      "Follow forks: strace -f command",
      "Traces child processes too",
      "With timestamps: strace -t command",
      "Absolute time",
      "Relative timestamps: strace -r command",
      "Time since previous call",
      "Time spent per call: strace -T command",
      "Shows duration",
      "Count calls: strace -c command",
      "Summary statistics at end",
      "Specific syscalls only: strace -e open,read,write command",
      "Only traces listed calls",
      "File operations: strace -e trace=file command",
      "Network operations: strace -e trace=network command",
      "Process operations: strace -e trace=process command",
      "IPC operations: strace -e trace=ipc command",
      "Exclude calls: strace -e '!futex,poll' command",
      "Save to file: strace -o output.txt command",
      "Append to file: strace -ff -o prefix command",
      "Creates prefix.<PID> files",
      "String length: strace -s 1000 command",
      "Default is 32 chars, -s increases",
      "Quiet mode: strace -q command",
      "Suppress attach/detach messages",
      "Verbose: strace -v command",
      "Unabbreviated output",
      "With return values: strace -e trace=open,read -e signal=none command",
      "Filter errors: strace -e trace=open -e status=failed command",
      "Only failed calls",
      "Common debugging scenarios:",
      "File not found: strace -e open,stat command 2>&1 | grep ENOENT",
      "Permission denied: strace -e open command 2>&1 | grep EACCES",
      "Config file location: strace -e open program 2>&1 | grep -i config",
      "Library loading: strace -e open ls 2>&1 | grep '\\.so'",
      "Network issues: strace -e trace=network curl example.com",
      "Slow application: strace -T -c slow_program",
      "See which calls take longest",
      "Fork bomb: strace -f -e trace=clone,fork malicious_program",
      "Hanging program: strace -p <PID> (see what it's waiting on)",
      "Port binding: strace -e trace=network server 2>&1 | grep bind",
      "Environment variables: strace -e execve command 2>&1 | less",
      "Search for specific file: strace command 2>&1 | grep '/etc/app.conf'",
      "Compare successful vs failed: strace -o good.txt working_cmd then strace -o bad.txt broken_cmd, then diff good.txt bad.txt",
      "Real example - Missing library: strace ./myapp 2>&1 | grep 'No such file'",
      "Shows missing .so files",
      "Then: sudo apt install lib<name> or locate lib<name>",
      "Performance: strace adds overhead, only for debugging",
      "Alternative: ltrace (library calls) or perf (profiling)",
      "Security: strace can see passwords/keys, use carefully",
      "Combine with grep: strace -e open app 2>&1 | grep -i 'error\\|fail'",
      "Full debugging: strace -f -T -tt -o trace.txt command then analyze trace.txt"
    ],
    "commands": ["strace", "grep", "diff", "less", "locate"],
    "packages": {
      "debian_ubuntu": ["strace"],
      "arch": ["strace"]
    },
    "related_commands": ["ltrace", "gdb", "perf", "lsof"],
    "complexity": "advanced",
    "tags": ["strace", "debugging", "system-calls", "troubleshooting", "diagnostic"]
  },
  {
    "id": "cmd_tcpdump_001",
    "command": "tcpdump",
    "scenario": "Capture and analyze network traffic",
    "problem": "Network connectivity issues or need to analyze application network behavior",
    "solution": "Use tcpdump to capture and inspect network packets",
    "steps": [
      "Install if needed: sudo apt install tcpdump or sudo pacman -S tcpdump",
      "List interfaces: tcpdump -D or ip link show",
      "Capture on interface: sudo tcpdump -i eth0",
      "Ctrl+C to stop",
      "Capture on all interfaces: sudo tcpdump -i any",
      "Limit packet count: sudo tcpdump -c 100",
      "Stops after 100 packets",
      "Save to file: sudo tcpdump -w capture.pcap",
      "PCAP format, can open in Wireshark",
      "Read from file: tcpdump -r capture.pcap",
      "With interface and file: sudo tcpdump -i eth0 -w capture.pcap",
      "Verbose output: sudo tcpdump -v",
      "More verbose: -vv or -vvv",
      "Show packet contents: sudo tcpdump -X",
      "Hex and ASCII",
      "Or ASCII only: sudo tcpdump -A",
      "Show ethernet headers: sudo tcpdump -e",
      "Don't resolve hostnames: sudo tcpdump -n",
      "Faster, shows IPs not names",
      "Don't resolve ports: sudo tcpdump -nn",
      "Shows port numbers",
      "Timestamp format: sudo tcpdump -tttt",
      "Human-readable timestamps",
      "Filter by host: sudo tcpdump host 192.168.1.100",
      "Source host: sudo tcpdump src 192.168.1.100",
      "Destination host: sudo tcpdump dst 192.168.1.100",
      "Filter by port: sudo tcpdump port 80",
      "Source port: sudo tcpdump src port 80",
      "Destination port: sudo tcpdump dst port 80",
      "Multiple ports: sudo tcpdump port 80 or port 443",
      "Port range: sudo tcpdump portrange 8000-9000",
      "Protocol filter: sudo tcpdump tcp",
      "Or: udp, icmp, arp",
      "Specific protocol+port: sudo tcpdump tcp port 22",
      "Network filter: sudo tcpdump net 192.168.1.0/24",
      "Combine filters (AND): sudo tcpdump host 192.168.1.100 and port 80",
      "OR filters: sudo tcpdump port 80 or port 443",
      "NOT filter: sudo tcpdump not port 22",
      "Complex filter: sudo tcpdump '(tcp port 80 or tcp port 443) and host 192.168.1.100'",
      "TCP flags - SYN: sudo tcpdump 'tcp[tcpflags] & tcp-syn != 0'",
      "TCP flags - FIN: sudo tcpdump 'tcp[tcpflags] & tcp-fin != 0'",
      "HTTP traffic: sudo tcpdump -A -s 0 'tcp port 80 and (((ip[2:2] - ((ip[0]&0xf)<<2)) - ((tcp[12]&0xf0)>>2)) != 0)'",
      "Or simpler: sudo tcpdump -A -s 0 port 80",
      "HTTPS traffic (encrypted): sudo tcpdump port 443",
      "DNS queries: sudo tcpdump -i any port 53",
      "ICMP (ping): sudo tcpdump icmp",
      "ARP requests: sudo tcpdump arp",
      "Broadcast traffic: sudo tcpdump broadcast",
      "Multicast: sudo tcpdump multicast",
      "Packet size filter: sudo tcpdump greater 1000",
      "Packets over 1000 bytes",
      "Or: less 100",
      "Rotating captures: sudo tcpdump -w capture.pcap -C 100",
      "-C 100 = new file every 100 MB",
      "With count: sudo tcpdump -w capture.pcap -C 100 -W 5",
      "-W 5 = keep only 5 files",
      "Real-time analysis: sudo tcpdump -i eth0 -l | grep 'search_term'",
      "-l line buffers output for piping",
      "Monitor HTTP POST: sudo tcpdump -A -s 0 'tcp port 80 and (tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x504f5354)'",
      "Common use cases:",
      "Debug API calls: sudo tcpdump -A -s 0 host api.example.com and port 443",
      "Find port scanner: sudo tcpdump -n 'tcp[tcpflags] & tcp-syn != 0'",
      "Monitor SSH traffic: sudo tcpdump port 22",
      "Capture slow query: sudo tcpdump -i any -n port 3306",
      "Bandwidth per host: sudo tcpdump -nn -q | awk '{print $3}' | cut -d: -f1 | sort | uniq -c | sort -n",
      "After capture: Open in Wireshark: wireshark capture.pcap",
      "Or tshark: tshark -r capture.pcap",
      "Security note: Captures all traffic including passwords on unencrypted connections"
    ],
    "commands": ["tcpdump", "ip", "wireshark", "tshark", "awk", "cut", "sort", "uniq", "grep"],
    "packages": {
      "debian_ubuntu": ["tcpdump", "wireshark"],
      "arch": ["tcpdump", "wireshark-qt"]
    },
    "related_commands": ["tshark", "wireshark", "nmap", "ss", "netstat"],
    "complexity": "advanced",
    "tags": ["tcpdump", "network-analysis", "packet-capture", "wireshark", "troubleshooting", "network-debugging"]
  }
]
