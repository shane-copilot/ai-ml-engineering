[
  {
    "id": "scenario_cron_automation_001",
    "command": "multiple",
    "scenario": "User: Help me automate tasks with cron jobs",
    "problem": "Need to schedule automated tasks but unfamiliar with cron",
    "solution": "Setup cron jobs safely with logging and error handling",
    "steps": [
      "USER SAYS: 'I want to automate some tasks but don't know how to use cron.'",
      "AGENT: 'I'll help you set up automated tasks with cron. What do you want to automate?'",
      "USER: 'Run a backup script every night at 2 AM'",
      "AGENT: 'Perfect! Let me set that up with proper logging and error handling.'",
      "Step 1: Verify cron",
      "AGENT: 'Step 1: Checking if cron is running...'",
      "Check cron: sudo systemctl status cron || sudo systemctl status cronie",
      "If inactive: sudo systemctl enable --now cron",
      "AGENT: 'Cron service is running. ✓'",
      "Step 2: Show current crontab",
      "AGENT: 'Step 2: Showing your current scheduled tasks...'",
      "List crontab: crontab -l",
      "If empty: AGENT: 'No tasks scheduled yet. I'll create your first one!'",
      "Step 3: Create backup script",
      "AGENT: 'Step 3: First, let me check if your backup script exists...'",
      "USER: 'It's at ~/backup.sh'",
      "Check: ls -lh ~/backup.sh",
      "Check executable: test -x ~/backup.sh && echo 'Executable' || echo 'Not executable'",
      "If not executable: chmod +x ~/backup.sh",
      "AGENT: 'Script is executable. ✓'",
      "Step 4: Add logging",
      "AGENT: 'Step 4: Adding logging to your script...'",
      "Wrap script: cat > ~/backup-wrapper.sh << 'EOF'",
      "#!/bin/bash",
      "LOG_FILE=~/backup.log",
      "echo \"=== Backup started: $(date) ===\" >> $LOG_FILE",
      "~/backup.sh >> $LOG_FILE 2>&1",
      "EXIT_CODE=$?",
      "if [ $EXIT_CODE -eq 0 ]; then",
      "  echo \"✓ Backup completed successfully\" >> $LOG_FILE",
      "else",
      "  echo \"✗ Backup failed with code $EXIT_CODE\" >> $LOG_FILE",
      "  # Send notification",
      "  notify-send 'Backup Failed' \"Check $LOG_FILE for details\"",
      "fi",
      "echo \"=== Backup finished: $(date) ===\" >> $LOG_FILE",
      "echo \"\" >> $LOG_FILE",
      "EOF",
      "Make executable: chmod +x ~/backup-wrapper.sh",
      "AGENT: 'Backup wrapper with logging created. ✓'",
      "Step 5: Test the script",
      "AGENT: 'Step 5: Testing backup script before scheduling...'",
      "Test: ~/backup-wrapper.sh",
      "Check log: tail -20 ~/backup.log",
      "AGENT: 'Test successful! Backup works and logs correctly. ✓'",
      "Step 6: Add to crontab",
      "AGENT: 'Step 6: Scheduling backup for 2 AM daily...'",
      "Add cron: (crontab -l 2>/dev/null; echo '0 2 * * * ~/backup-wrapper.sh') | crontab -",
      "Verify: crontab -l",
      "AGENT: 'Cron job added! Format: 0 2 * * * means:'",
      "AGENT: '- 0: minute 0'",
      "AGENT: '- 2: hour 2 (2 AM)'",
      "AGENT: '- *: every day'",
      "AGENT: '- *: every month'",
      "AGENT: '- *: every day of week'",
      "AGENT: 'Backup will run every night at 2 AM. ✓'",
      "Cron examples: AGENT: 'Want to see other scheduling examples?'",
      "USER: 'Yes'",
      "AGENT: 'Common cron schedule patterns:'",
      "Show examples: cat << 'EOF'",
      "Every minute:        * * * * *",
      "Every 5 minutes:     */5 * * * *",
      "Every hour:          0 * * * *",
      "Every day at 3 AM:   0 3 * * *",
      "Every Sunday at 2 AM: 0 2 * * 0",
      "Every weekday 9 AM:  0 9 * * 1-5",
      "First day of month:  0 0 1 * *",
      "Every 6 hours:       0 */6 * * *",
      "EOF",
      "USER: 'I also want to run a cleanup script every Sunday'",
      "AGENT: 'Adding cleanup job for Sundays at 3 AM...'",
      "Add cleanup: (crontab -l; echo '0 3 * * 0 ~/cleanup.sh >> ~/cleanup.log 2>&1') | crontab -",
      "AGENT: 'Added! Runs every Sunday at 3 AM. ✓'",
      "Create cron manager: AGENT: 'Creating cron management tool...'",
      "Create tool: cat > ~/cron-manager.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== Cron Job Manager ==='",
      "echo ''",
      "echo '1. List current jobs'",
      "echo '2. Add new job'",
      "echo '3. Remove job'",
      "echo '4. Test job now'",
      "echo '5. View cron logs'",
      "echo '6. Edit crontab'",
      "echo ''",
      "read -p 'Choose (1-6): ' OPT",
      "case $OPT in",
      "  1)",
      "    echo ''",
      "    echo '=== Your Scheduled Jobs ==='",
      "    crontab -l | nl",
      "    ;;",
      "  2)",
      "    echo ''",
      "    echo 'Schedule pattern examples:'",
      "    echo '  0 2 * * *    = Daily at 2 AM'",
      "    echo '  */5 * * * *  = Every 5 minutes'",
      "    echo '  0 3 * * 0    = Sundays at 3 AM'",
      "    echo ''",
      "    read -p 'Schedule (e.g., 0 2 * * *): ' SCHEDULE",
      "    read -p 'Command to run: ' COMMAND",
      "    (crontab -l 2>/dev/null; echo \"$SCHEDULE $COMMAND\") | crontab -",
      "    echo '✓ Job added'",
      "    ;;",
      "  3)",
      "    echo ''",
      "    crontab -l | nl",
      "    echo ''",
      "    read -p 'Line number to remove: ' LINE",
      "    crontab -l | sed \"${LINE}d\" | crontab -",
      "    echo '✓ Job removed'",
      "    ;;",
      "  4)",
      "    echo ''",
      "    crontab -l | nl",
      "    echo ''",
      "    read -p 'Line number to test: ' LINE",
      "    COMMAND=$(crontab -l | sed -n \"${LINE}p\" | cut -d' ' -f6-)",
      "    echo \"Running: $COMMAND\"",
      "    eval $COMMAND",
      "    ;;",
      "  5)",
      "    echo ''",
      "    echo '=== Recent Cron Logs ==='",
      "    sudo grep CRON /var/log/syslog | tail -20 || journalctl -u cron | tail -20",
      "    ;;",
      "  6)",
      "    crontab -e",
      "    ;;",
      "esac",
      "EOF",
      "Make executable: chmod +x ~/cron-manager.sh",
      "AGENT: 'Cron manager created! Run: ~/cron-manager.sh'",
      "Create cron checker: cat > ~/check-cron.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== Cron Health Check ==='",
      "echo ''",
      "echo '1. Service Status:'",
      "systemctl is-active cron 2>/dev/null || systemctl is-active cronie 2>/dev/null",
      "echo ''",
      "echo '2. Your Scheduled Jobs:'",
      "crontab -l | grep -v '^#' | grep -v '^$' | wc -l",
      "echo ' jobs scheduled'",
      "echo ''",
      "echo '3. Recent Executions:'",
      "sudo grep CRON /var/log/syslog 2>/dev/null | tail -5 || journalctl -u cron 2>/dev/null | tail -5",
      "echo ''",
      "echo '4. Next Scheduled Run:'",
      "echo 'Install \"at\" package to see next run times'",
      "EOF",
      "Make executable: chmod +x ~/check-cron.sh",
      "Create job template: cat > ~/cron-template.sh << 'EOF'",
      "#!/bin/bash",
      "# Cron Job Template",
      "# Add logging, error handling, and notifications",
      "",
      "TASK_NAME='My Task'",
      "LOG_FILE=~/cron-${TASK_NAME// /-}.log",
      "LOCK_FILE=/tmp/${TASK_NAME// /-}.lock",
      "",
      "# Prevent multiple instances",
      "if [ -f \"$LOCK_FILE\" ]; then",
      "  echo \"$(date): Task already running\" >> $LOG_FILE",
      "  exit 1",
      "fi",
      "touch $LOCK_FILE",
      "",
      "# Start logging",
      "echo \"=== $TASK_NAME started: $(date) ===\" >> $LOG_FILE",
      "",
      "# Your actual task here",
      "echo 'Doing work...' >> $LOG_FILE",
      "# YOUR COMMANDS HERE",
      "",
      "# Check result",
      "if [ $? -eq 0 ]; then",
      "  echo \"✓ Success\" >> $LOG_FILE",
      "else",
      "  echo \"✗ Failed\" >> $LOG_FILE",
      "  notify-send \"$TASK_NAME Failed\" 'Check log file'",
      "fi",
      "",
      "echo \"=== $TASK_NAME finished: $(date) ===\" >> $LOG_FILE",
      "echo '' >> $LOG_FILE",
      "",
      "# Cleanup",
      "rm $LOCK_FILE",
      "EOF",
      "Make executable: chmod +x ~/cron-template.sh",
      "AGENT: 'Job template created for future tasks. ✓'",
      "Email notifications setup: AGENT: 'Want email notifications for cron jobs?'",
      "USER: 'Yes'",
      "Install mailutils: sudo apt install mailutils || sudo pacman -S mailutils",
      "Set MAILTO: (crontab -l; echo 'MAILTO=your@email.com') | crontab -",
      "AGENT: 'Email notifications enabled. Failed jobs will email you. ✓'",
      "Add helpful aliases: cat >> ~/.bashrc << 'EOF'",
      "# Cron aliases",
      "alias cron-list='crontab -l'",
      "alias cron-edit='crontab -e'",
      "alias cron-logs='sudo grep CRON /var/log/syslog | tail -20 || journalctl -u cron | tail -20'",
      "alias cron-manager='~/cron-manager.sh'",
      "alias cron-check='~/check-cron.sh'",
      "EOF",
      "Source: source ~/.bashrc",
      "Create cron cheat sheet: cat > ~/cron-guide.txt << 'EOF'",
      "Cron Job Quick Reference",
      "",
      "=== Cron Format ===",
      "* * * * * command",
      "│ │ │ │ │",
      "│ │ │ │ └─── Day of week (0-7, 0 & 7 = Sunday)",
      "│ │ │ └───── Month (1-12)",
      "│ │ └─────── Day of month (1-31)",
      "│ └───────── Hour (0-23)",
      "└─────────── Minute (0-59)",
      "",
      "=== Examples ===",
      "*/5 * * * *      Every 5 minutes",
      "0 * * * *        Every hour",
      "0 2 * * *        2 AM daily",
      "0 2 * * 0        2 AM Sundays",
      "0 2 1 * *        2 AM first of month",
      "0 9-17 * * 1-5   9 AM to 5 PM weekdays",
      "*/30 9-17 * * *  Every 30 min, 9 AM-5 PM",
      "",
      "=== Special Strings ===",
      "@reboot          Run at startup",
      "@yearly/@annually Run once a year (0 0 1 1 *)",
      "@monthly         Run once a month (0 0 1 * *)",
      "@weekly          Run once a week (0 0 * * 0)",
      "@daily/@midnight Run once a day (0 0 * * *)",
      "@hourly          Run once an hour (0 * * * *)",
      "",
      "=== Best Practices ===",
      "1. Always use absolute paths",
      "2. Redirect output: >> /path/to/log 2>&1",
      "3. Test script before scheduling",
      "4. Use wrappers for logging",
      "5. Set MAILTO for error notifications",
      "",
      "=== Commands ===",
      "crontab -l       List jobs",
      "crontab -e       Edit jobs",
      "crontab -r       Remove all jobs",
      "cron-manager     Interactive manager",
      "cron-check       Health check",
      "EOF",
      "Final summary: AGENT: 'Cron automation setup complete! Summary:'",
      "AGENT: ''",
      "AGENT: '✓ Backup scheduled: Daily at 2 AM'",
      "AGENT: '✓ Cleanup scheduled: Sundays at 3 AM'",
      "AGENT: '✓ Logging enabled for all jobs'",
      "AGENT: '✓ Error notifications configured'",
      "AGENT: ''",
      "AGENT: 'Your scheduled jobs:'",
      "crontab -l | grep -v '^#'",
      "AGENT: ''",
      "AGENT: 'Tools created:'",
      "AGENT: '- ~/cron-manager.sh (manage jobs)'",
      "AGENT: '- ~/check-cron.sh (health check)'",
      "AGENT: '- ~/cron-template.sh (job template)'",
      "AGENT: '- ~/cron-guide.txt (reference)'",
      "AGENT: ''",
      "AGENT: 'Commands:'",
      "AGENT: '- cron-list (view jobs)'",
      "AGENT: '- cron-edit (edit jobs)'",
      "AGENT: '- cron-logs (view history)'",
      "AGENT: '- cron-manager (interactive tool)'",
      "AGENT: ''",
      "AGENT: 'Logs saved to:'",
      "AGENT: '- ~/backup.log (backup logs)'",
      "AGENT: '- ~/cleanup.log (cleanup logs)'",
      "AGENT: ''",
      "AGENT: 'Your tasks are now automated! ✓'"
    ],
    "commands": ["crontab", "systemctl", "chmod", "cat", "grep", "sed", "journalctl", "notify-send", "mail", "date", "eval", "wc", "nl", "cut"],
    "packages": {
      "debian_ubuntu": ["cron", "mailutils", "libnotify-bin"],
      "arch": ["cronie", "mailutils", "libnotify"]
    },
    "related_commands": ["crontab", "at", "systemctl", "anacron"],
    "complexity": "beginner",
    "tags": ["cron", "automation", "scheduling", "tasks", "scripts", "logging", "real-world", "ai-agent"]
  }
]
