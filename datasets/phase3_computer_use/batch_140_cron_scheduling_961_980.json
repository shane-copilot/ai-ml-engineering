[
  {
    "id": "scenario_cron_scheduling_143",
    "command": "cron",
    "scenario": "Schedule automated tasks with cron - run scripts, backups, and maintenance jobs automatically.",
    "problem": "Need to automate recurring tasks like backups, log rotation, system monitoring, database maintenance, report generation. Want to schedule tasks at specific times (daily, weekly, hourly, custom intervals) and manage cron jobs properly.",
    "solution": "Master crontab syntax for scheduling, understand cron time format, use crontab -e to edit jobs, view logs in /var/log/cron, handle environment variables, redirect output, and create reliable automated tasks that run even when not logged in.",
    "steps": [
      "USER SAYS: 'I need to run backups daily at 2AM, check disk space every hour, and generate reports every Monday. How do I schedule these tasks to run automatically?'",
      "AGENT: 'Let me show you cron job scheduling! We'll master crontab syntax, schedule various tasks, handle output and errors, and create robust automation.'",
      "AGENT: ''",
      "AGENT: '🔍 RESEARCH PHASE: Cron job scheduling...'",
      "AGENT: '[Searching] \"cron crontab scheduling syntax automated tasks\"'",
      "AGENT: '[Found] crontab -e edits user cron jobs.'",
      "AGENT: '[Found] Syntax: minute hour day month weekday command.'",
      "AGENT: '[Found] Special strings: @daily, @hourly, @reboot.'",
      "AGENT: '[Found] Jobs run even when user not logged in.'",
      "AGENT: '✓ Research complete! Let's schedule tasks.'",
      "AGENT: ''",
      "AGENT: '--- Approach 1: View Existing Cron Jobs ---'",
      "Run command: `crontab -l`",
      "AGENT: 'Lists your cron jobs'",
      "AGENT: 'Output: no crontab for user (if none exist)'",
      "AGENT: ''",
      "Run command: `sudo crontab -l`",
      "AGENT: 'Lists root\\'s cron jobs'",
      "AGENT: ''",
      "Run command: `sudo crontab -u alice -l`",
      "AGENT: '  -u = Specify user'",
      "AGENT: 'Lists alice\\'s cron jobs'",
      "AGENT: ''",
      "AGENT: '--- Approach 2: Edit Cron Jobs ---'",
      "Run command: `crontab -e`",
      "AGENT: 'Opens editor to add/edit cron jobs'",
      "AGENT: 'First time: asks which editor (nano, vim, etc.)'",
      "AGENT: ''",
      "AGENT: '--- Approach 3: Crontab Syntax ---'",
      "AGENT: ''",
      "AGENT: 'Format:'",
      "AGENT: '  * * * * * command'",
      "AGENT: '  │ │ │ │ │'",
      "AGENT: '  │ │ │ │ └─── Day of week (0-7, 0 or 7 = Sunday)'",
      "AGENT: '  │ │ │ └───── Month (1-12)'",
      "AGENT: '  │ │ └─────── Day of month (1-31)'",
      "AGENT: '  │ └───────── Hour (0-23)'",
      "AGENT: '  └─────────── Minute (0-59)'",
      "AGENT: ''",
      "AGENT: 'Examples:'",
      "AGENT: '  0 2 * * *     = 2:00 AM every day'",
      "AGENT: '  30 14 * * *   = 2:30 PM every day'",
      "AGENT: '  0 * * * *     = Every hour'",
      "AGENT: '  */15 * * * *  = Every 15 minutes'",
      "AGENT: '  0 0 * * 0     = Midnight every Sunday'",
      "AGENT: '  0 0 1 * *     = Midnight on 1st of month'",
      "AGENT: '  0 2 * * 1-5   = 2 AM Monday-Friday'",
      "AGENT: '  0 0 1 1 *     = Midnight Jan 1st'",
      "AGENT: ''",
      "AGENT: '--- Approach 4: Create Basic Cron Jobs ---'",
      "Run command: `crontab -e`",
      "AGENT: ''",
      "AGENT: 'Add line:'",
      "AGENT: '# Run backup at 2 AM daily'",
      "AGENT: '0 2 * * * /home/user/backup.sh'",
      "AGENT: ''",
      "AGENT: 'Save and exit'",
      "AGENT: ''",
      "Run command: `crontab -l`",
      "AGENT: '# Run backup at 2 AM daily'",
      "AGENT: '0 2 * * * /home/user/backup.sh'",
      "AGENT: ''",
      "AGENT: '--- Approach 5: Special Time Strings ---'",
      "AGENT: ''",
      "AGENT: '@reboot    = Run at startup'",
      "AGENT: '@yearly    = Run once a year (0 0 1 1 *)'",
      "AGENT: '@annually  = Same as @yearly'",
      "AGENT: '@monthly   = Run once a month (0 0 1 * *)'",
      "AGENT: '@weekly    = Run once a week (0 0 * * 0)'",
      "AGENT: '@daily     = Run once a day (0 0 * * *)'",
      "AGENT: '@midnight  = Same as @daily'",
      "AGENT: '@hourly    = Run once an hour (0 * * * *)'",
      "AGENT: ''",
      "Run command: `crontab -e`",
      "AGENT: ''",
      "AGENT: '@daily /home/user/daily-backup.sh'",
      "AGENT: '@hourly /home/user/check-disk.sh'",
      "AGENT: '@reboot /home/user/startup.sh'",
      "AGENT: '@weekly /home/user/weekly-report.sh'",
      "AGENT: ''",
      "AGENT: '--- Approach 6: Complex Schedules ---'",
      "AGENT: ''",
      "AGENT: 'Every 15 minutes:'",
      "AGENT: '*/15 * * * * command'",
      "AGENT: ''",
      "AGENT: 'Every 2 hours:'",
      "AGENT: '0 */2 * * * command'",
      "AGENT: ''",
      "AGENT: 'Every weekday at 9 AM:'",
      "AGENT: '0 9 * * 1-5 command'",
      "AGENT: ''",
      "AGENT: 'Every 6 hours:'",
      "AGENT: '0 */6 * * * command'",
      "AGENT: ''",
      "AGENT: 'First Monday of month:'",
      "AGENT: '0 0 1-7 * 1 command'",
      "AGENT: ''",
      "AGENT: 'Multiple specific times:'",
      "AGENT: '0 8,12,18 * * * command  # 8 AM, noon, 6 PM'",
      "AGENT: ''",
      "AGENT: 'Range of hours:'",
      "AGENT: '0 9-17 * * * command  # Every hour 9 AM - 5 PM'",
      "AGENT: ''",
      "AGENT: '--- Approach 7: Handle Output and Logging ---'",
      "AGENT: ''",
      "AGENT: 'Redirect output to file:'",
      "AGENT: '0 2 * * * /home/user/backup.sh >> /var/log/backup.log 2>&1'",
      "AGENT: '  >>  = Append to file'",
      "AGENT: '  2>&1 = Redirect errors to same file'",
      "AGENT: ''",
      "AGENT: 'Discard output:'",
      "AGENT: '0 2 * * * /home/user/backup.sh > /dev/null 2>&1'",
      "AGENT: ''",
      "AGENT: 'Email output (if mail configured):'",
      "AGENT: 'MAILTO=admin@example.com'",
      "AGENT: '0 2 * * * /home/user/backup.sh'",
      "AGENT: ''",
      "AGENT: 'Disable email:'",
      "AGENT: 'MAILTO=\"\"'",
      "AGENT: '0 2 * * * /home/user/backup.sh'",
      "AGENT: ''",
      "AGENT: '--- Approach 8: Environment Variables ---'",
      "Run command: `crontab -e`",
      "AGENT: ''",
      "AGENT: '# Set environment variables at top'",
      "AGENT: 'SHELL=/bin/bash'",
      "AGENT: 'PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin'",
      "AGENT: 'MAILTO=admin@example.com'",
      "AGENT: 'HOME=/home/user'",
      "AGENT: ''",
      "AGENT: '# Jobs'",
      "AGENT: '0 2 * * * /home/user/backup.sh'",
      "AGENT: ''",
      "AGENT: 'Or source environment in job:'",
      "AGENT: '0 2 * * * . /home/user/.bashrc && /home/user/backup.sh'",
      "AGENT: ''",
      "AGENT: '--- Approach 9: Complete Crontab Example ---'",
      "Run command: `crontab -e`",
      "AGENT: ''",
      "Create tool: `cat << 'EOF'`",
      "# Environment\nSHELL=/bin/bash\nPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\nMAILTO=\"\"\n\n# Daily backup at 2 AM\n0 2 * * * /home/user/scripts/backup.sh >> /var/log/backup.log 2>&1\n\n# Check disk space every hour\n0 * * * * /home/user/scripts/check-disk.sh >> /var/log/disk-check.log 2>&1\n\n# Clear temp files daily at midnight\n0 0 * * * rm -rf /tmp/cache/* > /dev/null 2>&1\n\n# Database backup every Sunday at 3 AM\n0 3 * * 0 /home/user/scripts/db-backup.sh >> /var/log/db-backup.log 2>&1\n\n# Generate weekly report every Monday at 9 AM\n0 9 * * 1 /home/user/scripts/weekly-report.sh\n\n# Update system packages at 4 AM on 1st of month\n0 4 1 * * apt update && apt upgrade -y >> /var/log/apt-upgrade.log 2>&1\n\n# Monitor service every 5 minutes\n*/5 * * * * systemctl is-active nginx || systemctl restart nginx\n\n# Rotate logs daily at 11:59 PM\n59 23 * * * /usr/sbin/logrotate /etc/logrotate.conf\n\n# Startup script\n@reboot /home/user/scripts/startup.sh\nEOF",
      "AGENT: ''",
      "AGENT: '--- Approach 10: View Cron Logs ---'",
      "Run command: `grep CRON /var/log/syslog | tail -20`",
      "AGENT: 'Oct  8 02:00:01 server CRON[12345]: (user) CMD (/home/user/backup.sh)'",
      "AGENT: 'Oct  8 02:00:02 server CRON[12345]: (user) MAIL (mailed 123 bytes of output)'",
      "AGENT: 'Shows recent cron executions'",
      "AGENT: ''",
      "Run command: `sudo tail -f /var/log/syslog | grep CRON`",
      "AGENT: 'Real-time cron log monitoring'",
      "AGENT: ''",
      "Run command: `journalctl -u cron -f`",
      "AGENT: 'Follow cron service logs (systemd)'",
      "AGENT: ''",
      "AGENT: '--- Bonus: System-Wide Cron Directories ---'",
      "AGENT: ''",
      "AGENT: '/etc/cron.d/        - System cron jobs (any user)'",
      "AGENT: '/etc/cron.daily/    - Scripts run daily'",
      "AGENT: '/etc/cron.hourly/   - Scripts run hourly'",
      "AGENT: '/etc/cron.weekly/   - Scripts run weekly'",
      "AGENT: '/etc/cron.monthly/  - Scripts run monthly'",
      "AGENT: ''",
      "AGENT: 'Add script to daily cron:'",
      "Create tool: `sudo nano /etc/cron.daily/cleanup`",
      "#!/bin/bash\nrm -rf /tmp/cache/*\nfind /var/log -name \"*.log\" -mtime +30 -delete",
      "Run command: `sudo chmod +x /etc/cron.daily/cleanup`",
      "AGENT: '✓ Script will run daily automatically'",
      "AGENT: ''",
      "AGENT: '--- Bonus: Troubleshooting Cron Jobs ---'",
      "AGENT: ''",
      "AGENT: '1. Cron job not running?'",
      "AGENT: '   • Check cron service: systemctl status cron'",
      "AGENT: '   • Check logs: grep CRON /var/log/syslog'",
      "AGENT: '   • Test command manually first'",
      "AGENT: '   • Use absolute paths (/usr/bin/python, not python)'",
      "AGENT: ''",
      "AGENT: '2. Command works manually but not in cron?'",
      "AGENT: '   • Cron has minimal environment'",
      "AGENT: '   • Set PATH in crontab'",
      "AGENT: '   • Source .bashrc or .profile'",
      "AGENT: '   • Use full paths to commands'",
      "AGENT: ''",
      "AGENT: '3. No output or errors?'",
      "AGENT: '   • Add logging: >> /tmp/cron.log 2>&1'",
      "AGENT: '   • Check cron is running: ps aux | grep cron'",
      "AGENT: '   • Verify syntax with crontab -l'",
      "AGENT: ''",
      "AGENT: '--- Bonus: Cron Job Testing Script ---'",
      "Create tool: `cat > test-cron.sh << 'EOF'`",
      "#!/bin/bash\n# Test script for cron jobs\n\nLOG_FILE=\"/tmp/cron-test.log\"\n\necho \"=== Cron Job Test Run ===\" >> \"$LOG_FILE\"\necho \"Time: $(date)\" >> \"$LOG_FILE\"\necho \"User: $(whoami)\" >> \"$LOG_FILE\"\necho \"Home: $HOME\" >> \"$LOG_FILE\"\necho \"Path: $PATH\" >> \"$LOG_FILE\"\necho \"PWD: $PWD\" >> \"$LOG_FILE\"\necho \"\" >> \"$LOG_FILE\"\n\n# Test command here\necho \"Test successful!\" >> \"$LOG_FILE\"\necho \"==================\" >> \"$LOG_FILE\"\nEOF",
      "Run command: `chmod +x test-cron.sh`",
      "AGENT: ''",
      "AGENT: 'Add to cron:'",
      "AGENT: '*/5 * * * * /home/user/test-cron.sh'",
      "AGENT: ''",
      "AGENT: 'Wait 5 minutes, then check:'",
      "Run command: `cat /tmp/cron-test.log`",
      "AGENT: '=== Cron Job Test Run ==='",
      "AGENT: 'Time: Tue Oct  8 10:05:00 UTC 2025'",
      "AGENT: 'User: user'",
      "AGENT: 'Home: /home/user'",
      "AGENT: '...'",
      "AGENT: ''",
      "AGENT: '--- Bonus: Cron Management Script ---'",
      "Create tool: `cat > cron-manager.sh << 'EOF'`",
      "#!/bin/bash\nset -euo pipefail\n\ncase \"${1:-}\" in\n    list)\n        echo \"=== Current Cron Jobs ===\"\n        crontab -l\n        ;;\n    add)\n        if [ -z \"${2:-}\" ]; then\n            echo \"Usage: $0 add '<cron-line>'\"\n            echo \"Example: $0 add '0 2 * * * /path/to/script.sh'\"\n            exit 1\n        fi\n        (crontab -l 2>/dev/null; echo \"$2\") | crontab -\n        echo \"✓ Cron job added\"\n        ;;\n    remove)\n        LINE_NUM=\"${2:-}\"\n        if [ -z \"$LINE_NUM\" ]; then\n            echo \"Usage: $0 remove <line-number>\"\n            crontab -l | nl\n            exit 1\n        fi\n        crontab -l | sed \"${LINE_NUM}d\" | crontab -\n        echo \"✓ Cron job removed\"\n        ;;\n    logs)\n        echo \"=== Recent Cron Activity ===\"\n        grep CRON /var/log/syslog | tail -20\n        ;;\n    test)\n        SCRIPT=\"${2:-}\"\n        if [ -z \"$SCRIPT\" ]; then\n            echo \"Usage: $0 test <script-path>\"\n            exit 1\n        fi\n        echo \"Testing: $SCRIPT\"\n        bash -c \"$SCRIPT\"\n        ;;\n    *)\n        echo \"Cron Job Manager\"\n        echo \"\"\n        echo \"Usage: $0 <command> [args]\"\n        echo \"\"\n        echo \"Commands:\"\n        echo \"  list              Show current cron jobs\"\n        echo \"  add '<line>'      Add new cron job\"\n        echo \"  remove <num>      Remove cron job by line number\"\n        echo \"  logs              View recent cron activity\"\n        echo \"  test <script>     Test script before adding to cron\"\n        ;;\nesac\nEOF",
      "Run command: `chmod +x cron-manager.sh`",
      "Run command: `./cron-manager.sh list`",
      "Run command: `./cron-manager.sh add '0 3 * * * /home/user/backup.sh'`",
      "Run command: `./cron-manager.sh logs`",
      "AGENT: ''",
      "AGENT: '--- Bonus: Cron Time Calculator ---'",
      "AGENT: ''",
      "AGENT: 'Online tools:'",
      "AGENT: '  • crontab.guru - Human-readable cron schedule'",
      "AGENT: '  • crontab-generator.org - Visual cron builder'",
      "AGENT: ''",
      "AGENT: '✓ SOLUTION SUMMARY:'",
      "AGENT: '  ✓ Viewed cron jobs with crontab -l.'",
      "AGENT: '  ✓ Edited cron jobs with crontab -e.'",
      "AGENT: '  ✓ Mastered cron syntax: minute hour day month weekday.'",
      "AGENT: '  ✓ Used special strings: @daily, @hourly, @reboot.'",
      "AGENT: '  ✓ Created complex schedules with ranges and intervals.'",
      "AGENT: '  ✓ Handled output redirection and logging.'",
      "AGENT: '  ✓ Set environment variables for cron jobs.'",
      "AGENT: '  ✓ Viewed cron logs for troubleshooting.'",
      "AGENT: '  ✓ Used system cron directories (/etc/cron.daily, etc.).'",
      "AGENT: '  ✓ Created cron management and testing tools.'",
      "AGENT: '  ✓ You now master automated task scheduling with cron! ⏰'"
    ],
    "commands": ["cron", "crontab", "systemctl"],
    "packages": {
      "debian_ubuntu": ["cron"],
      "arch": ["cronie"]
    },
    "related_commands": ["at", "anacron", "systemd-timers"],
    "complexity": "intermediate",
    "tags": ["cron", "crontab", "scheduling", "automation", "periodic-tasks", "backup", "maintenance", "systemd"]
  }
]
