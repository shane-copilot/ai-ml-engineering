[
  {
    "id": "cmd_nice_001",
    "command": "nice",
    "scenario": "Run CPU-intensive task with lower priority",
    "problem": "Need to run heavy process without slowing down interactive work",
    "solution": "Use nice to set process priority (niceness)",
    "steps": [
      "Understanding niceness: -20 (highest priority) to 19 (lowest)",
      "Default: 0 (normal priority)",
      "Higher niceness = lower priority = nicer to other processes",
      "View current niceness: nice",
      "Shows default: 0",
      "Run with niceness: nice -n 10 command",
      "Runs command with niceness 10 (lower priority)",
      "Example: nice -n 15 ./heavy_script.sh",
      "Maximum nice (lowest priority): nice -n 19 command",
      "Common for background jobs",
      "Negative nice (higher priority): nice -n -10 command",
      "Requires root/sudo",
      "Example: sudo nice -n -5 important_process",
      "Default nice level: nice command",
      "Uses niceness 10",
      "With tar: nice -n 15 tar -czf backup.tar.gz /large/directory",
      "Doesn't slow down system",
      "With compile: nice -n 10 make -j4",
      "Build without impacting work",
      "Long-running task: nice -n 19 python long_analysis.py",
      "CPU-intensive script: nice -n 15 ./encode_video.sh",
      "View process niceness: ps -l",
      "Shows NI (niceness) column",
      "Or: ps -eo pid,ni,comm",
      "Or: top (shows NI column)",
      "Specific PID: ps -o pid,ni,comm -p 1234",
      "Change existing process: Use renice (separate command)",
      "Check running: ps aux | grep process_name",
      "Then: sudo renice -n 10 -p PID",
      "Nice with nohup: nohup nice -n 15 ./script.sh &",
      "Runs in background, survives logout",
      "In shell script: #!/bin/bash\\nnice -n 15 command",
      "Or: nice -n 15 bash script.sh",
      "Batch processing: nice -n 15 for file in *.mp4; do ffmpeg -i \"$file\" ...; done",
      "I/O bound vs CPU bound: Nice affects CPU scheduling",
      "For I/O, use ionice instead",
      "Understanding impact:",
      "Niceness 0: Normal priority",
      "Niceness 10: Slightly lower, good for background",
      "Niceness 15-19: Very low, won't interfere with interactive",
      "Niceness -20: Highest, use carefully (can freeze system)",
      "View system load: uptime",
      "Load average should stay reasonable",
      "With time: nice -n 15 time command",
      "Measures execution time",
      "Cron jobs: Set nice in crontab",
      "0 2 * * * nice -n 15 /path/to/backup.sh",
      "systemd service: Set Nice= in unit file",
      "[Service]\\nNice=15\\nExecStart=/path/to/command",
      "Check if needed: top or htop",
      "If CPU 100%, consider nice",
      "Combined with ionice: sudo nice -n 15 ionice -c3 command",
      "Low CPU and I/O priority",
      "Common scenarios:",
      "Video encoding: nice -n 15 ffmpeg -i input.mp4 output.mp4",
      "Data processing: nice -n 10 python process_data.py",
      "Compilation: nice -n 10 make",
      "Backup: nice -n 19 rsync -av /source/ /backup/",
      "Archive: nice -n 15 tar -czf archive.tar.gz /data/",
      "Without nice: Command runs at priority 0",
      "May slow down interactive work",
      "Historical note: Called 'nice' because it's 'nice' to other processes",
      "Limitations: Only affects CPU scheduling, not I/O",
      "Can't raise priority without root",
      "Alternative tools: ionice (I/O), chrt (real-time scheduling)",
      "Monitoring: watch -n 1 'ps -eo pid,ni,pcpu,comm | grep process'",
      "After running: Check completion: ps aux | grep command"
    ],
    "commands": ["nice", "renice", "ps", "top", "htop", "uptime", "time", "nohup", "ionice", "watch"],
    "packages": {
      "debian_ubuntu": ["coreutils", "util-linux"],
      "arch": ["coreutils", "util-linux"]
    },
    "related_commands": ["renice", "ionice", "chrt", "taskset"],
    "complexity": "intermediate",
    "tags": ["nice", "process-priority", "cpu", "scheduling", "performance", "background-tasks"]
  },
  {
    "id": "cmd_renice_001",
    "command": "renice",
    "scenario": "Change priority of running process",
    "problem": "Process consuming too much CPU, need to lower priority without killing it",
    "solution": "Use renice to adjust niceness of running process",
    "steps": [
      "Find process PID: ps aux | grep process_name",
      "Or: pidof process_name",
      "Or: pgrep process_name",
      "Check current priority: ps -o pid,ni,comm -p PID",
      "NI column shows niceness",
      "Change priority: renice -n 10 -p PID",
      "-n 10 sets niceness to 10 (lower priority)",
      "Lower priority: renice -n 15 -p 1234",
      "Higher priority: sudo renice -n -5 -p 1234",
      "Requires root for negative nice",
      "Maximum low: renice -n 19 -p PID",
      "Multiple PIDs: renice -n 10 -p 1234 -p 5678 -p 9012",
      "By user: sudo renice -n 10 -u username",
      "Changes all processes by user",
      "By group: sudo renice -n 10 -g groupname",
      "All processes in group",
      "Verify change: ps -o pid,ni,comm -p PID",
      "Or: top (press 'r' to renice interactively)",
      "In htop: Select process, press F7/F8 to adjust",
      "Relative change: Not supported directly",
      "Get current: CURRENT=$(ps -o ni= -p PID)",
      "Calculate new: NEW=$((CURRENT + 5))",
      "Apply: renice -n $NEW -p PID",
      "Background processes: pgrep -u $USER | xargs renice -n 15 -p",
      "Renice all user's processes",
      "Specific process by name: renice -n 10 -p $(pgrep firefox)",
      "Runaway process: Find with top/htop",
      "High CPU: sudo renice -n 19 -p PID",
      "Reduces impact immediately",
      "Batch renice: for pid in $(pgrep pattern); do sudo renice -n 15 -p $pid; done",
      "Common scenarios:",
      "Browser too slow system: renice -n 10 -p $(pgrep chrome)",
      "Build process: renice -n 15 -p $(pgrep make)",
      "Data processing: sudo renice -n 5 -p $(pgrep python)",
      "Increase priority for important task",
      "Video encoding: renice -n 19 -p $(pgrep ffmpeg)",
      "Restore normal: renice -n 0 -p PID",
      "Default priority",
      "Emergency: Reduce runaway process",
      "1. Find PID: ps aux | sort -k3 -rn | head",
      "Sorts by CPU usage",
      "2. Renice: sudo renice -n 19 -p PID",
      "3. Monitor: top",
      "Understanding limits:",
      "Non-root: Can only increase niceness (lower priority)",
      "Can't make negative nice",
      "Can't renice other users' processes",
      "Root: Can set any niceness",
      "Can renice any process",
      "Permanent change: Process retains new nice until exit",
      "Child processes: Inherit parent's niceness",
      "Unless explicitly set",
      "With systemd: Edit service file",
      "sudo systemctl edit service.service",
      "Add: [Service]\\nNice=10",
      "sudo systemctl daemon-reload",
      "sudo systemctl restart service",
      "Cron jobs: Wrapper script with renice",
      "Or use nice in crontab directly",
      "Monitoring: watch -n 2 'ps -eo pid,ni,pcpu,comm --sort=-pcpu | head -20'",
      "Top CPU processes with niceness",
      "Script example:",
      "#!/bin/bash",
      "PID=$(pgrep -f 'my_process')",
      "if [ -n \"$PID\" ]; then",
      "  sudo renice -n 15 -p $PID",
      "  echo \"Reniced $PID to 15\"",
      "fi",
      "Undo: Can't directly undo, must set to desired value",
      "If forgot original: ps -o pid,ni,comm to check similar processes",
      "Effects: CPU scheduler gives less time to high-nice processes",
      "Interactive tasks remain responsive",
      "Real-time scheduling: For stricter control, use chrt",
      "sudo chrt -f 50 command (FIFO, priority 50)",
      "Alternative: cpulimit command",
      "cpulimit -p PID -l 50 (limit to 50% CPU)",
      "Different mechanism than nice"
    ],
    "commands": ["renice", "ps", "pidof", "pgrep", "top", "htop", "xargs", "sort", "systemctl", "chrt", "cpulimit"],
    "packages": {
      "debian_ubuntu": ["util-linux", "cpulimit"],
      "arch": ["util-linux", "cpulimit"]
    },
    "related_commands": ["nice", "ionice", "chrt", "cpulimit", "taskset"],
    "complexity": "intermediate",
    "tags": ["renice", "process-priority", "cpu", "scheduling", "performance", "nice"]
  },
  {
    "id": "cmd_vmstat_001",
    "command": "vmstat",
    "scenario": "Monitor system performance and resource usage",
    "problem": "System slow, need overview of CPU, memory, I/O, and processes",
    "solution": "Use vmstat for real-time system statistics",
    "steps": [
      "Install: Usually pre-installed (procps or procps-ng package)",
      "One-time report: vmstat",
      "Shows averages since boot",
      "Continuous monitoring: vmstat 1",
      "Updates every 1 second",
      "With count: vmstat 2 10",
      "Every 2 seconds, 10 times then exits",
      "Understanding output columns:",
      "Procs section:",
      "  r: Processes waiting for runtime (runnable)",
      "  b: Processes in uninterruptible sleep (blocked)",
      "Memory section (in KB):",
      "  swpd: Virtual memory used",
      "  free: Free memory",
      "  buff: Memory used as buffers",
      "  cache: Memory used as cache",
      "Swap section:",
      "  si: Memory swapped in from disk (KB/s)",
      "  so: Memory swapped out to disk (KB/s)",
      "IO section:",
      "  bi: Blocks received from devices (blocks/s)",
      "  bo: Blocks sent to devices (blocks/s)",
      "System section:",
      "  in: Interrupts per second",
      "  cs: Context switches per second",
      "CPU section (percentage):",
      "  us: User CPU time",
      "  sy: System/kernel CPU time",
      "  id: Idle CPU time",
      "  wa: I/O wait time",
      "  st: Stolen time (VM hypervisor)",
      "Megabytes: vmstat -S M",
      "Shows values in MB instead of KB",
      "Active/inactive memory: vmstat -a",
      "Additional memory stats",
      "Disk stats: vmstat -d",
      "Per-disk I/O statistics",
      "Disk summary: vmstat -D",
      "Summary of disk activity",
      "Partition stats: vmstat -p /dev/sda1",
      "Stats for specific partition",
      "Slab info: vmstat -m",
      "Kernel slab cache information",
      "Timestamp: vmstat -t 1",
      "Adds timestamp to each line",
      "Wide output: vmstat -w",
      "Wider columns for readability",
      "Fork stats: vmstat -f",
      "Number of forks since boot",
      "Interpreting results:",
      "High r (>CPU cores): CPU bottleneck",
      "More processes than CPUs can handle",
      "High b: I/O bottleneck",
      "Processes waiting on disk",
      "High si/so: Swapping (memory pressure)",
      "System using disk for RAM",
      "High bi/bo: Disk I/O load",
      "Heavy read/write activity",
      "High wa: I/O wait",
      "CPU waiting for disk",
      "High us: User processes busy",
      "Normal for workloads",
      "High sy: Kernel busy",
      "System calls, kernel work",
      "Low id: CPU fully utilized",
      "High cs: Context switches",
      "May indicate too many processes",
      "Common scenarios:",
      "CPU bottleneck: r > CPU count, high us/sy, low id",
      "Solution: Add CPUs, optimize code, use nice",
      "Memory pressure: High swpd, high si/so",
      "Solution: Add RAM, kill processes, optimize",
      "I/O bottleneck: High b, high wa, high bi/bo",
      "Solution: Faster disk, optimize I/O, use SSD",
      "Balanced system: Low r/b, plenty free memory, low wa",
      "Monitoring workflow:",
      "1. Start: vmstat 2",
      "2. Observe patterns over time",
      "3. High wa? Check: iostat -x 2",
      "4. High memory? Check: free -h",
      "5. High CPU? Check: top or htop",
      "Save to file: vmstat 1 > vmstat_$(date +%Y%m%d_%H%M%S).log",
      "Watch specific metric: vmstat 1 | awk '{print $15}' (wa column)",
      "Alert on threshold: vmstat 1 | awk '{if($15>50) print \"High IO wait: \" $15}'",
      "Alerts if wa > 50%",
      "Compare: Run vmstat before and during load test",
      "Baseline vs stressed",
      "With timestamp: vmstat -t 1 | tee vmstat.log",
      "View and save simultaneously",
      "Alternatives:",
      "sar: More comprehensive (from sysstat)",
      "dstat: More colorful, combines vmstat/iostat",
      "nmon: Interactive performance tool",
      "Combination monitoring:",
      "Terminal 1: vmstat 2",
      "Terminal 2: iostat -x 2",
      "Terminal 3: top",
      "Terminal 4: iotop -o",
      "Complete view of system",
      "Script example:",
      "#!/bin/bash",
      "echo \"Monitoring system for 1 minute...\"",
      "vmstat 2 30 > /tmp/vmstat.log",
      "echo \"High wa times:\"",
      "awk '{if(NR>2 && $15>30) print}' /tmp/vmstat.log",
      "After analysis: Identify bottleneck and address",
      "Regular monitoring: Add to monitoring tool (Nagios, Zabbix, Prometheus)"
    ],
    "commands": ["vmstat", "iostat", "sar", "dstat", "free", "top", "htop", "iotop", "awk", "tee"],
    "packages": {
      "debian_ubuntu": ["procps"],
      "arch": ["procps-ng"]
    },
    "related_commands": ["iostat", "mpstat", "sar", "dstat", "top"],
    "complexity": "intermediate",
    "tags": ["vmstat", "performance", "monitoring", "cpu", "memory", "io", "system-stats"]
  },
  {
    "id": "cmd_free_001",
    "command": "free",
    "scenario": "Check system memory usage",
    "problem": "System slow or applications crashing, need to check if out of memory",
    "solution": "Use free to display memory and swap usage",
    "steps": [
      "Basic usage: free",
      "Shows memory in KB by default",
      "Human-readable: free -h",
      "Shows in MB/GB (most useful)",
      "Megabytes: free -m",
      "All values in MB",
      "Gigabytes: free -g",
      "All values in GB",
      "Understanding columns:",
      "total: Total installed RAM",
      "used: Memory in use",
      "free: Completely unused",
      "shared: Shared memory (tmpfs, etc.)",
      "buff/cache: Used for buffers and cache",
      "available: Estimate of free for new apps",
      "Mem row: Physical RAM",
      "Swap row: Swap space on disk",
      "Key metric: available column",
      "Better indicator than 'free'",
      "Linux uses free RAM for cache",
      "Continuous monitoring: free -h -s 2",
      "-s 2 updates every 2 seconds",
      "Exit: Ctrl+C",
      "Count updates: free -h -s 1 -c 10",
      "10 updates then exits",
      "Wide format: free -w",
      "Separates buffers and cache columns",
      "Show totals: free -h -t",
      "Adds total line at bottom",
      "Commit info: free -h -v",
      "Shows version",
      "Low/high stats: free -l",
      "Shows low and high memory (less common)",
      "Interpreting output:",
      "High used, low available: Memory pressure",
      "Risk of OOM (Out of Memory)",
      "High buff/cache: Normal and good",
      "Automatically freed when needed",
      "Swap used: Not necessarily bad",
      "But high swap activity (si/so in vmstat) is bad",
      "Low available: <10% of total",
      "Time to add RAM or kill processes",
      "Common scenarios:",
      "Check memory: free -h",
      "Quick status check",
      "Watch memory: watch -n 1 free -h",
      "Updates every second with watch command",
      "Memory leak detection: free -h -s 5",
      "Monitor 'available' decreasing over time",
      "Before/after: free -h before running app",
      "Then again after, compare",
      "In scripts: FREE_MEM=$(free -m | awk 'NR==2{print $7}')",
      "Gets available memory in MB",
      "Alert threshold: if [ $FREE_MEM -lt 500 ]; then echo \"Low memory!\"; fi",
      "Less than 500 MB available",
      "Clear cache (if needed): sudo sync && sudo sysctl -w vm.drop_caches=3",
      "Frees page cache, dentries, inodes",
      "Then: free -h to see difference",
      "Find memory hogs: ps aux --sort=-rss | head -10",
      "Top 10 by memory",
      "Or: top then press 'M' (sort by memory)",
      "Kill process: sudo kill PID",
      "Or: sudo killall process_name",
      "OOM killer: Check if triggered: dmesg | grep -i 'out of memory'",
      "Kernel kills processes when no memory",
      "Disable swap: sudo swapoff -a",
      "Enable swap: sudo swapon -a",
      "Check swap: swapon --show or cat /proc/swaps",
      "Add swap: sudo fallocate -l 2G /swapfile",
      "sudo mkswap /swapfile",
      "sudo swapon /swapfile",
      "Permanent swap: Add to /etc/fstab",
      "/swapfile none swap sw 0 0",
      "Understanding Linux memory:",
      "Used ≠ unavailable",
      "buff/cache freed automatically",
      "Focus on 'available' column",
      "Alternative tools:",
      "vmstat: More detailed including CPU",
      "top/htop: Interactive, per-process",
      "smem: Per-process memory with PSS",
      "cat /proc/meminfo: Raw kernel info",
      "Comparison commands:",
      "free -h: Quick overview",
      "vmstat 1: Continuous with CPU/IO",
      "top: Interactive by process",
      "cat /proc/meminfo: Detailed breakdown",
      "Export results: free -h > memory_status.txt",
      "With timestamp: echo \"$(date): $(free -h)\" >> memory_log.txt",
      "Monitoring script:",
      "#!/bin/bash",
      "while true; do",
      "  AVAIL=$(free -m | awk 'NR==2{print $7}')",
      "  if [ $AVAIL -lt 500 ]; then",
      "    echo \"$(date): Low memory: ${AVAIL}MB\" | tee -a memory_alert.log",
      "    # Send alert email or notification",
      "  fi",
      "  sleep 60",
      "done",
      "After checking: Take action based on results",
      "Add RAM, optimize apps, kill processes, add swap"
    ],
    "commands": ["free", "watch", "ps", "top", "vmstat", "sync", "sysctl", "kill", "killall", "dmesg", "swapon", "swapoff", "fallocate", "mkswap", "cat", "awk"],
    "packages": {
      "debian_ubuntu": ["procps"],
      "arch": ["procps-ng"]
    },
    "related_commands": ["top", "htop", "vmstat", "smem", "ps"],
    "complexity": "beginner",
    "tags": ["free", "memory", "ram", "swap", "monitoring", "system-resources"]
  },
  {
    "id": "cmd_uname_001",
    "command": "uname",
    "scenario": "Check system information and kernel version",
    "problem": "Need to identify OS, kernel version, architecture for troubleshooting or compatibility",
    "solution": "Use uname to display system information",
    "steps": [
      "Basic usage: uname",
      "Shows kernel name (Linux)",
      "All information: uname -a",
      "Most comprehensive output",
      "Shows: kernel name, hostname, kernel version, build date, architecture",
      "Kernel name: uname -s",
      "Usually 'Linux'",
      "Kernel release: uname -r",
      "Example: 5.15.0-76-generic or 6.1.38-1-lts",
      "Most useful for kernel version",
      "Kernel version: uname -v",
      "Build number and date",
      "Machine hardware: uname -m",
      "x86_64, i686, aarch64, armv7l",
      "Processor: uname -p",
      "Processor type (often 'unknown' on Linux)",
      "Hardware platform: uname -i",
      "Hardware platform (often 'unknown')",
      "Operating system: uname -o",
      "Usually 'GNU/Linux'",
      "Hostname: uname -n",
      "Same as hostname command",
      "Combined options: uname -srm",
      "Kernel name, release, machine",
      "Example: Linux 5.15.0-76-generic x86_64",
      "Common use cases:",
      "Check kernel: uname -r",
      "For kernel-specific issues",
      "Check architecture: uname -m",
      "Before installing software",
      "Full system info: uname -a",
      "For bug reports",
      "Script compatibility: ARCH=$(uname -m)",
      "Then: if [ \"$ARCH\" = \"x86_64\" ]; then ...; fi",
      "Kernel matching: KERNEL=$(uname -r)",
      "Install matching headers: sudo apt install linux-headers-$(uname -r)",
      "In documentation: Include uname -a output",
      "Helps with troubleshooting",
      "Distribution info: Not provided by uname",
      "Use: cat /etc/os-release",
      "Or: lsb_release -a (if installed)",
      "Or: cat /etc/*-release",
      "Full system info combination:",
      "uname -a",
      "cat /etc/os-release",
      "lscpu | head -15",
      "free -h",
      "df -h",
      "Check if 32 or 64 bit: uname -m",
      "x86_64 = 64-bit",
      "i386, i686 = 32-bit",
      "aarch64 = 64-bit ARM",
      "armv7l = 32-bit ARM",
      "Kernel modules: uname -r shows kernel version",
      "Modules in: /lib/modules/$(uname -r)/",
      "List modules: ls /lib/modules/$(uname -r)/kernel/",
      "Version comparison: CURRENT=$(uname -r)",
      "Compare with: dpkg -l | grep linux-image",
      "Or: rpm -qa | grep kernel (on RHEL/Fedora)",
      "System architecture for downloads:",
      "wget https://example.com/app-$(uname -m).tar.gz",
      "Downloads correct architecture",
      "In makefiles: ARCH=$(uname -m)",
      "Conditional compilation",
      "Docker containers: Often same as host",
      "Check: docker run ubuntu uname -a",
      "VM identification: Look for 'hypervisor' in:",
      "dmesg | grep -i hypervisor",
      "Or: systemd-detect-virt",
      "Alternative commands:",
      "hostnamectl: Shows hostname and OS info",
      "lscpu: Detailed CPU information",
      "lshw: Comprehensive hardware info",
      "dmidecode: BIOS/SMBIOS info (requires root)",
      "Distribution-specific:",
      "Ubuntu/Debian: lsb_release -a",
      "RHEL/CentOS: cat /etc/redhat-release",
      "Arch: cat /etc/arch-release",
      "All: cat /etc/os-release (standard)",
      "Export info: uname -a > system_info.txt",
      "With date: echo \"$(date): $(uname -a)\" >> system_log.txt",
      "Script example:",
      "#!/bin/bash",
      "echo \"System Information:\"",
      "echo \"Kernel: $(uname -r)\"",
      "echo \"Arch: $(uname -m)\"",
      "echo \"OS: $(cat /etc/os-release | grep PRETTY_NAME | cut -d'=' -f2 | tr -d '\"')\"",
      "echo \"CPU: $(lscpu | grep 'Model name' | cut -d':' -f2 | xargs)\"",
      "echo \"Memory: $(free -h | awk 'NR==2{print $2}')\"",
      "Understanding output:",
      "Kernel version format: MAJOR.MINOR.PATCH-BUILD",
      "Example: 5.15.0-76",
      "5 = major, 15 = minor, 0 = patch, 76 = build",
      "Common kernels:",
      "Ubuntu: 5.15.0-XX-generic",
      "Arch: 6.1.XX-X-lts or 6.X.X-arch1-1",
      "RHEL/CentOS: 3.10.0-XXX.el7.x86_64",
      "After checking: Use info for troubleshooting or compatibility checks"
    ],
    "commands": ["uname", "hostname", "cat", "lsb_release", "lscpu", "lshw", "dmidecode", "hostnamectl", "systemd-detect-virt", "dmesg", "dpkg", "rpm", "free", "df"],
    "packages": {
      "debian_ubuntu": ["coreutils"],
      "arch": ["coreutils"]
    },
    "related_commands": ["hostname", "lscpu", "lshw", "hostnamectl", "dmidecode"],
    "complexity": "beginner",
    "tags": ["uname", "system-info", "kernel", "architecture", "os-version"]
  }
]
