[
  {
    "id": "scenario_awk_text_processing_123",
    "command": "awk",
    "scenario": "Master awk for advanced text processing, log analysis, and data extraction.",
    "problem": "Need to process large log files, extract specific columns, calculate statistics, filter records based on conditions, format output, and generate reports from text data. Grep and cut are too limited.",
    "solution": "Use awk as a powerful text processing language with pattern matching, field extraction, conditional logic, arithmetic operations, associative arrays, and built-in functions for comprehensive data manipulation.",
    "steps": [
      "USER SAYS: 'I have massive log files and need to extract specific columns, calculate averages, filter by conditions, and generate reports. How can I do this efficiently?'",
      "AGENT: 'Awk is perfect for this! It's a powerful text processing language. Let me show you field extraction, filtering, calculations, and report generation.'",
      "AGENT: ''",
      "AGENT: '🔍 RESEARCH PHASE: Awk text processing...'",
      "AGENT: '[Searching] \"awk tutorial field extraction pattern matching calculations\"'",
      "AGENT: '[Found] Awk splits lines into fields automatically ($1, $2, $3...).'",
      "AGENT: '[Found] Pattern { action } syntax for conditional processing.'",
      "AGENT: '[Found] BEGIN/END blocks for initialization and summary.'",
      "AGENT: '[Found] Associative arrays for complex data aggregation.'",
      "AGENT: '✓ Research complete! Let's master awk.'",
      "AGENT: ''",
      "AGENT: '--- Approach 1: Basic Field Extraction ---'",
      "Create tool: `cat > access.log << 'EOF'`",
      "192.168.1.100 - - [08/Oct/2025:10:00:00] \"GET /api/users HTTP/1.1\" 200 1234\n192.168.1.101 - - [08/Oct/2025:10:00:05] \"POST /api/login HTTP/1.1\" 200 567\n192.168.1.102 - - [08/Oct/2025:10:00:10] \"GET /api/products HTTP/1.1\" 404 89\n192.168.1.100 - - [08/Oct/2025:10:00:15] \"GET /api/orders HTTP/1.1\" 200 2345\n192.168.1.103 - - [08/Oct/2025:10:00:20] \"POST /api/checkout HTTP/1.1\" 500 123\nEOF",
      "AGENT: ''",
      "AGENT: 'Extract IP addresses (first field):'",
      "Run command: `awk '{print $1}' access.log`",
      "AGENT: '192.168.1.100'",
      "AGENT: '192.168.1.101'",
      "AGENT: '192.168.1.102'",
      "AGENT: '192.168.1.100'",
      "AGENT: '192.168.1.103'",
      "AGENT: ''",
      "AGENT: 'Extract HTTP method and URL:'",
      "Run command: `awk '{print $6, $7}' access.log`",
      "AGENT: '\"GET /api/users'",
      "AGENT: '\"POST /api/login'",
      "AGENT: '\"GET /api/products'",
      "AGENT: '\"GET /api/orders'",
      "AGENT: '\"POST /api/checkout'",
      "AGENT: ''",
      "AGENT: 'Extract status code and bytes:'",
      "Run command: `awk '{print $9, $10}' access.log`",
      "AGENT: '200 1234'",
      "AGENT: '200 567'",
      "AGENT: '404 89'",
      "AGENT: '200 2345'",
      "AGENT: '500 123'",
      "AGENT: ''",
      "AGENT: '--- Approach 2: Pattern Matching and Filtering ---'",
      "AGENT: 'Filter only 200 status codes:'",
      "Run command: `awk '$9 == 200' access.log`",
      "AGENT: '192.168.1.100 - - [08/Oct/2025:10:00:00] \"GET /api/users HTTP/1.1\" 200 1234'",
      "AGENT: '192.168.1.101 - - [08/Oct/2025:10:00:05] \"POST /api/login HTTP/1.1\" 200 567'",
      "AGENT: '192.168.1.100 - - [08/Oct/2025:10:00:15] \"GET /api/orders HTTP/1.1\" 200 2345'",
      "AGENT: ''",
      "AGENT: 'Filter errors (status >= 400):'",
      "Run command: `awk '$9 >= 400' access.log`",
      "AGENT: '192.168.1.102 - - [08/Oct/2025:10:00:10] \"GET /api/products HTTP/1.1\" 404 89'",
      "AGENT: '192.168.1.103 - - [08/Oct/2025:10:00:20] \"POST /api/checkout HTTP/1.1\" 500 123'",
      "AGENT: ''",
      "AGENT: 'Filter POST requests:'",
      "Run command: `awk '$6 ~ /POST/' access.log`",
      "AGENT: '192.168.1.101 - - [08/Oct/2025:10:00:05] \"POST /api/login HTTP/1.1\" 200 567'",
      "AGENT: '192.168.1.103 - - [08/Oct/2025:10:00:20] \"POST /api/checkout HTTP/1.1\" 500 123'",
      "AGENT: ''",
      "AGENT: 'Filter specific IP:'",
      "Run command: `awk '$1 == \"192.168.1.100\"' access.log`",
      "AGENT: '192.168.1.100 - - [08/Oct/2025:10:00:00] \"GET /api/users HTTP/1.1\" 200 1234'",
      "AGENT: '192.168.1.100 - - [08/Oct/2025:10:00:15] \"GET /api/orders HTTP/1.1\" 200 2345'",
      "AGENT: ''",
      "AGENT: '--- Approach 3: Calculations and Statistics ---'",
      "AGENT: 'Count total requests:'",
      "Run command: `awk 'END {print NR}' access.log`",
      "AGENT: '5'",
      "AGENT: ''",
      "AGENT: 'Calculate total bytes transferred:'",
      "Run command: `awk '{sum += $10} END {print \"Total bytes:\", sum}' access.log`",
      "AGENT: 'Total bytes: 4358'",
      "AGENT: ''",
      "AGENT: 'Calculate average response size:'",
      "Run command: `awk '{sum += $10; count++} END {print \"Average:\", sum/count, \"bytes\"}' access.log`",
      "AGENT: 'Average: 871.6 bytes'",
      "AGENT: ''",
      "AGENT: 'Count requests by status code:'",
      "Run command: `awk '{status[$9]++} END {for (s in status) print s, status[s]}' access.log`",
      "AGENT: '200 3'",
      "AGENT: '404 1'",
      "AGENT: '500 1'",
      "AGENT: ''",
      "AGENT: '--- Approach 4: BEGIN and END Blocks ---'",
      "Run command: `awk 'BEGIN {print \"=== Access Log Analysis ===\"} {count++; bytes+=$10} END {print \"Total requests:\", count; print \"Total bytes:\", bytes}' access.log`",
      "AGENT: '=== Access Log Analysis ==='",
      "AGENT: 'Total requests: 5'",
      "AGENT: 'Total bytes: 4358'",
      "AGENT: ''",
      "AGENT: '--- Approach 5: Associative Arrays (Powerful!) ---'",
      "AGENT: 'Count requests per IP:'",
      "Run command: `awk '{ip[$1]++} END {for (i in ip) print i, ip[i]}' access.log`",
      "AGENT: '192.168.1.100 2'",
      "AGENT: '192.168.1.101 1'",
      "AGENT: '192.168.1.102 1'",
      "AGENT: '192.168.1.103 1'",
      "AGENT: ''",
      "AGENT: 'Calculate bytes per IP:'",
      "Run command: `awk '{ip[$1]+=$10} END {for (i in ip) print i, ip[i], \"bytes\"}' access.log`",
      "AGENT: '192.168.1.100 3579 bytes'",
      "AGENT: '192.168.1.101 567 bytes'",
      "AGENT: '192.168.1.102 89 bytes'",
      "AGENT: '192.168.1.103 123 bytes'",
      "AGENT: ''",
      "AGENT: '--- Approach 6: Formatted Output ---'",
      "Run command: `awk 'BEGIN {printf \"%-15s %-8s %-10s\\n\", \"IP\", \"Status\", \"Bytes\"} {printf \"%-15s %-8s %-10s\\n\", $1, $9, $10}' access.log`",
      "AGENT: 'IP              Status   Bytes     '",
      "AGENT: '192.168.1.100   200      1234      '",
      "AGENT: '192.168.1.101   200      567       '",
      "AGENT: '192.168.1.102   404      89        '",
      "AGENT: '192.168.1.100   200      2345      '",
      "AGENT: '192.168.1.103   500      123       '",
      "AGENT: ''",
      "AGENT: '--- Approach 7: Conditional Actions ---'",
      "Run command: `awk '{if ($9 >= 500) print \"ERROR:\", $0; else if ($9 >= 400) print \"WARNING:\", $0; else print \"OK:\", $0}' access.log`",
      "AGENT: 'OK: 192.168.1.100 - - [08/Oct/2025:10:00:00] \"GET /api/users HTTP/1.1\" 200 1234'",
      "AGENT: 'OK: 192.168.1.101 - - [08/Oct/2025:10:00:05] \"POST /api/login HTTP/1.1\" 200 567'",
      "AGENT: 'WARNING: 192.168.1.102 - - [08/Oct/2025:10:00:10] \"GET /api/products HTTP/1.1\" 404 89'",
      "AGENT: 'OK: 192.168.1.100 - - [08/Oct/2025:10:00:15] \"GET /api/orders HTTP/1.1\" 200 2345'",
      "AGENT: 'ERROR: 192.168.1.103 - - [08/Oct/2025:10:00:20] \"POST /api/checkout HTTP/1.1\" 500 123'",
      "AGENT: ''",
      "AGENT: '--- Approach 8: CSV Processing ---'",
      "Create tool: `cat > sales.csv << 'EOF'`",
      "Product,Quantity,Price,Date\nLaptop,5,999.99,2025-10-01\nMouse,20,29.99,2025-10-01\nKeyboard,15,79.99,2025-10-02\nMonitor,8,299.99,2025-10-02\nLaptop,3,999.99,2025-10-03\nEOF",
      "AGENT: ''",
      "Run command: `awk -F',' 'NR>1 {print $1, $2, $3}' sales.csv`",
      "AGENT: 'Laptop 5 999.99'",
      "AGENT: 'Mouse 20 29.99'",
      "AGENT: 'Keyboard 15 79.99'",
      "AGENT: 'Monitor 8 299.99'",
      "AGENT: 'Laptop 3 999.99'",
      "AGENT: ''",
      "AGENT: 'Calculate revenue per product:'",
      "Run command: `awk -F',' 'NR>1 {print $1, $2 * $3}' sales.csv`",
      "AGENT: 'Laptop 4999.95'",
      "AGENT: 'Mouse 599.8'",
      "AGENT: 'Keyboard 1199.85'",
      "AGENT: 'Monitor 2399.92'",
      "AGENT: 'Laptop 2999.97'",
      "AGENT: ''",
      "AGENT: 'Total revenue:'",
      "Run command: `awk -F',' 'NR>1 {sum += $2 * $3} END {print \"Total revenue: $\" sum}' sales.csv`",
      "AGENT: 'Total revenue: $12199.49'",
      "AGENT: ''",
      "AGENT: 'Revenue by product:'",
      "Run command: `awk -F',' 'NR>1 {product[$1] += $2 * $3} END {for (p in product) printf \"%-10s $%.2f\\n\", p, product[p]}' sales.csv`",
      "AGENT: 'Laptop     $7999.92'",
      "AGENT: 'Mouse      $599.80'",
      "AGENT: 'Keyboard   $1199.85'",
      "AGENT: 'Monitor    $2399.92'",
      "AGENT: ''",
      "AGENT: '--- Approach 9: Multi-Line Processing ---'",
      "Create tool: `cat > contacts.txt << 'EOF'`",
      "Name: Alice\nEmail: alice@example.com\nPhone: 555-1234\n\nName: Bob\nEmail: bob@example.com\nPhone: 555-5678\n\nName: Charlie\nEmail: charlie@example.com\nPhone: 555-9012\nEOF",
      "AGENT: ''",
      "Run command: `awk '/^Name:/ {name=$2} /^Email:/ {email=$2; print name, email}' contacts.txt`",
      "AGENT: 'Alice alice@example.com'",
      "AGENT: 'Bob bob@example.com'",
      "AGENT: 'Charlie charlie@example.com'",
      "AGENT: ''",
      "AGENT: '--- Approach 10: Real-World Example - Complete Log Report ---'",
      "Create tool: `cat > log-report.awk << 'EOF'`",
      "BEGIN {\n    print \"=\"\n    print \"=== WEB SERVER LOG ANALYSIS ===\"\n    print \"================================\\n\"\n}\n\n{\n    # Count total requests\n    total_requests++\n    \n    # Extract fields\n    ip = $1\n    status = $9\n    bytes = $10\n    \n    # Count by IP\n    ip_count[ip]++\n    ip_bytes[ip] += bytes\n    \n    # Count by status\n    status_count[status]++\n    \n    # Track errors\n    if (status >= 400) {\n        errors++\n        error_ips[ip]++\n    }\n    \n    # Sum total bytes\n    total_bytes += bytes\n    \n    # Track largest response\n    if (bytes > max_bytes) {\n        max_bytes = bytes\n        max_bytes_ip = ip\n    }\n}\n\nEND {\n    print \"SUMMARY:\"\n    print \"--------\"\n    printf \"Total requests: %d\\n\", total_requests\n    printf \"Total bytes: %d (%.2f MB)\\n\", total_bytes, total_bytes/1024/1024\n    printf \"Average bytes: %.2f\\n\", total_bytes/total_requests\n    printf \"Errors: %d (%.1f%%)\\n\\n\", errors, (errors/total_requests)*100\n    \n    print \"TOP IPs BY REQUESTS:\"\n    print \"--------------------\"\n    for (ip in ip_count) {\n        printf \"%-15s %5d requests, %8d bytes\\n\", ip, ip_count[ip], ip_bytes[ip]\n    }\n    \n    print \"\\nSTATUS CODE DISTRIBUTION:\"\n    print \"-------------------------\"\n    for (status in status_count) {\n        printf \"%-5s %5d (%.1f%%)\\n\", status, status_count[status], \n               (status_count[status]/total_requests)*100\n    }\n    \n    print \"\\nERROR SOURCES:\"\n    print \"--------------\"\n    for (ip in error_ips) {\n        printf \"%-15s %5d errors\\n\", ip, error_ips[ip]\n    }\n    \n    print \"\\nLARGEST RESPONSE:\"\n    print \"-----------------\"\n    printf \"IP: %s, Size: %d bytes\\n\", max_bytes_ip, max_bytes\n}\nEOF",
      "Run command: `awk -f log-report.awk access.log`",
      "AGENT: '================================'",
      "AGENT: '=== WEB SERVER LOG ANALYSIS ==='",
      "AGENT: '================================'",
      "AGENT: ''",
      "AGENT: 'SUMMARY:'",
      "AGENT: '--------'",
      "AGENT: 'Total requests: 5'",
      "AGENT: 'Total bytes: 4358 (0.00 MB)'",
      "AGENT: 'Average bytes: 871.60'",
      "AGENT: 'Errors: 2 (40.0%)'",
      "AGENT: ''",
      "AGENT: 'TOP IPs BY REQUESTS:'",
      "AGENT: '--------------------'",
      "AGENT: '192.168.1.100        2 requests,     3579 bytes'",
      "AGENT: '192.168.1.101        1 requests,      567 bytes'",
      "AGENT: '192.168.1.102        1 requests,       89 bytes'",
      "AGENT: '192.168.1.103        1 requests,      123 bytes'",
      "AGENT: ''",
      "AGENT: 'STATUS CODE DISTRIBUTION:'",
      "AGENT: '-------------------------'",
      "AGENT: '200      3 (60.0%)'",
      "AGENT: '404      1 (20.0%)'",
      "AGENT: '500      1 (20.0%)'",
      "AGENT: ''",
      "AGENT: 'ERROR SOURCES:'",
      "AGENT: '--------------'",
      "AGENT: '192.168.1.102        1 errors'",
      "AGENT: '192.168.1.103        1 errors'",
      "AGENT: ''",
      "AGENT: 'LARGEST RESPONSE:'",
      "AGENT: '-----------------'",
      "AGENT: 'IP: 192.168.1.100, Size: 2345 bytes'",
      "AGENT: ''",
      "AGENT: '✅ Professional log analysis report generated!'",
      "AGENT: ''",
      "AGENT: '--- Bonus: Awk One-Liners Collection ---'",
      "AGENT: ''",
      "AGENT: 'Print line numbers:'",
      "Run command: `awk '{print NR, $0}' access.log | head -2`",
      "AGENT: '1 192.168.1.100 - - [08/Oct/2025:10:00:00] \"GET /api/users HTTP/1.1\" 200 1234'",
      "AGENT: '2 192.168.1.101 - - [08/Oct/2025:10:00:05] \"POST /api/login HTTP/1.1\" 200 567'",
      "AGENT: ''",
      "AGENT: 'Remove duplicate lines:'",
      "Run command: `awk '!seen[$0]++' access.log | wc -l`",
      "AGENT: '5'",
      "AGENT: ''",
      "AGENT: 'Print lines longer than 100 chars:'",
      "Run command: `awk 'length($0) > 100' access.log`",
      "AGENT: ''",
      "AGENT: 'Sum a column:'",
      "Run command: `awk '{sum+=$10} END {print sum}' access.log`",
      "AGENT: '4358'",
      "AGENT: ''",
      "AGENT: 'Count unique values in column:'",
      "Run command: `awk '{a[$1]++} END {print length(a)}' access.log`",
      "AGENT: '4'",
      "AGENT: ''",
      "AGENT: '✓ SOLUTION SUMMARY:'",
      "AGENT: '  ✓ Extracted fields from logs with automatic field splitting.'",
      "AGENT: '  ✓ Filtered records with pattern matching and conditions.'",
      "AGENT: '  ✓ Calculated statistics (sum, average, count).'",
      "AGENT: '  ✓ Used associative arrays for complex aggregations.'",
      "AGENT: '  ✓ Formatted output with printf for professional reports.'",
      "AGENT: '  ✓ Processed CSV files with custom field separators.'",
      "AGENT: '  ✓ Created reusable awk scripts for comprehensive analysis.'",
      "AGENT: '  ✓ Generated complete log analysis reports with statistics.'",
      "AGENT: '  ✓ You now master awk for text processing and analysis! 📊'"
    ],
    "commands": ["awk", "cat", "printf", "wc"],
    "packages": {
      "debian_ubuntu": ["gawk"],
      "arch": ["gawk"]
    },
    "related_commands": ["sed", "grep", "cut", "sort", "uniq"],
    "complexity": "advanced",
    "tags": ["awk", "text-processing", "log-analysis", "data-extraction", "reporting", "statistics", "csv", "pattern-matching"]
  }
]
