[
  {
    "id": "cmd_lscpu_001",
    "command": "lscpu",
    "scenario": "Get detailed CPU information",
    "problem": "Need to check CPU specifications, cores, threads, architecture for optimization or compatibility",
    "solution": "Use lscpu to display comprehensive CPU information",
    "steps": [
      "Basic usage: lscpu",
      "Shows all CPU details",
      "Key information displayed:",
      "Architecture: x86_64, aarch64, etc.",
      "CPU op-mode(s): 32-bit, 64-bit",
      "Byte Order: Little Endian or Big Endian",
      "CPU(s): Total number of logical CPUs",
      "Thread(s) per core: Usually 1 or 2 (hyper-threading)",
      "Core(s) per socket: Physical cores per CPU",
      "Socket(s): Number of physical CPUs",
      "Vendor ID: GenuineIntel, AuthenticAMD, ARM",
      "Model name: Specific CPU model",
      "CPU MHz: Current frequency",
      "CPU max MHz: Maximum frequency",
      "CPU min MHz: Minimum frequency",
      "Cache sizes: L1d, L1i, L2, L3",
      "Calculate total cores: Sockets × Cores per socket",
      "Calculate total threads: Total cores × Threads per core",
      "Example: 1 socket × 4 cores × 2 threads = 8 logical CPUs",
      "Parseable output: lscpu -p",
      "CSV format for scripting",
      "Extended info: lscpu -e",
      "Per-CPU layout",
      "JSON output: lscpu -J",
      "Machine-readable JSON format",
      "Specific fields: lscpu -p=CPU,CORE,SOCKET",
      "Only selected columns",
      "All fields: lscpu -p=CPU,CORE,SOCKET,NODE,ONLINE,MAXMHZ,MINMHZ",
      "Hex output: lscpu -x",
      "Shows hex values",
      "Offline CPUs: lscpu --offline",
      "Shows disabled CPUs",
      "Understanding output:",
      "Hyper-threading: Threads per core = 2",
      "Doubles logical CPUs",
      "No hyper-threading: Threads per core = 1",
      "Logical = physical cores",
      "Multi-socket: Socket(s) > 1",
      "Server CPUs",
      "NUMA: Multiple nodes listed",
      "Non-Uniform Memory Access",
      "Flags: CPU features (sse4_2, avx2, aes, etc.)",
      "Check specific feature: lscpu | grep -i avx",
      "AVX, AVX2, AVX512 for vectorization",
      "Virtualization: vmx (Intel) or svm (AMD)",
      "lscpu | grep -i virtualization",
      "Required for KVM/VMs",
      "Common use cases:",
      "Check CPU model: lscpu | grep 'Model name'",
      "Count cores: lscpu | grep '^CPU(s):'",
      "Check frequency: lscpu | grep 'MHz'",
      "Check cache: lscpu | grep cache",
      "Optimization: Use output for compile flags",
      "Example: gcc -march=native (uses CPU features)",
      "Parallel processing: Cores=$(lscpu | grep '^CPU(s):' | awk '{print $2}')",
      "Then: make -j$Cores",
      "Docker limits: lscpu shows host CPUs",
      "Limit container: docker run --cpus=2",
      "Script example:",
      "#!/bin/bash",
      "CORES=$(lscpu | grep '^Core(s) per socket:' | awk '{print $4}')",
      "SOCKETS=$(lscpu | grep '^Socket(s):' | awk '{print $2}')",
      "THREADS=$(lscpu | grep '^Thread(s) per core:' | awk '{print $4}')",
      "TOTAL=$((CORES * SOCKETS * THREADS))",
      "echo \"Physical cores: $((CORES * SOCKETS))\"",
      "echo \"Logical CPUs: $TOTAL\"",
      "Check AVX support: lscpu | grep -o 'avx[^ ]*'",
      "Important for ML/scientific computing",
      "Check AES: lscpu | grep aes",
      "Hardware encryption support",
      "Architecture detection: ARCH=$(lscpu | grep Architecture | awk '{print $2}')",
      "if [ \"$ARCH\" = \"x86_64\" ]; then echo \"64-bit\"; fi",
      "Compare with /proc: cat /proc/cpuinfo",
      "More detailed, per-CPU listing",
      "lscpu is more readable",
      "Temperature: Not shown by lscpu",
      "Use: sensors (from lm-sensors)",
      "Or: cat /sys/class/thermal/thermal_zone*/temp",
      "Current load: Not shown by lscpu",
      "Use: top, htop, or mpstat",
      "Per-CPU stats: mpstat -P ALL 1",
      "From sysstat package",
      "Frequency scaling: cpufreq-info",
      "Or: cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_cur_freq",
      "Set CPU governor: sudo cpupower frequency-set -g performance",
      "Or: sudo cpupower frequency-set -g powersave",
      "NUMA info: numactl --hardware",
      "Memory/CPU topology",
      "Export results: lscpu > cpu_info.txt",
      "JSON for monitoring: lscpu -J > cpu_info.json",
      "System documentation: Include lscpu output",
      "Shows exact hardware",
      "Understanding performance:",
      "More cores: Better for parallel tasks",
      "Higher MHz: Better for single-threaded",
      "Larger cache: Better for data-heavy tasks",
      "AVX/AVX2: Better for vectorized math",
      "Alternative commands:",
      "cat /proc/cpuinfo: Detailed per-CPU",
      "dmidecode -t processor: BIOS-level info (requires root)",
      "hwinfo --cpu: Comprehensive (requires hwinfo package)",
      "Combine with other tools:",
      "lscpu && free -h && lsblk",
      "Complete hardware overview",
      "Identify bottlenecks: lscpu + top",
      "Check if CPU-bound",
      "After checking: Use info for:",
      "Compiler optimization flags",
      "Parallel task configuration",
      "Container resource limits",
      "VM CPU allocation",
      "Performance tuning decisions"
    ],
    "commands": ["lscpu", "grep", "awk", "cat", "sensors", "mpstat", "cpufreq-info", "cpupower", "numactl", "dmidecode", "hwinfo", "top"],
    "packages": {
      "debian_ubuntu": ["util-linux", "lm-sensors", "sysstat", "linux-cpupower", "numactl", "dmidecode", "hwinfo"],
      "arch": ["util-linux", "lm_sensors", "sysstat", "cpupower", "numactl", "dmidecode", "hwinfo"]
    },
    "related_commands": ["cat /proc/cpuinfo", "dmidecode", "hwinfo", "mpstat", "sensors"],
    "complexity": "beginner",
    "tags": ["lscpu", "cpu", "hardware", "system-info", "performance", "cores"]
  },
  {
    "id": "cmd_strace_001",
    "command": "strace",
    "scenario": "Debug program system calls and signals",
    "problem": "Program failing mysteriously, need to see what system calls it's making",
    "solution": "Use strace to trace system calls and signals",
    "steps": [
      "Install: sudo apt install strace (Ubuntu) or sudo pacman -S strace (Arch)",
      "Trace command: strace ls",
      "Shows all system calls ls makes",
      "Lots of output",
      "Attach to running process: strace -p PID",
      "Requires same user or root",
      "Exit: Ctrl+C",
      "Trace child processes: strace -f command",
      "Follows forks",
      "Count calls: strace -c command",
      "Summary statistics",
      "Shows time spent in each syscall",
      "Specific syscalls: strace -e open,read,write command",
      "Only show open, read, write",
      "File operations: strace -e trace=file command",
      "All file-related syscalls",
      "Network operations: strace -e trace=network command",
      "Socket, connect, send, recv, etc.",
      "Process operations: strace -e trace=process command",
      "fork, exec, wait, etc.",
      "IPC operations: strace -e trace=ipc command",
      "Signals: strace -e trace=signal command",
      "Timestamps: strace -t command",
      "Adds HH:MM:SS",
      "Microseconds: strace -tt command",
      "High-resolution timestamps",
      "Relative time: strace -r command",
      "Time between syscalls",
      "Time spent: strace -T command",
      "Duration of each syscall",
      "Output to file: strace -o output.txt command",
      "Append: strace -o output.txt -ff command",
      "-ff creates separate file per process",
      "String length: strace -s 512 command",
      "Shows 512 chars of strings (default 32)",
      "Verbose: strace -v command",
      "Full structures",
      "Decode: strace -y command",
      "Shows file descriptor paths",
      "Signal handling: strace -k command",
      "Shows stack traces (if available)",
      "Count by time: strace -c -S time command",
      "Sort by time spent",
      "By calls: strace -c -S calls command",
      "Common use cases:",
      "File not found: strace -e open,stat command 2>&1 | grep ENOENT",
      "Shows which files not found",
      "Slow startup: strace -tt -T -o trace.txt command",
      "Find where time spent",
      "grep -E '^[0-9]' trace.txt | awk '{sum+=$NF} END{print sum}'",
      "Permission denied: strace -e open,access command 2>&1 | grep EACCES",
      "Configuration files: strace -e open command 2>&1 | grep '\\.conf\\|\\.cfg\\|\\.ini'",
      "Shows config files being read",
      "Library loading: strace -e open command 2>&1 | grep '\\.so'",
      ".so files are shared libraries",
      "Network connections: strace -e connect program 2>&1 | grep connect",
      "Environment vars: strace -e execve program 2>&1",
      "Shows full execve with env",
      "Debugging crashes: strace -o crash.log ./crashing_program",
      "Last syscalls before crash",
      "Following services: sudo strace -p $(pgrep nginx | head -1) -o nginx_trace.txt",
      "Attach to running service",
      "Understanding output:",
      "syscall(args) = return_value",
      "Example: open(\"/etc/hosts\", O_RDONLY) = 3",
      "3 is file descriptor",
      "Return -1: Error occurred",
      "Followed by error: ENOENT (No such file)",
      "Common syscalls:",
      "open: Open file",
      "read: Read from fd",
      "write: Write to fd",
      "close: Close fd",
      "stat: Get file info",
      "execve: Execute program",
      "fork: Create child process",
      "connect: Network connection",
      "sendto/recvfrom: Network data",
      "mmap: Memory mapping",
      "Filtering noise: strace -e '!clock_gettime,gettimeofday' command",
      "Excludes timing calls",
      "Or: strace command 2>&1 | grep -v 'clock_gettime'",
      "Attach to docker: docker top container_name to get PID",
      "Then: sudo strace -p PID",
      "Performance impact: strace slows down program significantly",
      "Don't use in production unless necessary",
      "Alternatives: ltrace (library calls), perf (performance profiling)",
      "Combine with ltrace: strace -e open program && ltrace -e malloc program",
      "System vs library calls",
      "Script example:",
      "#!/bin/bash",
      "echo \"Tracing program for file access...\"",
      "strace -e open,stat,access -o trace.log $1 2>&1",
      "echo \"Files accessed:\"",
      "grep -E 'open|stat|access' trace.log | awk -F'\"' '{print $2}' | sort -u",
      "Real-world debugging:",
      "1. Program fails: strace -o trace.log ./program",
      "2. Check last lines: tail -20 trace.log",
      "3. Look for errors: grep 'E[A-Z]' trace.log",
      "4. Identify issue: permission, missing file, network, etc.",
      "5. Fix and re-test",
      "Security: Can expose sensitive data (passwords, keys)",
      "Review output before sharing",
      "Redact sensitive info",
      "Documentation: Include strace output in bug reports",
      "Shows exact failure point"
    ],
    "commands": ["strace", "grep", "awk", "tail", "pgrep", "docker", "ltrace", "perf"],
    "packages": {
      "debian_ubuntu": ["strace"],
      "arch": ["strace"]
    },
    "related_commands": ["ltrace", "perf", "gdb", "lsof"],
    "complexity": "advanced",
    "tags": ["strace", "debugging", "system-calls", "troubleshooting", "syscalls"]
  },
  {
    "id": "cmd_lsof_001",
    "command": "lsof",
    "scenario": "Find which process has file or port open",
    "problem": "Can't unmount device, or port already in use - need to identify process",
    "solution": "Use lsof to list open files and network connections",
    "steps": [
      "Install: sudo apt install lsof (Ubuntu) or sudo pacman -S lsof (Arch)",
      "All open files: lsof",
      "Huge output (thousands of lines)",
      "Usually pipe: lsof | less",
      "By process: lsof -p PID",
      "Shows all files open by process",
      "By user: lsof -u username",
      "All files for user",
      "Multiple users: lsof -u user1,user2",
      "Except user: lsof -u ^root",
      "All except root",
      "By command: lsof -c ssh",
      "All ssh processes",
      "Partial match: lsof -c ^ssh",
      "Starts with ssh",
      "Specific file: lsof /path/to/file",
      "Who has this file open?",
      "Example: lsof /var/log/syslog",
      "Directory: lsof +D /path/to/directory",
      "All files in directory (recursive)",
      "Mount point: lsof /mnt/usb",
      "Why can't unmount?",
      "Network files: lsof -i",
      "All network connections",
      "Specific port: lsof -i :80",
      "Who's using port 80?",
      "Or: lsof -i :8080",
      "Port range: lsof -i :1000-2000",
      "TCP only: lsof -i tcp",
      "UDP only: lsof -i udp",
      "TCP on port: lsof -i tcp:22",
      "SSH connections",
      "Listening ports: lsof -i -sTCP:LISTEN",
      "Services listening",
      "Established: lsof -i -sTCP:ESTABLISHED",
      "Active connections",
      "IPv4: lsof -i 4",
      "IPv6: lsof -i 6",
      "Specific host: lsof -i @hostname",
      "Or IP: lsof -i @192.168.1.100",
      "Deleted files: lsof | grep deleted",
      "Files deleted but still open",
      "Can free space by killing process",
      "No header: lsof -F",
      "Parseable output",
      "Repeat mode: lsof -r 5",
      "Updates every 5 seconds",
      "Ctrl+C to stop",
      "With user: lsof -u username -i",
      "Network connections by user",
      "Count: lsof | wc -l",
      "Total open files",
      "Understanding output columns:",
      "COMMAND: Process name",
      "PID: Process ID",
      "USER: Process owner",
      "FD: File descriptor",
      "  cwd: Current working directory",
      "  txt: Program text (code)",
      "  mem: Memory-mapped file",
      "  0u: stdin, 1u: stdout, 2u: stderr",
      "  3u, 4r, etc.: File descriptors (u=read/write, r=read, w=write)",
      "TYPE: File type",
      "  REG: Regular file",
      "  DIR: Directory",
      "  CHR: Character device",
      "  FIFO: Named pipe",
      "  unix: Unix socket",
      "  IPv4/IPv6: Network",
      "DEVICE: Device numbers",
      "SIZE/OFF: File size or offset",
      "NODE: Inode number",
      "NAME: File name or address",
      "Common scenarios:",
      "Device busy: lsof /dev/sdb1",
      "Find processes using USB drive",
      "Then: kill PID or sudo umount -l /mnt/usb",
      "Port in use: sudo lsof -i :3000",
      "Web dev port conflict",
      "Kill: sudo kill $(lsof -t -i :3000)",
      "-t flag: Only output PIDs",
      "Find log readers: lsof /var/log/syslog",
      "Memory usage: lsof -p PID | wc -l",
      "Count open files for process",
      "Zombie processes: lsof -p PID",
      "If no output, might be zombie",
      "Network debugging: sudo lsof -i -n -P",
      "-n: No hostname resolution",
      "-P: No port name resolution",
      "Shows IP:port directly",
      "Docker containers: docker top container_name",
      "Get PID, then: lsof -p PID",
      "Disk space: lsof | grep deleted",
      "df shows full, but files deleted",
      "Kill processes to free space",
      "Kill by port: sudo kill $(sudo lsof -t -i :8080)",
      "Force: sudo kill -9 $(sudo lsof -t -i :8080)",
      "Unmount safely: lsof +f -- /mnt/external",
      "fuser -km /mnt/external (kills processes)",
      "Then: sudo umount /mnt/external",
      "Script example:",
      "#!/bin/bash",
      "PORT=$1",
      "PID=$(sudo lsof -t -i :$PORT)",
      "if [ -n \"$PID\" ]; then",
      "  echo \"Port $PORT in use by PID $PID\"",
      "  ps -p $PID -o comm=",
      "  read -p \"Kill it? (y/n) \" -n 1 -r",
      "  if [[ $REPLY =~ ^[Yy]$ ]]; then",
      "    sudo kill $PID",
      "  fi",
      "fi",
      "Alternative tools:",
      "fuser: Identify processes using files/sockets",
      "ss -tulpn: Network connections (faster than lsof -i)",
      "netstat -tulpn: Older network tool",
      "Combine commands: sudo lsof -i -P -n | grep LISTEN | column -t",
      "Formatted listening ports",
      "Performance: lsof can be slow on busy systems",
      "Use ss for network-only queries",
      "Security: Requires root for full info",
      "Normal users see only own processes"
    ],
    "commands": ["lsof", "kill", "umount", "fuser", "ss", "netstat", "docker", "ps", "wc", "grep", "column"],
    "packages": {
      "debian_ubuntu": ["lsof"],
      "arch": ["lsof"]
    },
    "related_commands": ["fuser", "ss", "netstat", "ps", "kill"],
    "complexity": "intermediate",
    "tags": ["lsof", "open-files", "network", "ports", "debugging", "file-descriptors"]
  }
]
