[
  {
    "id": "scenario_log_analysis_001",
    "command": "multiple",
    "scenario": "User: Help me analyze system logs to find problems",
    "problem": "System behaving oddly, need to analyze logs for errors",
    "solution": "Parse logs, identify issues, create monitoring scripts",
    "steps": [
      "USER SAYS: 'My system is acting weird. Can you check the logs?'",
      "AGENT: 'Absolutely! Let me analyze the system logs for errors and issues.'",
      "AGENT: 'I'll check: system logs, kernel messages, service logs, and auth logs.'",
      "Phase 1: System logs",
      "AGENT: 'Phase 1: Checking system logs for errors...'",
      "Check systemd: sudo journalctl -p err -b",
      "AGENT: 'Found errors in last boot. Let me see the most recent ones...'",
      "Recent errors: sudo journalctl -p err --since '1 hour ago'",
      "AGENT: 'Recent errors:'",
      "AGENT: '- Failed to start service xyz (5 times)'",
      "AGENT: '- Out of memory errors'",
      "AGENT: '- Network unreachable errors'",
      "USER: 'What's causing the out of memory errors?'",
      "AGENT: 'Let me check memory-related logs...'",
      "OOM logs: sudo journalctl | grep -i 'out of memory\\|oom\\|killed'",
      "AGENT: 'Found OOM killer logs. Showing processes killed...'",
      "Parse OOM: sudo journalctl | grep 'Out of memory' -A 5",
      "AGENT: 'Process \"chrome\" was killed by OOM killer 3 times today.'",
      "AGENT: 'Chrome is using too much memory. This is your issue.'",
      "Phase 2: Service-specific logs",
      "AGENT: 'Phase 2: Checking individual service logs...'",
      "USER: 'Check nginx logs'",
      "Check nginx errors: sudo tail -100 /var/log/nginx/error.log",
      "AGENT: 'Nginx error log shows:'",
      "AGENT: '- connect() failed (111: Connection refused) - 47 times'",
      "AGENT: '- upstream timed out - 12 times'",
      "AGENT: 'Nginx can't connect to backend service.'",
      "Check access: sudo tail -100 /var/log/nginx/access.log | grep ' 5[0-9][0-9] '",
      "AGENT: 'Many 502 and 504 errors in last hour.'",
      "Parse IPs: sudo awk '{print $1}' /var/log/nginx/access.log | sort | uniq -c | sort -rn | head -10",
      "AGENT: 'Top IP addresses:'",
      "AGENT: '- 203.0.113.42: 4,532 requests'",
      "AGENT: '- 198.51.100.87: 2,341 requests'",
      "AGENT: 'Possible attack or bot traffic.'",
      "Phase 3: Authentication logs",
      "AGENT: 'Phase 3: Checking authentication logs...'",
      "Failed logins: sudo grep 'Failed password' /var/log/auth.log | tail -20",
      "Count failures: sudo grep 'Failed password' /var/log/auth.log | wc -l",
      "AGENT: '287 failed login attempts!'",
      "Show attackers: sudo grep 'Failed password' /var/log/auth.log | grep -oP 'from \\K[0-9.]+' | sort | uniq -c | sort -rn | head -10",
      "AGENT: 'Top attacking IPs:'",
      "AGENT: '- 167 attempts from 203.0.113.42'",
      "AGENT: '- 89 attempts from 198.51.100.87'",
      "AGENT: 'Same IPs attacking nginx! Coordinated attack.'",
      "Phase 4: Kernel logs",
      "AGENT: 'Phase 4: Checking kernel messages...'",
      "Kernel errors: sudo dmesg -l err,warn | tail -20",
      "AGENT: 'Kernel warnings:'",
      "AGENT: '- USB device disconnect errors'",
      "AGENT: '- Filesystem errors on /dev/sda2'",
      "Check filesystem: sudo dmesg | grep -i 'ext4\\|filesystem'",
      "AGENT: 'WARNING: Filesystem has errors. Needs checking.'",
      "Create log analyzer: AGENT: 'Creating comprehensive log analyzer...'",
      "Create analyzer: cat > ~/analyze-logs.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== System Log Analysis ==='",
      "echo ''",
      "echo '1. System Errors (Last 24h)'",
      "ERROR_COUNT=$(sudo journalctl -p err --since '24 hours ago' | wc -l)",
      "echo \"   Found $ERROR_COUNT errors\"",
      "echo ''",
      "echo '2. Failed Logins (Today)'",
      "LOGIN_FAILS=$(sudo grep 'Failed password' /var/log/auth.log 2>/dev/null | grep \"$(date +'%b %e')\" | wc -l)",
      "echo \"   $LOGIN_FAILS failed attempts\"",
      "echo ''",
      "echo '3. OOM Kills (Last 7 days)'",
      "OOM_COUNT=$(sudo journalctl --since '7 days ago' | grep -i 'out of memory\\|oom' | wc -l)",
      "echo \"   $OOM_COUNT OOM events\"",
      "echo ''",
      "echo '4. Service Failures (Today)'",
      "SERVICE_FAILS=$(sudo journalctl --since today | grep -i 'failed' | wc -l)",
      "echo \"   $SERVICE_FAILS service failures\"",
      "echo ''",
      "echo '5. Disk Errors'",
      "DISK_ERRORS=$(sudo dmesg | grep -i 'error' | grep -i 'sd[a-z]' | wc -l)",
      "echo \"   $DISK_ERRORS disk errors\"",
      "echo ''",
      "echo '=== Top Error Messages ==='",
      "sudo journalctl -p err --since '24 hours ago' --no-pager | grep -oP ':\\s+\\K.*' | sort | uniq -c | sort -rn | head -5",
      "echo ''",
      "echo '=== Attack Sources ==='",
      "sudo grep 'Failed password' /var/log/auth.log 2>/dev/null | grep -oP 'from \\K[0-9.]+' | sort | uniq -c | sort -rn | head -5",
      "EOF",
      "Make executable: chmod +x ~/analyze-logs.sh",
      "Test: ~/analyze-logs.sh",
      "AGENT: 'Log analyzer created and working! ✓'",
      "Create error monitor: cat > ~/monitor-errors.sh << 'EOF'",
      "#!/bin/bash",
      "LOG_FILE=~/error-monitor.log",
      "THRESHOLD=10",
      "ERROR_COUNT=$(sudo journalctl -p err --since '1 hour ago' | wc -l)",
      "if [ $ERROR_COUNT -gt $THRESHOLD ]; then",
      "  echo \"$(date): WARNING - $ERROR_COUNT errors in last hour\" >> $LOG_FILE",
      "  notify-send 'System Errors' \"$ERROR_COUNT errors detected\"",
      "  # Save error details",
      "  sudo journalctl -p err --since '1 hour ago' --no-pager >> $LOG_FILE",
      "  echo '---' >> $LOG_FILE",
      "fi",
      "EOF",
      "Make executable: chmod +x ~/monitor-errors.sh",
      "Schedule: (crontab -l 2>/dev/null; echo '0 * * * * ~/monitor-errors.sh') | crontab -",
      "AGENT: 'Error monitoring scheduled: Checks every hour. ✓'",
      "Create log search tool: cat > ~/search-logs.sh << 'EOF'",
      "#!/bin/bash",
      "if [ -z \"$1\" ]; then",
      "  echo 'Usage: ./search-logs.sh <search-term> [timeframe]'",
      "  echo 'Example: ./search-logs.sh \"connection refused\" \"1 hour ago\"'",
      "  exit 1",
      "fi",
      "TERM=\"$1\"",
      "TIME=\"${2:-24 hours ago}\"",
      "echo \"=== Searching logs for: $TERM ===\"",
      "echo \"Time range: Since $TIME\"",
      "echo ''",
      "echo '--- System Logs ---'",
      "sudo journalctl --since \"$TIME\" | grep -i \"$TERM\" | tail -20",
      "echo ''",
      "echo '--- Auth Logs ---'",
      "sudo grep -i \"$TERM\" /var/log/auth.log 2>/dev/null | tail -10",
      "echo ''",
      "echo '--- Syslog ---'",
      "sudo grep -i \"$TERM\" /var/log/syslog 2>/dev/null | tail -10",
      "echo ''",
      "echo '--- Kernel Messages ---'",
      "sudo dmesg | grep -i \"$TERM\" | tail -10",
      "EOF",
      "Make executable: chmod +x ~/search-logs.sh",
      "AGENT: 'Log search tool created. ✓'",
      "Create log summary: cat > ~/log-summary.sh << 'EOF'",
      "#!/bin/bash",
      "REPORT=~/log-summary-$(date +%Y%m%d).txt",
      "echo 'System Log Summary' > $REPORT",
      "echo 'Generated: '$(date) >> $REPORT",
      "echo '' >> $REPORT",
      "echo '=== Error Statistics ===' >> $REPORT",
      "echo '' >> $REPORT",
      "echo 'Errors by priority:' >> $REPORT",
      "sudo journalctl --since '24 hours ago' --no-pager | grep -oP 'priority=\\K[^)]+' | sort | uniq -c | sort -rn >> $REPORT",
      "echo '' >> $REPORT",
      "echo '=== Service Status ===' >> $REPORT",
      "systemctl list-units --state=failed >> $REPORT",
      "echo '' >> $REPORT",
      "echo '=== Failed Logins ===' >> $REPORT",
      "sudo grep 'Failed password' /var/log/auth.log 2>/dev/null | tail -20 >> $REPORT",
      "echo '' >> $REPORT",
      "echo '=== Disk Errors ===' >> $REPORT",
      "sudo dmesg | grep -i 'error' | tail -20 >> $REPORT",
      "echo '' >> $REPORT",
      "echo 'Report saved: '$REPORT",
      "EOF",
      "Make executable: chmod +x ~/log-summary.sh",
      "AGENT: 'Log summary generator created. ✓'",
      "Add log aliases: cat >> ~/.bashrc << 'EOF'",
      "# Log analysis aliases",
      "alias logs-errors='sudo journalctl -p err --since today'",
      "alias logs-system='sudo journalctl -f'",
      "alias logs-auth='sudo tail -f /var/log/auth.log'",
      "alias logs-kernel='sudo dmesg -wH'",
      "alias logs-analyze='~/analyze-logs.sh'",
      "alias logs-search='~/search-logs.sh'",
      "alias logs-summary='~/log-summary.sh'",
      "EOF",
      "Source: source ~/.bashrc",
      "Create log rotation checker: cat > ~/check-log-rotation.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== Log Rotation Status ==='",
      "echo ''",
      "echo 'Log directory sizes:'",
      "du -sh /var/log/* 2>/dev/null | sort -rh | head -10",
      "echo ''",
      "echo 'Largest log files:'",
      "find /var/log -type f -exec ls -lh {} \\; 2>/dev/null | sort -k5 -rh | head -10",
      "echo ''",
      "echo 'Logrotate status:'",
      "sudo cat /var/lib/logrotate/status 2>/dev/null | head -20",
      "EOF",
      "Make executable: chmod +x ~/check-log-rotation.sh",
      "AGENT: 'Log rotation checker created. ✓'",
      "Actionable fixes: AGENT: 'Based on log analysis, here are the issues I found:'",
      "AGENT: ''",
      "AGENT: '1. Chrome OOM kills → Increase RAM or limit Chrome'",
      "AGENT: '2. Nginx backend errors → Fix upstream service'",
      "AGENT: '3. SSH attacks from 203.0.113.42 → Block IP'",
      "AGENT: '4. Filesystem errors → Run fsck'",
      "AGENT: ''",
      "AGENT: 'Should I help fix these?'",
      "USER: 'Yes, block the attacking IP'",
      "Block IP: sudo ufw deny from 203.0.113.42",
      "Also: sudo ufw deny from 198.51.100.87",
      "AGENT: 'Attacking IPs blocked. ✓'",
      "Install fail2ban: AGENT: 'Installing fail2ban for automatic protection...'",
      "Install: sudo apt install fail2ban || sudo pacman -S fail2ban",
      "Enable: sudo systemctl enable --now fail2ban",
      "AGENT: 'Fail2ban installed. Auto-blocks attackers. ✓'",
      "Final summary: AGENT: 'Log analysis complete! Summary:'",
      "AGENT: ''",
      "AGENT: 'Issues found:'",
      "AGENT: '✓ Chrome OOM kills (memory issue)'",
      "AGENT: '✓ Nginx backend failures (service down)'",
      "AGENT: '✓ 287 SSH attack attempts (blocked)'",
      "AGENT: '✓ Filesystem errors (needs fsck)'",
      "AGENT: ''",
      "AGENT: 'Actions taken:'",
      "AGENT: '✓ Blocked attacking IPs'",
      "AGENT: '✓ Installed fail2ban'",
      "AGENT: '✓ Setup hourly error monitoring'",
      "AGENT: ''",
      "AGENT: 'Tools created:'",
      "AGENT: '- ~/analyze-logs.sh (quick analysis)'",
      "AGENT: '- ~/monitor-errors.sh (auto-monitor)'",
      "AGENT: '- ~/search-logs.sh (search tool)'",
      "AGENT: '- ~/log-summary.sh (daily report)'",
      "AGENT: '- ~/check-log-rotation.sh (rotation status)'",
      "AGENT: ''",
      "AGENT: 'Commands:'",
      "AGENT: '- logs-errors (today's errors)'",
      "AGENT: '- logs-system (live system log)'",
      "AGENT: '- logs-auth (live auth log)'",
      "AGENT: '- logs-analyze (full analysis)'",
      "AGENT: '- logs-search <term> (search)'",
      "AGENT: ''",
      "AGENT: 'Recommended next steps:'",
      "AGENT: '1. Run fsck on /dev/sda2 (requires reboot)'",
      "AGENT: '2. Investigate why backend service fails'",
      "AGENT: '3. Consider adding more RAM'",
      "AGENT: '4. Review fail2ban logs weekly'",
      "AGENT: ''",
      "AGENT: 'Your logs are now monitored and analyzed! ✓'"
    ],
    "commands": ["journalctl", "grep", "tail", "dmesg", "awk", "sort", "uniq", "wc", "ufw", "fail2ban", "systemctl", "du", "find", "cat", "chmod", "crontab", "notify-send", "date"],
    "packages": {
      "debian_ubuntu": ["systemd", "fail2ban", "ufw", "libnotify-bin"],
      "arch": ["systemd", "fail2ban", "ufw", "libnotify"]
    },
    "related_commands": ["journalctl", "grep", "awk", "tail", "dmesg", "logrotate"],
    "complexity": "intermediate",
    "tags": ["logs", "analysis", "troubleshooting", "monitoring", "security", "parsing", "real-world", "ai-agent"]
  }
]
