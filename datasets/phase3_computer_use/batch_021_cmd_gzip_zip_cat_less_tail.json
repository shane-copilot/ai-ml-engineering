[
  {
    "id": "cmd_gzip_001",
    "command": "gzip",
    "scenario": "Compress large files to save disk space",
    "problem": "Large log files or backups consuming too much space",
    "solution": "Use gzip to compress files efficiently",
    "steps": [
      "Compress file: gzip file.txt",
      "Creates file.txt.gz, removes original",
      "Keep original: gzip -k file.txt",
      "Both file.txt and file.txt.gz exist",
      "Compress multiple: gzip file1.txt file2.log file3.dat",
      "Each gets compressed separately",
      "Compress to stdout: gzip -c file.txt > file.txt.gz",
      "Original remains",
      "Compression level: gzip -1 file.txt (fast, less compression)",
      "Through: gzip -9 file.txt (slow, best compression)",
      "Default: gzip -6 file.txt (balanced)",
      "Best compression: gzip -9 -k file.txt",
      "Fast compression: gzip -1 file.txt",
      "Verbose: gzip -v file.txt",
      "Shows compression ratio",
      "Test integrity: gzip -t file.txt.gz",
      "Checks without decompressing",
      "Force overwrite: gzip -f file.txt",
      "Overwrites existing .gz",
      "Recursive: gzip -r directory/",
      "Compresses all files in directory",
      "List info: gzip -l file.txt.gz",
      "Shows compressed/uncompressed sizes",
      "Decompress: gzip -d file.txt.gz or gunzip file.txt.gz",
      "Creates file.txt, removes .gz",
      "Keep compressed: gzip -dk file.txt.gz or gunzip -k file.txt.gz",
      "View compressed: zcat file.txt.gz or gzip -dc file.txt.gz",
      "Displays without decompressing",
      "Search in compressed: zgrep 'pattern' file.txt.gz",
      "Grep through gzip without extracting",
      "Less for compressed: zless file.txt.gz",
      "Page through compressed file",
      "Diff compressed: zdiff file1.txt.gz file2.txt.gz",
      "Pipe compression: cat largefile.txt | gzip > largefile.txt.gz",
      "Useful in scripts",
      "With tar: tar -czf archive.tar.gz directory/",
      "Creates compressed tar archive",
      "Extract: tar -xzf archive.tar.gz",
      "Compress logs: gzip /var/log/app.log",
      "Common for log rotation",
      "Find and compress: find . -name '*.log' -mtime +30 -exec gzip {} \\;",
      "Compresses logs older than 30 days",
      "Batch compress: for f in *.txt; do gzip -k \"$f\"; done",
      "Preserves originals",
      "Check space saved: du -sh file.txt* before/after",
      "Compression ratio: Typically 60-80% reduction for text",
      "Binary files: Less effective (already compressed)",
      "Force text mode: gzip -a file.bin",
      "ASCII mode",
      "Sync: gzip -S file.txt",
      "Flush output",
      "Suffix: gzip -S .gz file.txt (default .gz)",
      "Can change extension",
      "Common use cases:",
      "Log compression: gzip /var/log/syslog.1",
      "Backup: gzip -9 backup.sql",
      "Best compression for archives",
      "Quick compress: gzip -1 tempfile.txt",
      "Fast for temporary",
      "Space check: ls -lh file.txt file.txt.gz",
      "Compare sizes",
      "Automatic decompression: Many tools handle .gz transparently",
      "Example: less file.txt.gz works",
      "Decompress all: gunzip *.gz",
      "Or: gzip -d *.gz",
      "Alternatives: bzip2 (better compression, slower), xz (best compression, slowest)",
      "pigz: Parallel gzip (faster on multi-core): pigz file.txt"
    ],
    "commands": ["gzip", "gunzip", "zcat", "zgrep", "zless", "zdiff", "tar", "find", "du", "ls", "pigz"],
    "packages": {
      "debian_ubuntu": ["gzip", "pigz"],
      "arch": ["gzip", "pigz"]
    },
    "related_commands": ["bzip2", "xz", "zip", "tar", "pigz"],
    "complexity": "beginner",
    "tags": ["gzip", "compression", "zip", "archive", "storage", "log-rotation"]
  },
  {
    "id": "cmd_zip_001",
    "command": "zip",
    "scenario": "Create cross-platform archives with zip",
    "problem": "Need to create compressed archive compatible with Windows/Mac/Linux",
    "solution": "Use zip to create universal archives",
    "steps": [
      "Install: sudo apt install zip unzip (Ubuntu) or sudo pacman -S zip unzip (Arch)",
      "Create archive: zip archive.zip file.txt",
      "Add to existing: zip archive.zip file2.txt (appends)",
      "Multiple files: zip archive.zip file1.txt file2.txt file3.txt",
      "With wildcards: zip archive.zip *.txt",
      "Directory (recursive): zip -r archive.zip directory/",
      "-r essential for directories",
      "Compress directory: zip -r backup.zip /path/to/directory",
      "Compression level: zip -1 archive.zip file.txt (fast)",
      "Through: zip -9 archive.zip file.txt (best)",
      "Default is -6",
      "Store only (no compression): zip -0 archive.zip file.txt",
      "Update archive: zip -u archive.zip file.txt",
      "Only if file newer or not in archive",
      "Freshen: zip -f archive.zip file.txt",
      "Only if file already in archive",
      "Delete from archive: zip -d archive.zip file.txt",
      "Move files: zip -m archive.zip file.txt",
      "Adds then deletes original",
      "Verbose: zip -v archive.zip file.txt",
      "Quiet: zip -q archive.zip file.txt",
      "No output",
      "Encrypt: zip -e archive.zip file.txt",
      "Prompts for password",
      "Or: zip -P password archive.zip file.txt (insecure, visible in history)",
      "Split archive: zip -s 100m archive.zip file.txt",
      "Creates 100MB chunks",
      "Test archive: zip -T archive.zip",
      "Verifies integrity",
      "List contents: unzip -l archive.zip",
      "Or: zip -sf archive.zip",
      "Extract all: unzip archive.zip",
      "To directory: unzip archive.zip -d /path/to/dest/",
      "Specific file: unzip archive.zip file.txt",
      "With pattern: unzip archive.zip '*.txt'",
      "View file: unzip -p archive.zip file.txt",
      "Prints to stdout",
      "Test extract: unzip -t archive.zip",
      "Verify without extracting",
      "Overwrite: unzip -o archive.zip (force overwrite)",
      "Never overwrite: unzip -n archive.zip",
      "Update: unzip -u archive.zip",
      "Only if newer",
      "Quiet extract: unzip -q archive.zip",
      "Verbose extract: unzip -v archive.zip",
      "Shows detailed info",
      "Password extract: unzip -P password archive.zip",
      "Exclude files: zip -r archive.zip directory/ -x '*.log' '*.tmp'",
      "Multiple patterns",
      "Include only: zip -r archive.zip directory/ -i '*.txt' '*.md'",
      "Show progress: zip -r -v archive.zip large_directory/",
      "Comments: zip -z archive.zip",
      "Prompts for comment",
      "Or: echo 'comment' | zip -z archive.zip",
      "System files: zip -ry archive.zip directory/",
      "-y preserves symlinks",
      "Adjust paths: zip -j archive.zip /path/to/file.txt",
      "-j junks (removes) directory paths",
      "Common use cases:",
      "Simple backup: zip -r backup_$(date +%Y%m%d).zip ~/Documents/",
      "Share files: zip -r project.zip project/ -x '*.git*' 'node_modules/*'",
      "Encrypted backup: zip -er secure.zip sensitive_files/",
      "Windows compat: zip -r -X windows.zip files/",
      "-X strips Unix attributes",
      "Large archive: zip -r -s 1g large.zip huge_directory/",
      "Split into 1GB parts",
      "Check archive size: ls -lh archive.zip",
      "Compression ratio: unzip -l archive.zip",
      "Compare compressed/uncompressed",
      "Update specific: zip -u archive.zip updated_file.txt",
      "Batch zip: for dir in */; do zip -r \"${dir%/}.zip\" \"$dir\"; done",
      "Zips each subdirectory",
      "Extract and pipe: unzip -p archive.zip data.csv | grep 'pattern'",
      "Cross-platform: Works on Windows, Mac, Linux",
      "Alternative: tar.gz for Linux-only (better compression)",
      "7z for best compression: 7z a archive.7z directory/"
    ],
    "commands": ["zip", "unzip", "ls", "date", "echo", "grep", "7z"],
    "packages": {
      "debian_ubuntu": ["zip", "unzip", "p7zip-full"],
      "arch": ["zip", "unzip", "p7zip"]
    },
    "related_commands": ["tar", "gzip", "7z", "rar"],
    "complexity": "beginner",
    "tags": ["zip", "unzip", "compression", "archive", "cross-platform", "windows-compat"]
  },
  {
    "id": "cmd_cat_001",
    "command": "cat",
    "scenario": "View and concatenate file contents",
    "problem": "Need to display file contents, combine files, or create simple files",
    "solution": "Use cat to work with text files",
    "steps": [
      "Display file: cat file.txt",
      "Prints entire file to screen",
      "Multiple files: cat file1.txt file2.txt",
      "Displays one after another",
      "Concatenate to new file: cat file1.txt file2.txt > combined.txt",
      "Append to file: cat file1.txt >> existing.txt",
      "Adds to end of existing file",
      "Create new file: cat > newfile.txt",
      "Type content, Ctrl+D to save and exit",
      "Example: cat > test.txt then type 'Hello World' then Ctrl+D",
      "Number lines: cat -n file.txt",
      "Shows line numbers",
      "Number non-empty: cat -b file.txt",
      "Only numbers non-blank lines",
      "Show line ends: cat -E file.txt",
      "Displays $ at end of each line",
      "Show tabs: cat -T file.txt",
      "Displays ^I for tabs",
      "Show non-printing: cat -v file.txt",
      "Makes special chars visible",
      "All options: cat -A file.txt",
      "Equivalent to -vET",
      "Squeeze blank lines: cat -s file.txt",
      "Multiple blank lines become one",
      "Prepend line numbers: cat -n file1.txt file2.txt > numbered.txt",
      "Combines both approaches",
      "View with more: cat file.txt | more",
      "Or less: cat file.txt | less (better)",
      "Standard input: cat",
      "Reads from keyboard, Ctrl+D to end",
      "Useful in scripts",
      "Here document: cat <<EOF > file.txt",
      "Multiple lines",
      "Of text",
      "EOF",
      "Pipe to commands: cat file.txt | grep 'pattern'",
      "Search in file",
      "Or: cat file.txt | wc -l (count lines)",
      "Binary files: cat image.jpg (displays garbage)",
      "Don't use cat for binary",
      "Copy file: cat source.txt > destination.txt",
      "Same as cp but through pipe",
      "Append multiple: cat file1.txt file2.txt >> master.txt",
      "Show file type: file file.txt",
      "Before using cat on unknown files",
      "Large files: Use less or head/tail instead",
      "cat loads entire file",
      "Reverse lines: tac file.txt",
      "Reverse of cat",
      "Last line first",
      "Common use cases:",
      "View config: cat /etc/hosts",
      "Quick check: cat ~/.bashrc",
      "Combine logs: cat /var/log/app.log.* > all_logs.txt",
      "Create script: cat > script.sh then add shebang and code",
      "Copy to clipboard: cat file.txt | xclip -selection clipboard",
      "From clipboard: xclip -o > file.txt",
      "Inline editing: cat file.txt | sed 's/old/new/' > newfile.txt",
      "Show with syntax: cat file.py | pygmentize (if installed)",
      "Compare: diff <(cat file1.txt) <(cat file2.txt)",
      "Network cat: nc -l 1234 > received.txt (receiver)",
      "cat file.txt | nc hostname 1234 (sender)",
      "String to file: echo 'text' | cat > file.txt",
      "Or: echo 'text' > file.txt (simpler)",
      "Display and count: cat file.txt | tee /dev/tty | wc -l",
      "Shows file and counts lines",
      "With bat (better cat): bat file.txt",
      "Syntax highlighting, line numbers",
      "Install: sudo apt install bat or cargo install bat",
      "Alternative commands: head (first lines), tail (last lines), less (pager)",
      "For logs: tail -f /var/log/syslog (follow)",
      "Quick view: head -20 file.txt (first 20 lines)"
    ],
    "commands": ["cat", "tac", "more", "less", "grep", "wc", "head", "tail", "tee", "xclip", "nc", "bat", "file", "pygmentize"],
    "packages": {
      "debian_ubuntu": ["coreutils", "bat"],
      "arch": ["coreutils", "bat"]
    },
    "related_commands": ["less", "more", "head", "tail", "tac", "bat"],
    "complexity": "beginner",
    "tags": ["cat", "file-viewing", "text", "concatenate", "file-operations"]
  },
  {
    "id": "cmd_less_001",
    "command": "less",
    "scenario": "View large files efficiently",
    "problem": "Need to read large log files without loading entire file into memory",
    "solution": "Use less pager for efficient file viewing",
    "steps": [
      "Open file: less file.txt",
      "Navigation: Arrow keys, Page Up/Down, Space",
      "Quit: q",
      "Forward one screen: Space or f",
      "Backward one screen: b",
      "Forward one line: Enter or j or Down arrow",
      "Backward one line: k or Up arrow",
      "Go to start: g or Home",
      "Go to end: G or End",
      "Go to line: Type line number then g",
      "Example: 100g goes to line 100",
      "Percentage: Type number then p",
      "50p goes to 50% through file",
      "Search forward: /pattern then Enter",
      "Next match: n",
      "Previous match: N",
      "Search backward: ?pattern",
      "Case-insensitive search: /pattern then press i",
      "Or start with: less -i file.txt",
      "Highlight search: ESC-u",
      "Toggles highlighting",
      "Clear search highlight: ESC-U",
      "Mark position: m then letter (e.g., ma)",
      "Return to mark: ' then letter (e.g., 'a)",
      "Help: h",
      "Shows all commands",
      "Exit help: q",
      "Display line numbers: -N or toggle with -N while viewing",
      "Start with: less -N file.txt",
      "Toggle: - then N while in less",
      "Chop long lines: -S",
      "less -S file.txt",
      "Arrows scroll horizontally",
      "Follow file (like tail -f): less +F file.txt",
      "Or: Shift+F while viewing",
      "Exit follow: Ctrl+C",
      "Multiple files: less file1.txt file2.txt",
      "Next file: :n",
      "Previous file: :p",
      "View from stdin: command | less",
      "Example: cat file.txt | less",
      "Or: ls -la | less",
      "Ignore case: less -i file.txt",
      "Smart case: less -I file.txt",
      "Ignores case unless pattern has uppercase",
      "Show raw control chars: less -r file.txt",
      "Useful for colored output",
      "Example: ls --color=always | less -r",
      "Raw (no processing): less -R file.txt",
      "Line wrap: Default behavior",
      "No wrap: less -S file.txt",
      "Squeeze blank lines: less -s file.txt",
      "Force open binary: less -f binary_file",
      "Start at pattern: less +/pattern file.txt",
      "Opens to first match",
      "Start at end: less +G file.txt",
      "Like tail",
      "Horizontal scroll: Right/Left arrows (with -S)",
      "Half page: d (down), u (up)",
      "Edit file: v",
      "Opens in $EDITOR",
      "Refresh: r or Ctrl+L",
      "Useful for changing files",
      "Shell command: !command",
      "Runs shell command",
      "Pipe to command: | command",
      "Pipes marked text",
      "Set options: -option while viewing",
      "Example: -N toggles line numbers",
      "Status: = or Ctrl+G",
      "Shows position info",
      "Copy mode: F",
      "Follows file like tail -f",
      "Multiple windows: Can't split, use tmux/screen",
      "Common use cases:",
      "View logs: less /var/log/syslog",
      "Search logs: less /var/log/syslog then /ERROR",
      "Follow logs: less +F /var/log/app.log",
      "With colors: ls --color=always | less -R",
      "Git diff: git diff | less -R",
      "Large file: less -N large.log",
      "Line numbers for reference",
      "Man pages: Use less by default (man command)",
      "Compare to alternatives:",
      "more: Simpler but less features",
      "cat: For small files",
      "tail -f: For following only",
      "Environment: Set LESS=-R in ~/.bashrc for default options",
      "Example: export LESS='-R -N -i'",
      "Always raw, line numbers, ignore case"
    ],
    "commands": ["less", "cat", "tail", "ls", "git"],
    "packages": {
      "debian_ubuntu": ["less"],
      "arch": ["less"]
    },
    "related_commands": ["more", "cat", "tail", "head", "bat"],
    "complexity": "beginner",
    "tags": ["less", "pager", "file-viewing", "logs", "text-viewer"]
  },
  {
    "id": "cmd_tail_001",
    "command": "tail",
    "scenario": "Monitor log files in real-time",
    "problem": "Need to watch log file for new entries as they appear",
    "solution": "Use tail to view end of files and follow updates",
    "steps": [
      "Last 10 lines: tail file.txt",
      "Default shows last 10 lines",
      "Last N lines: tail -n 20 file.txt",
      "Or: tail -20 file.txt",
      "Last 50: tail -n 50 file.txt",
      "Follow file: tail -f file.txt",
      "Updates in real-time as file grows",
      "Most common usage for logs!",
      "Exit: Ctrl+C",
      "Follow with lines: tail -n 50 -f /var/log/syslog",
      "Shows last 50 then follows",
      "Multiple files: tail -f file1.log file2.log",
      "Shows updates from both",
      "By bytes: tail -c 100 file.txt",
      "Last 100 bytes",
      "Retry on missing: tail -f --retry file.log",
      "Keeps trying if file doesn't exist yet",
      "Useful for log rotation",
      "Follow by name: tail -F file.log",
      "Continues following even after rotation",
      "Equivalent to: --follow=name --retry",
      "Verbose: tail -v file.txt",
      "Shows filename header",
      "Quiet: tail -q file1.txt file2.txt",
      "No filename headers",
      "PID tracking: tail --pid=1234 -f file.log",
      "Stops when process 1234 exits",
      "Sleep interval: tail -f -s 5 file.log",
      "Checks every 5 seconds (default 1.0)",
      "With grep: tail -f /var/log/syslog | grep ERROR",
      "Filter while following",
      "Colored: tail -f /var/log/syslog | grep --color=auto ERROR",
      "Highlights matches",
      "Multiple patterns: tail -f /var/log/app.log | grep -E 'ERROR|WARN|FATAL'",
      "Multiple files filtered: tail -f /var/log/*.log | grep error",
      "Time-stamped: tail -f file.log | while read line; do echo \"$(date): $line\"; done",
      "Adds timestamp to each line",
      "Save while viewing: tail -f file.log | tee output.txt",
      "Displays and saves to file",
      "From line number: tail -n +50 file.txt",
      "+50 means from line 50 onwards",
      "Combines with head: tail -n +10 file.txt | head -n 5",
      "Lines 10-14",
      "Common log locations:",
      "System: tail -f /var/log/syslog (Ubuntu) or /var/log/messages (other)",
      "Authentication: tail -f /var/log/auth.log",
      "Kernel: tail -f /var/log/kern.log or dmesg -w",
      "Apache: tail -f /var/log/apache2/access.log",
      "Nginx: tail -f /var/log/nginx/error.log",
      "Application: tail -f /var/log/app/application.log",
      "Use cases:",
      "Watch deployments: tail -f /var/log/app.log | grep -i deploy",
      "Monitor errors: tail -f /var/log/syslog | grep -i error",
      "Multiple services: tail -f /var/log/nginx/*.log",
      "Debug: tail -n 100 -f /var/log/app.log",
      "Last 100 lines then follow",
      "Count errors: tail -f /var/log/app.log | grep ERROR | wc -l",
      "Search pattern: tail -n 1000 /var/log/syslog | grep '192.168.1.100'",
      "Last 1000 lines matching IP",
      "With awk: tail -f access.log | awk '{print $1}' | sort | uniq -c",
      "Count IPs in real-time",
      "Log rotation aware: tail -F /var/log/app.log",
      "Capital F follows through rotation",
      "Alternative: Use journalctl for systemd logs",
      "journalctl -f (follow)",
      "journalctl -f -u nginx.service (specific service)",
      "Combination commands:",
      "Last errors: tail -n 100 /var/log/syslog | grep -i error",
      "Follow and filter: tail -f /var/log/syslog | grep -v DEBUG",
      "Exclude DEBUG messages",
      "With cut: tail -f access.log | cut -d' ' -f1 | sort | uniq",
      "Unique IPs",
      "Performance: For huge files, tail is efficient",
      "Reads from end, not whole file",
      "Batch logs: for log in /var/log/*.log; do echo \"=== $log ===\"; tail -n 5 \"$log\"; done",
      "Last 5 lines of each log"
    ],
    "commands": ["tail", "grep", "awk", "wc", "tee", "cut", "sort", "uniq", "journalctl", "dmesg", "date"],
    "packages": {
      "debian_ubuntu": ["coreutils"],
      "arch": ["coreutils"]
    },
    "related_commands": ["head", "less", "cat", "grep", "journalctl"],
    "complexity": "beginner",
    "tags": ["tail", "logs", "monitoring", "file-viewing", "real-time", "log-analysis"]
  }
]
