[
  {
    "id": "cmd_fdisk_001",
    "command": "fdisk",
    "scenario": "Partition new disk for use",
    "problem": "Added new disk, need to create partitions before formatting",
    "solution": "Use fdisk to create partition table and partitions",
    "steps": [
      "DANGER: fdisk can destroy data! Double-check device names!",
      "List all disks: sudo fdisk -l",
      "Shows all disks and partitions",
      "Identify new disk: Look for disk without partitions, check size",
      "Example: /dev/sdb (second disk)",
      "Start fdisk: sudo fdisk /dev/sdb",
      "IMPORTANT: Make sure you have correct device!",
      "fdisk is interactive, shows prompt: Command (m for help):",
      "Get help: Press 'm' then Enter",
      "Shows all available commands",
      "View current partitions: Press 'p' (print)",
      "Create new partition table: Press 'g' (GPT) or 'o' (DOS/MBR)",
      "GPT recommended for >2TB disks or UEFI",
      "DOS/MBR for legacy systems or <2TB",
      "Create new partition: Press 'n'",
      "Partition type: 'p' (primary) or 'e' (extended) for MBR",
      "For GPT, just partition number",
      "Partition number: Press Enter for default (1)",
      "First sector: Press Enter for default (start of disk)",
      "Last sector: Options:",
      "Press Enter for rest of disk",
      "+10G for 10 gigabytes",
      "+500M for 500 megabytes",
      "Specific sector number",
      "Partition type: Press 't' then Enter",
      "Partition number: 1",
      "Type code: 'L' to list types",
      "Common: 83 (Linux), 82 (swap), 7 (NTFS), ef (EFI)",
      "For GPT: 20 (Linux filesystem), 19 (Linux swap), 1 (EFI)",
      "Example 3-partition layout:",
      "n, p, 1, Enter, +512M, t, ef (EFI boot)",
      "n, p, 2, Enter, +4G, t, 2, 82 (swap)",
      "n, p, 3, Enter, Enter, t, 3, 83 (Linux)",
      "Review changes: Press 'p'",
      "Shows new partition table (not yet written!)",
      "Verify before saving!",
      "Delete partition: Press 'd', choose number",
      "Can fix mistakes before writing",
      "Write changes: Press 'w'",
      "Actually writes partition table",
      "Irreversible! Make sure it's correct!",
      "Quit without saving: Press 'q'",
      "After writing: Kernel re-reads table",
      "If error: sudo partprobe /dev/sdb",
      "Or: sudo partx -u /dev/sdb",
      "Verify new partitions: lsblk or sudo fdisk -l /dev/sdb",
      "Should see: /dev/sdb1, /dev/sdb2, /dev/sdb3",
      "Format partitions: sudo mkfs.ext4 /dev/sdb3",
      "Don't format boot or swap yet",
      "Create swap: sudo mkswap /dev/sdb2",
      "Enable swap: sudo swapon /dev/sdb2",
      "Format EFI: sudo mkfs.fat -F32 /dev/sdb1",
      "Mount partition: sudo mkdir /mnt/newdisk && sudo mount /dev/sdb3 /mnt/newdisk",
      "Make permanent: Add to /etc/fstab",
      "Get UUID: sudo blkid /dev/sdb3",
      "Edit fstab: sudo nano /etc/fstab",
      "Add: UUID=xxxx /mnt/newdisk ext4 defaults 0 2",
      "Test fstab: sudo mount -a",
      "Advanced options:",
      "Expert mode: Press 'x' in fdisk",
      "Sector alignment: Fdisk auto-aligns to 1MB (2048 sectors)",
      "Manual alignment: Use +2048s for first sector",
      "Change display: Press 'u' (toggle units)",
      "Additional commands:",
      "Verify: 'v' (verify partition table)",
      "Extra info: 'i' (info about partition)",
      "Sort: 's' (sort partitions by start sector)",
      "Common errors:",
      "Device busy: Unmount all partitions first",
      "Resource busy: Check: lsof /dev/sdb or fuser -m /dev/sdb",
      "Invalid partition table: Might need to create new one ('g' or 'o')",
      "Alternative tools: parted (more powerful), gparted (GUI), cfdisk (TUI)"
    ],
    "commands": ["fdisk", "lsblk", "partprobe", "partx", "mkfs.ext4", "mkswap", "swapon", "mkfs.fat", "mount", "blkid", "nano", "lsof", "fuser"],
    "packages": {
      "debian_ubuntu": ["fdisk", "util-linux"],
      "arch": ["util-linux"]
    },
    "related_commands": ["parted", "gdisk", "cfdisk", "gparted", "mkfs", "mount"],
    "complexity": "advanced",
    "tags": ["fdisk", "partitioning", "disk-management", "storage", "partition-table"]
  },
  {
    "id": "cmd_fsck_001",
    "command": "fsck",
    "scenario": "Check and repair filesystem errors",
    "problem": "Filesystem corruption, system won't boot, or disk errors in logs",
    "solution": "Use fsck to check and repair filesystem",
    "steps": [
      "CRITICAL: Never run fsck on mounted filesystem!",
      "Will cause data corruption",
      "Check if mounted: mount | grep /dev/sda1",
      "Or: findmnt /dev/sda1",
      "Unmount first: sudo umount /dev/sda1",
      "If busy: sudo fuser -km /dev/sda1 then unmount",
      "For root filesystem: Boot from live USB/rescue mode",
      "Check filesystem: sudo fsck /dev/sda1",
      "Asks for confirmation on fixes",
      "Automatic repair: sudo fsck -y /dev/sda1",
      "Answers 'yes' to all prompts",
      "Use with caution",
      "No changes (dry run): sudo fsck -n /dev/sda1",
      "Shows what would be done",
      "Force check: sudo fsck -f /dev/sda1",
      "Even if filesystem marked clean",
      "Verbose output: sudo fsck -v /dev/sda1",
      "Very verbose: sudo fsck -vv /dev/sda1",
      "Specific filesystem type: sudo fsck.ext4 /dev/sda1",
      "Or: sudo fsck -t ext4 /dev/sda1",
      "Check all filesystems: sudo fsck -A",
      "From /etc/fstab",
      "Skip root: sudo fsck -AR",
      "Parallel check: sudo fsck -M",
      "Progress bar: sudo fsck -C /dev/sda1",
      "Understanding output:",
      "Pass 1: Checking inodes, blocks, sizes",
      "Pass 2: Checking directory structure",
      "Pass 3: Checking directory connectivity",
      "Pass 4: Checking reference counts",
      "Pass 5: Checking group summary information",
      "Exit codes:",
      "0 = No errors",
      "1 = Errors corrected",
      "2 = System should be rebooted",
      "4 = Errors left uncorrected",
      "8 = Operational error",
      "16 = Usage error",
      "Check exit code: echo $?",
      "Ext4 specific: sudo e2fsck -f /dev/sda1",
      "More options: -p (automatic repair), -b <superblock> (use alternate)",
      "Find alternate superblock: sudo dumpe2fs /dev/sda1 | grep superblock",
      "Use alternate: sudo e2fsck -b 32768 /dev/sda1",
      "Bad blocks check: sudo fsck -c /dev/sda1",
      "Or: sudo e2fsck -c /dev/sda1",
      "Read-only bad blocks: sudo e2fsck -c /dev/sda1",
      "Read-write (destructive): sudo e2fsck -cc /dev/sda1",
      "XFS filesystem: sudo xfs_repair /dev/sda1",
      "XFS doesn't use fsck",
      "Btrfs: sudo btrfs check /dev/sda1",
      "Or: sudo btrfs scrub start /mountpoint",
      "NTFS: sudo ntfsfix /dev/sda1",
      "Quick fix for Windows filesystems",
      "FAT32: sudo fsck.fat -a /dev/sda1",
      "Force check on boot: sudo tune2fs -c 1 /dev/sda1",
      "Checks after 1 mount",
      "Or by days: sudo tune2fs -i 10 /dev/sda1",
      "Checks after 10 days",
      "Disable boot check: sudo tune2fs -i 0 -c 0 /dev/sda1",
      "View check schedule: sudo tune2fs -l /dev/sda1",
      "Look for 'Maximum mount count' and 'Check interval'",
      "Common scenarios:",
      "Boot error: Boot from live USB, identify root partition: lsblk",
      "Then: sudo fsck -y /dev/sda1",
      "After fix: reboot",
      "Regular maintenance: Boot to single-user mode or recovery",
      "Check all: sudo fsck -Af -M",
      "Severe corruption: Try alternate superblock",
      "Lost files: After fsck, check /lost+found directory",
      "Files recovered without names",
      "Preventive: sudo tune2fs -c 30 /dev/sda1",
      "Checks every 30 mounts",
      "After fsck: sudo reboot",
      "Verify mount: df -h",
      "If still issues: Consider backup and reinstall",
      "Or: ddrescue for data recovery"
    ],
    "commands": ["fsck", "mount", "umount", "findmnt", "fuser", "e2fsck", "dumpe2fs", "tune2fs", "xfs_repair", "btrfs", "ntfsfix", "lsblk", "df"],
    "packages": {
      "debian_ubuntu": ["e2fsprogs", "xfsprogs", "btrfs-progs", "ntfs-3g", "dosfstools"],
      "arch": ["e2fsprogs", "xfsprogs", "btrfs-progs", "ntfs-3g", "dosfstools"]
    },
    "related_commands": ["e2fsck", "xfs_repair", "btrfs-check", "mount", "umount"],
    "complexity": "advanced",
    "tags": ["fsck", "filesystem", "repair", "corruption", "disk-check", "troubleshooting"]
  },
  {
    "id": "cmd_ss_001",
    "command": "ss",
    "scenario": "Check network connections and listening ports",
    "problem": "Need to see active network connections, listening services, or diagnose port issues",
    "solution": "Use ss (socket statistics) to display network information",
    "steps": [
      "ss replaces deprecated netstat command",
      "List all connections: ss",
      "Shows established connections",
      "All sockets: ss -a",
      "Includes listening and non-listening",
      "Listening sockets: ss -l",
      "Shows servers waiting for connections",
      "TCP connections: ss -t",
      "TCP listening: ss -lt",
      "UDP connections: ss -u",
      "UDP listening: ss -lu",
      "All TCP/UDP: ss -tua",
      "Numeric (no hostname resolution): ss -n",
      "Faster, shows IPs not names",
      "Numeric ports: ss -tn",
      "Shows :80 instead of :http",
      "Both: ss -tun (IP addresses and port numbers)",
      "Show process: ss -p",
      "Displays process using socket",
      "Full info: ss -tulpn",
      "t=TCP, u=UDP, l=listening, p=process, n=numeric",
      "Most common usage!",
      "With sudo: sudo ss -tulpn",
      "Shows all processes (even non-owned)",
      "Specific port: ss -tulpn | grep :80",
      "Or: ss -tulpn | grep :22 (SSH)",
      "Port range: ss state listening 'sport > :1000 and sport < :2000'",
      "By state: ss -t state established",
      "States: established, syn-sent, syn-recv, fin-wait-1, fin-wait-2, time-wait, closed, close-wait, last-ack, listening, closing",
      "Show timers: ss -o",
      "Extended info: ss -e",
      "Memory: ss -m",
      "Summary: ss -s",
      "Statistics by protocol",
      "IPv4 only: ss -4",
      "IPv6 only: ss -6",
      "Specific interface: ss -i eth0",
      "Filter by destination: ss dst 192.168.1.100",
      "Filter by source: ss src 192.168.1.50",
      "Specific port: ss sport = :80",
      "Or: ss dport = :443",
      "Port not equal: ss sport != :22",
      "Greater than: ss sport \\> :1024",
      "Less than: ss sport \\< :1024",
      "Multiple conditions: ss state established '( dport = :80 or dport = :443 )'",
      "Show all connections to IP: ss dst 8.8.8.8",
      "Connected sockets: ss state connected",
      "Busy ports: ss -tulpn | grep LISTEN",
      "Count connections: ss -t | wc -l",
      "Per-state count: ss -tan | awk '{print $1}' | sort | uniq -c",
      "Time-wait connections: ss -tan state time-wait | wc -l",
      "Too many can indicate issues",
      "Common troubleshooting:",
      "Port already in use: sudo ss -tulpn | grep :8080",
      "Shows which process using port",
      "Then: sudo kill <PID>",
      "Check if service listening: sudo ss -tulpn | grep :80",
      "Should show nginx/apache",
      "External connections: ss -tn state established",
      "Filter by IP: ss state established dst 192.168.1.100",
      "Suspicious connections: ss -tn dst 0.0.0.0/0",
      "All external IPs",
      "Local only: ss -tn dst 127.0.0.1 or 127.0.0.0/8",
      "Watch connections: watch -n 1 'ss -tulpn'",
      "Updates every second",
      "Export to file: ss -tulpn > connections.txt",
      "Compare with netstat: netstat -tulpn (if available)",
      "ss is faster and more modern",
      "Unix sockets: ss -x",
      "Local IPC",
      "With paths: ss -xp",
      "Examples by scenario:",
      "Web server: sudo ss -tulpn | grep ':80\\|:443'",
      "Database: sudo ss -tulpn | grep ':3306\\|:5432'",
      "SSH: sudo ss -tulpn | grep :22",
      "All listeners: sudo ss -tulpn | grep LISTEN",
      "Established web: ss -tn state established '( dport = :80 or dport = :443 )'",
      "Combining with other tools: ss -tulpn | awk '{print $5}' | cut -d: -f1 | sort | uniq -c",
      "Counts connections per IP",
      "Find process on port: sudo ss -tulpn | grep :8080 | awk '{print $7}' | cut -d'/' -f1",
      "Gets PID"
    ],
    "commands": ["ss", "grep", "awk", "wc", "sort", "uniq", "watch", "cut", "kill"],
    "packages": {
      "debian_ubuntu": ["iproute2"],
      "arch": ["iproute2"]
    },
    "related_commands": ["netstat", "lsof", "nmap", "tcpdump"],
    "complexity": "intermediate",
    "tags": ["ss", "network", "connections", "ports", "sockets", "netstat-replacement"]
  },
  {
    "id": "cmd_nmap_001",
    "command": "nmap",
    "scenario": "Scan network for open ports and services",
    "problem": "Need to discover devices on network, check open ports, or audit security",
    "solution": "Use nmap for network scanning and port discovery",
    "steps": [
      "Install: sudo apt install nmap (Ubuntu) or sudo pacman -S nmap (Arch)",
      "Basic scan: nmap scanme.nmap.org",
      "Example target for testing",
      "Scan localhost: nmap localhost or nmap 127.0.0.1",
      "Scan single host: nmap 192.168.1.100",
      "Scan IP range: nmap 192.168.1.1-254",
      "Or: nmap 192.168.1.0/24 (CIDR notation)",
      "Whole subnet",
      "Multiple hosts: nmap 192.168.1.1 192.168.1.50 192.168.1.100",
      "From file: nmap -iL targets.txt",
      "One IP/hostname per line",
      "Ping scan (host discovery): nmap -sn 192.168.1.0/24",
      "No port scan, just finds live hosts",
      "TCP SYN scan: nmap -sS 192.168.1.100",
      "Stealth scan, requires root",
      "Default for root user",
      "TCP connect scan: nmap -sT 192.168.1.100",
      "Full connection, no root needed",
      "UDP scan: nmap -sU 192.168.1.100",
      "Slow but finds UDP services",
      "Specific ports: nmap -p 80,443 192.168.1.100",
      "Port range: nmap -p 1-1000 192.168.1.100",
      "All ports: nmap -p- 192.168.1.100",
      "Scans all 65535 ports (slow)",
      "Top ports: nmap --top-ports 100 192.168.1.100",
      "Most common 100 ports",
      "Fast scan: nmap -F 192.168.1.100",
      "Top 100 ports only",
      "Service detection: nmap -sV 192.168.1.100",
      "Identifies versions of services",
      "OS detection: nmap -O 192.168.1.100",
      "Requires root",
      "Aggressive scan: nmap -A 192.168.1.100",
      "Enables OS detection, version, script scan, traceroute",
      "Verbose: nmap -v 192.168.1.100",
      "More verbose: nmap -vv 192.168.1.100",
      "Timing template: nmap -T4 192.168.1.100",
      "T0=paranoid (slowest), T3=normal, T4=aggressive, T5=insane (fastest)",
      "Output to file: nmap -oN output.txt 192.168.1.100",
      "Normal format",
      "XML output: nmap -oX output.xml 192.168.1.100",
      "Grepable: nmap -oG output.gnmap 192.168.1.100",
      "All formats: nmap -oA basename 192.168.1.100",
      "Script scan: nmap --script=vuln 192.168.1.100",
      "Vulnerability detection",
      "Specific script: nmap --script=http-title 192.168.1.100",
      "List scripts: ls /usr/share/nmap/scripts/",
      "Or: nmap --script-help=http-*",
      "Default scripts: nmap -sC 192.168.1.100",
      "Safe, useful scripts",
      "No ping: nmap -Pn 192.168.1.100",
      "Skip host discovery (assumes host up)",
      "Reason: nmap --reason 192.168.1.100",
      "Shows why port is open/closed",
      "Packet trace: nmap --packet-trace 192.168.1.100",
      "Shows all packets",
      "Exclude hosts: nmap 192.168.1.0/24 --exclude 192.168.1.1",
      "Or file: nmap 192.168.1.0/24 --excludefile exclude.txt",
      "IPv6: nmap -6 fe80::1",
      "Scan delay: nmap --scan-delay 1s 192.168.1.100",
      "Reduces network load",
      "Common use cases:",
      "Quick network discovery: sudo nmap -sn 192.168.1.0/24",
      "Find web servers: nmap -p 80,443 192.168.1.0/24 --open",
      "SSH servers: nmap -p 22 192.168.1.0/24 --open",
      "Service audit: sudo nmap -sV -T4 192.168.1.100",
      "Security audit: sudo nmap -A -T4 192.168.1.100",
      "Vulnerability scan: sudo nmap --script vuln 192.168.1.100",
      "Fast scan: nmap -T4 -F 192.168.1.100",
      "Stealthy scan: sudo nmap -sS -T2 192.168.1.100",
      "Parse output: grep '^[0-9]' output.txt",
      "Or: grep 'open' output.txt",
      "Understanding output:",
      "open = accepting connections",
      "closed = no service, but reachable",
      "filtered = firewall blocking",
      "open|filtered = can't determine",
      "Legal warning: Only scan networks you own/have permission!",
      "Unauthorized scanning is illegal",
      "Alternative tools: masscan (faster), rustscan (very fast)",
      "Combine: nmap -sV -oA scan 192.168.1.100 then cat scan.nmap"
    ],
    "commands": ["nmap", "grep", "cat", "ls"],
    "packages": {
      "debian_ubuntu": ["nmap"],
      "arch": ["nmap"]
    },
    "related_commands": ["masscan", "rustscan", "netcat", "ss", "netstat"],
    "complexity": "intermediate",
    "tags": ["nmap", "network-scanning", "port-scan", "security", "network-discovery", "penetration-testing"]
  },
  {
    "id": "cmd_dig_001",
    "command": "dig",
    "scenario": "Troubleshoot DNS resolution issues",
    "problem": "Domain not resolving, need to query DNS servers directly",
    "solution": "Use dig to query DNS records and debug resolution",
    "steps": [
      "Install: sudo apt install dnsutils (Ubuntu) or sudo pacman -S bind-tools (Arch)",
      "Basic query: dig example.com",
      "Shows A record (IPv4 address)",
      "Short answer: dig example.com +short",
      "Just the IP",
      "Specify record type: dig example.com MX",
      "MX = mail servers",
      "Common types: A, AAAA, MX, NS, TXT, CNAME, SOA, PTR",
      "IPv6 address: dig example.com AAAA",
      "Or: dig example.com AAAA +short",
      "Mail servers: dig example.com MX +short",
      "Name servers: dig example.com NS +short",
      "Text records: dig example.com TXT",
      "SPF, DKIM, verification records",
      "CNAME: dig www.example.com CNAME",
      "Alias records",
      "SOA record: dig example.com SOA",
      "Zone authority info",
      "All records: dig example.com ANY",
      "May not work on all servers",
      "Specific DNS server: dig @8.8.8.8 example.com",
      "Query Google DNS",
      "Or: dig @1.1.1.1 example.com (Cloudflare)",
      "Local DNS: dig @192.168.1.1 example.com",
      "Reverse lookup: dig -x 8.8.8.8",
      "IP to hostname",
      "Or: dig -x 1.1.1.1 +short",
      "Trace query path: dig +trace example.com",
      "Shows DNS resolution path",
      "From root servers down",
      "No recursion: dig +norecurse example.com",
      "Verbose: dig example.com +stats",
      "Query time, server, etc.",
      "Minimal output: dig example.com +noall +answer",
      "Only answer section",
      "With comments: dig example.com +comments",
      "TCP instead of UDP: dig +tcp example.com",
      "Useful for large responses",
      "Different port: dig -p 5353 example.com",
      "Multiple queries: dig example.com google.com",
      "From file: dig -f domains.txt",
      "Understanding output:",
      "QUESTION SECTION: What was queried",
      "ANSWER SECTION: The response",
      "AUTHORITY SECTION: Authoritative nameservers",
      "ADDITIONAL SECTION: Extra info",
      "Query time: How long it took",
      "Status: NOERROR (success), NXDOMAIN (not found), SERVFAIL (server error)",
      "Flags: qr=query response, aa=authoritative answer, rd=recursion desired, ra=recursion available",
      "TTL: Time to live (cache duration in seconds)",
      "Common troubleshooting:",
      "Domain not resolving: dig example.com +short",
      "If empty, domain doesn't exist or DNS issue",
      "Check different server: dig @8.8.8.8 example.com",
      "Compare with ISP DNS",
      "Slow resolution: dig example.com | grep 'Query time'",
      "High time = slow DNS server",
      "Check propagation: dig @8.8.8.8 example.com && dig @1.1.1.1 example.com",
      "Should match after propagation",
      "Mail issues: dig example.com MX",
      "Check mail server records",
      "SPF check: dig example.com TXT | grep spf",
      "DKIM: dig selector._domainkey.example.com TXT",
      "Verify delegation: dig example.com NS",
      "Check nameservers",
      "Local DNS cache: Check /etc/resolv.conf",
      "Flush: sudo systemd-resolve --flush-caches or sudo resolvectl flush-caches",
      "Compare tools: dig vs host vs nslookup",
      "host example.com (simpler)",
      "nslookup example.com (interactive)",
      "Batch queries: for domain in site1.com site2.com; do dig $domain +short; done",
      "Monitor changes: watch -n 5 'dig example.com +short'",
      "Export results: dig example.com > dns_results.txt",
      "Advanced: dig @server example.com AXFR",
      "Zone transfer (usually blocked)",
      "DNSSEC validation: dig example.com +dnssec",
      "Check DNSSEC signatures",
      "Query class: dig example.com IN (Internet class, default)",
      "Authoritative server: dig @ns1.example.com example.com +norecurse",
      "Direct query to authoritative NS"
    ],
    "commands": ["dig", "host", "nslookup", "cat", "grep", "watch", "systemd-resolve", "resolvectl"],
    "packages": {
      "debian_ubuntu": ["dnsutils"],
      "arch": ["bind-tools"]
    },
    "related_commands": ["host", "nslookup", "whois", "ping"],
    "complexity": "intermediate",
    "tags": ["dig", "dns", "troubleshooting", "domain", "name-resolution", "network"]
  }
]
