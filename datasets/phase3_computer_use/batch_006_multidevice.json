[
  {
    "id": "md_001",
    "scenario": "Set up automatic file sync between laptop and desktop using Syncthing",
    "problem": "Need to keep Documents folder synchronized across multiple computers without cloud services",
    "solution": "Install and configure Syncthing for decentralized peer-to-peer file synchronization",
    "steps": [
      "Install Syncthing on both machines: sudo apt install syncthing (Ubuntu) or sudo pacman -S syncthing (Arch)",
      "Start Syncthing on first machine: syncthing (runs in foreground) or systemctl --user enable --now syncthing",
      "Access web GUI: Open browser to http://localhost:8384",
      "Note device ID from Actions → Show ID",
      "Start Syncthing on second machine: Same as first machine",
      "Add remote device: On either machine, click Actions → Show ID, copy device ID",
      "On other machine: Actions → Add Remote Device, paste device ID, give it a name",
      "Accept connection on remote device: Check notification in Syncthing GUI",
      "Share folder: Select folder to sync → Edit → Sharing tab → check the remote device",
      "Accept shared folder on remote: Notification appears, click Add → choose local path",
      "Configure ignore patterns: Folder → Edit → Ignore Patterns - add .git, *.tmp, etc.",
      "Set folder type: Send & Receive (bidirectional), Send Only (one-way), or Receive Only",
      "For Documents folder: Add folder with path ~/Documents on both machines",
      "Wait for initial sync: Can take time depending on folder size",
      "Enable versioning: Folder → Edit → File Versioning → choose strategy (e.g., Staggered)",
      "Configure firewall: sudo ufw allow 22000/tcp (sync) && sudo ufw allow 21027/udp (discovery)",
      "For remote sync over internet: Port forward 22000 on router or use relay servers",
      "Set bandwidth limits if needed: Settings → Connections → Rate Limits",
      "Enable on startup: systemctl --user enable syncthing (already done earlier)",
      "Monitor sync status: Watch GUI or check 'syncthing --device-id' to verify",
      "Resolve conflicts: Syncthing creates .sync-conflict files, manually merge if needed"
    ],
    "commands": ["syncthing", "systemctl", "ufw"],
    "packages": {
      "debian_ubuntu": ["syncthing"],
      "arch": ["syncthing"]
    },
    "complexity": "intermediate",
    "tags": ["sync", "file-synchronization", "syncthing", "multi-device", "backup"]
  },
  {
    "id": "md_002",
    "scenario": "Control desktop computer from laptop using SSH with X11 forwarding",
    "problem": "Need to run GUI applications on desktop but control from laptop",
    "solution": "Set up SSH with X11 forwarding for remote GUI application access",
    "steps": [
      "On desktop, install SSH server: sudo apt install openssh-server (Ubuntu) or sudo pacman -S openssh (Arch)",
      "Enable SSH service: sudo systemctl enable --now sshd",
      "Configure SSH for X11: sudo nano /etc/ssh/sshd_config - ensure X11Forwarding yes",
      "Restart SSH: sudo systemctl restart sshd",
      "Check desktop IP: ip addr show | grep 'inet ' (e.g., 192.168.1.100)",
      "On laptop, install X11 client: sudo apt install xorg x11-apps (Ubuntu) or already included (Arch)",
      "Test X11 locally: xeyes (should open GUI)",
      "Connect with X11 forwarding: ssh -X user@192.168.1.100 or ssh -Y user@192.168.1.100 (trusted)",
      "Verify DISPLAY variable: echo $DISPLAY - should show something like localhost:10.0",
      "Test remote GUI: xeyes (should open on laptop but running on desktop)",
      "Run full applications: firefox (opens Firefox on desktop, displayed on laptop)",
      "For better performance, compress data: ssh -X -C user@192.168.1.100",
      "For persistent connection: Use screen or tmux: ssh user@desktop 'tmux attach || tmux'",
      "Configure SSH keys for password-less: ssh-keygen -t ed25519 on laptop",
      "Copy key to desktop: ssh-copy-id user@192.168.1.100",
      "Test key-based login: ssh user@192.168.1.100 (should not ask password)",
      "Create SSH config for easy access: nano ~/.ssh/config",
      "Add config: Host desktop\\n  HostName 192.168.1.100\\n  User yourusername\\n  ForwardX11 yes\\n  Compression yes",
      "Now connect with just: ssh desktop",
      "For file manager access: thunar or nautilus (GUI file manager on remote)",
      "Alternative VNC approach: Install x11vnc on desktop: sudo apt install x11vnc",
      "Start VNC server: x11vnc -display :0 -auth ~/.Xauthority",
      "Connect from laptop: vncviewer 192.168.1.100:5900",
      "For security, tunnel VNC through SSH: ssh -L 5900:localhost:5900 desktop then vncviewer localhost"
    ],
    "commands": ["ssh", "systemctl", "ip", "xeyes", "ssh-keygen", "ssh-copy-id", "x11vnc", "vncviewer"],
    "packages": {
      "debian_ubuntu": ["openssh-server", "openssh-client", "xorg", "x11-apps", "x11vnc", "tigervnc-viewer"],
      "arch": ["openssh", "xorg-server", "xorg-apps", "x11vnc", "tigervnc"]
    },
    "complexity": "intermediate",
    "tags": ["ssh", "x11-forwarding", "remote-desktop", "multi-device", "vnc"]
  },
  {
    "id": "md_003",
    "scenario": "Share clipboard between Linux desktop and Windows laptop on same network",
    "problem": "Need to copy/paste text and images between Linux and Windows machines seamlessly",
    "solution": "Set up network clipboard sharing using Diodon + Windows client or barrier/synergy for keyboard/mouse sharing with clipboard",
    "steps": [
      "Option 1 - Using Barrier (fork of Synergy, open source):",
      "On Linux (server): sudo apt install barrier (Ubuntu) or yay -S barrier (Arch AUR)",
      "Start Barrier GUI: barrier",
      "Configure as server: Select 'Server' radio button",
      "Configure screen layout: Click 'Configure Server' → drag screen icon to position where Windows laptop is physically",
      "Name the client screen (e.g., 'windows-laptop')",
      "Start server: Click Start",
      "Check IP address: ip addr show | grep inet",
      "On Windows: Download Barrier from https://github.com/debauchee/barrier/releases",
      "Install and run Barrier on Windows",
      "Configure as client: Select 'Client' radio button",
      "Enter Linux server IP: e.g., 192.168.1.100",
      "Client name: windows-laptop (must match server config)",
      "Click Start on Windows",
      "Test: Move mouse to edge of Linux screen, should jump to Windows",
      "Clipboard now shared: Copy on one, paste on other",
      "Option 2 - Using clipboard sync tools:",
      "On Linux: Install clipster: pip install clipster (clipboard manager)",
      "Start clipster: clipster -d",
      "On Windows: Install clipboard sync tool like ClipAngel or Ditto",
      "For network sync: Set up simple HTTP server on Linux: python3 -m http.server 8080",
      "Create clipboard sharing script on Linux: while true; do xclip -o -selection clipboard > /tmp/clip.txt; sleep 1; done",
      "On Windows: Poll the shared file or use PowerShell script",
      "Option 3 - KDE Connect (works with Android/iOS too):",
      "On Linux: sudo apt install kdeconnect (Ubuntu) or sudo pacman -S kdeconnect (Arch)",
      "Start KDE Connect: kdeconnect-app or kdeconnect-indicator",
      "On Windows: Download KDE Connect from Microsoft Store",
      "Pair devices: Click on device in KDE Connect GUI",
      "Enable clipboard plugin: Settings → Plugins → enable Clipboard",
      "Clipboard now synced automatically"
    ],
    "commands": ["barrier", "ip", "pip", "clipster", "xclip", "python3", "kdeconnect-app", "kdeconnect-indicator"],
    "packages": {
      "debian_ubuntu": ["barrier", "python3-pip", "xclip", "kdeconnect"],
      "arch": ["barrier", "python-pip", "xclip", "kdeconnect"]
    },
    "complexity": "intermediate",
    "tags": ["clipboard", "cross-platform", "windows", "linux", "barrier", "kdeconnect", "multi-device"]
  },
  {
    "id": "md_004",
    "scenario": "Set up seamless mouse and keyboard sharing across three computers",
    "problem": "Have three computers (two Linux, one Windows) on desk, want to use one keyboard/mouse for all",
    "solution": "Configure Barrier/Synergy with multiple screens in custom layout matching physical desk setup",
    "steps": [
      "Decide which machine is server (usually the one you sit in front of): e.g., center Linux desktop",
      "Install Barrier on all machines: sudo apt install barrier (Ubuntu) or yay -S barrier (Arch AUR) or Windows installer",
      "On server (center machine): Launch barrier → select Server",
      "Configure screen layout: Click 'Configure Server'",
      "Set up 3-screen layout: Drag screen icons to match physical positions",
      "Example: [Left Linux Laptop] [Center Linux Desktop (Server)] [Right Windows PC]",
      "Name each client screen: left-laptop, right-windows (match hostnames)",
      "Set screen edges: Ensure edges connect properly (center connects to both sides)",
      "Configure options: Settings → Enable clipboard sharing, lock cursor to screen",
      "Start server: Click Start button",
      "Note server IP: ip addr show | grep inet - e.g., 192.168.1.100",
      "On left laptop (client 1): Launch barrier → select Client",
      "Server IP: 192.168.1.100",
      "Screen name: left-laptop (MUST match server config exactly)",
      "Auto config: Check 'Auto config'",
      "Start client: Click Start",
      "On right Windows (client 2): Launch Barrier",
      "Configure as Client with server IP and screen name: right-windows",
      "Start client",
      "Test transitions: Move mouse from center to left edge → should jump to left laptop",
      "Move to right edge → should jump to Windows PC",
      "Test clipboard: Copy on one machine, paste on another",
      "Configure hotkeys: Server Settings → Hotkeys → add shortcuts (e.g., Ctrl+Alt+L to lock to laptop)",
      "Set up edge behavior: Configure 'Switch' delay and 'Corner' radius in screen config",
      "Enable TLS encryption: Settings → Enable SSL → Configure certificates for secure connection",
      "Auto-start on boot: Server: systemctl --user enable --now barrier",
      "Clients: Add to startup applications or Task Scheduler (Windows)",
      "Troubleshooting: Check firewall: sudo ufw allow from 192.168.1.0/24 to any port 24800",
      "Check logs: barrier --debug --log /tmp/barrier.log",
      "Advanced: Create custom layouts with overlap zones or dead corners",
      "Use Ctrl+Alt+L/R/U/D to manually switch screens if mouse transition acts up"
    ],
    "commands": ["barrier", "ip", "systemctl", "ufw"],
    "packages": {
      "debian_ubuntu": ["barrier"],
      "arch": ["barrier"]
    },
    "complexity": "advanced",
    "tags": ["kvm", "barrier", "synergy", "mouse-keyboard-sharing", "multi-device", "multi-computer"]
  },
  {
    "id": "md_005",
    "scenario": "Access files on NAS from multiple Linux machines with proper permissions",
    "problem": "Have NAS with SMB/CIFS share, need all Linux machines to access with correct user permissions",
    "solution": "Mount NAS share using CIFS with credentials file and proper UID/GID mapping",
    "steps": [
      "Install CIFS utilities: sudo apt install cifs-utils (Ubuntu) or sudo pacman -S cifs-utils (Arch)",
      "Get your user ID: id - note UID and GID (e.g., uid=1000, gid=1000)",
      "Create credentials file: sudo nano /root/.nascreds",
      "Add credentials: username=your_nas_user\\npassword=your_nas_password",
      "Secure credentials file: sudo chmod 600 /root/.nascreds",
      "Create mount point: sudo mkdir -p /mnt/nas",
      "Test mount: sudo mount -t cifs //nas.local/share /mnt/nas -o credentials=/root/.nascreds,uid=1000,gid=1000,file_mode=0755,dir_mode=0755",
      "Verify mount: ls -l /mnt/nas (should show your user as owner)",
      "Test write: touch /mnt/nas/test.txt (should work)",
      "Make permanent: sudo nano /etc/fstab",
      "Add line: //nas.local/share /mnt/nas cifs credentials=/root/.nascreds,uid=1000,gid=1000,file_mode=0755,dir_mode=0755,nofail,x-systemd.automount 0 0",
      "Key options explained: nofail (boot continues if NAS down), x-systemd.automount (mount on access)",
      "Test fstab: sudo mount -a (should mount without errors)",
      "Unmount to test automount: sudo umount /mnt/nas",
      "Access to trigger automount: ls /mnt/nas (should auto-mount)",
      "For multiple machines: Repeat on each machine with same UID/GID (important for permissions)",
      "If UIDs differ: Use idmap=acl or cifsacl option for ACL-based permissions",
      "For better performance: Add options cache=loose,vers=3.0 to fstab",
      "Security: For guest/public shares use guest,uid=1000,gid=1000 instead of credentials",
      "Troubleshooting: Check NAS logs, verify SMB version: smbclient -L //nas.local",
      "Check mount options: mount | grep cifs",
      "For debugging: Add -o debug to mount command and check dmesg",
      "Alternative NFS: If NAS supports NFS, use for better Linux compatibility: mount -t nfs nas.local:/share /mnt/nas"
    ],
    "commands": ["id", "nano", "chmod", "mkdir", "mount", "ls", "touch", "umount", "smbclient", "dmesg"],
    "packages": {
      "debian_ubuntu": ["cifs-utils", "smbclient"],
      "arch": ["cifs-utils", "smbclient"]
    },
    "complexity": "intermediate",
    "tags": ["nas", "cifs", "smb", "file-sharing", "mount", "fstab", "multi-device", "network-storage"]
  }
]
