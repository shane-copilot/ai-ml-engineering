[
  {
    "id": "rescue_001",
    "scenario": "System won't boot after failed update - rescue from live USB",
    "problem": "System hangs at boot, shows 'failed to load kernel modules' or drops to emergency mode after update",
    "solution": "Boot from live USB, chroot into system, fix broken packages and bootloader",
    "steps": [
      "Create bootable live USB: Download Ubuntu/Arch ISO, use dd: sudo dd if=ubuntu.iso of=/dev/sdX bs=4M status=progress",
      "Boot from live USB: Insert USB, reboot, press F12/F2/Del to enter boot menu, select USB",
      "Check partitions: lsblk or sudo fdisk -l - identify root partition (e.g., /dev/sda2)",
      "Mount root partition: sudo mount /dev/sda2 /mnt",
      "If using LVM: sudo vgchange -ay && sudo mount /dev/vg0/root /mnt",
      "If using LUKS encryption: sudo cryptsetup luksOpen /dev/sda2 cryptroot && sudo mount /dev/mapper/cryptroot /mnt",
      "Mount boot partition if separate: sudo mount /dev/sda1 /mnt/boot",
      "Mount EFI partition if UEFI: sudo mount /dev/sda1 /mnt/boot/efi",
      "Bind mount system directories: sudo mount --bind /dev /mnt/dev && sudo mount --bind /dev/pts /mnt/dev/pts && sudo mount --bind /proc /mnt/proc && sudo mount --bind /sys /mnt/sys",
      "Copy resolv.conf for network: sudo cp /etc/resolv.conf /mnt/etc/resolv.conf",
      "Chroot into system: sudo chroot /mnt /bin/bash",
      "You're now in your broken system!",
      "Update package database: apt update (Ubuntu) or pacman -Sy (Arch)",
      "Fix broken packages: apt --fix-broken install (Ubuntu) or pacman -Syu (Arch)",
      "Reconfigure packages: dpkg --configure -a (Ubuntu)",
      "Reinstall problematic kernel: apt install --reinstall linux-image-generic (Ubuntu) or pacman -S linux (Arch)",
      "Update initramfs: update-initramfs -u -k all (Ubuntu) or mkinitcpio -P (Arch)",
      "Reinstall bootloader (GRUB): grub-install /dev/sda (BIOS) or grub-install --target=x86_64-efi --efi-directory=/boot/efi (UEFI)",
      "Update GRUB config: update-grub (Ubuntu) or grub-mkconfig -o /boot/grub/grub.cfg (Arch)",
      "Check fstab for errors: cat /etc/fstab - verify UUIDs match: blkid",
      "Exit chroot: exit",
      "Unmount in reverse order: sudo umount /mnt/boot/efi /mnt/boot /mnt/dev/pts /mnt/dev /mnt/proc /mnt/sys /mnt",
      "Close LUKS if used: sudo cryptsetup luksClose cryptroot",
      "Reboot: sudo reboot",
      "Remove USB and let system boot normally",
      "If still fails: Boot live USB again, check logs: sudo chroot /mnt && journalctl -xb -p err"
    ],
    "commands": ["dd", "lsblk", "fdisk", "mount", "vgchange", "cryptsetup", "chroot", "apt", "dpkg", "pacman", "update-initramfs", "mkinitcpio", "grub-install", "update-grub", "grub-mkconfig", "cat", "blkid", "umount", "reboot", "journalctl"],
    "packages": {
      "debian_ubuntu": ["util-linux", "lvm2", "cryptsetup", "grub-pc", "grub-efi-amd64"],
      "arch": ["util-linux", "lvm2", "cryptsetup", "grub"]
    },
    "complexity": "advanced",
    "tags": ["rescue", "boot-failure", "chroot", "recovery", "grub", "live-usb", "system-repair"]
  },
  {
    "id": "rescue_002",
    "scenario": "Recover deleted files from ext4 filesystem",
    "problem": "Accidentally deleted important files, need to recover them before they're overwritten",
    "solution": "Use extundelete or testdisk immediately to recover recently deleted files",
    "steps": [
      "CRITICAL: Stop writing to the filesystem immediately! Unmount if possible",
      "Check which filesystem: df -T /path/to/mount or sudo file -s /dev/sdXY",
      "For ext4: Use extundelete",
      "Unmount filesystem if possible: sudo umount /dev/sdXY (increases recovery chances)",
      "If can't unmount (root): Boot from live USB, mount the partition read-only",
      "Mount read-only: sudo mount -o ro /dev/sdXY /mnt",
      "Install extundelete: sudo apt install extundelete (Ubuntu) or yay -S extundelete (Arch AUR)",
      "Scan for deleted files: sudo extundelete /dev/sdXY --inode 2 (shows root directory structure)",
      "Recover all recently deleted: sudo extundelete /dev/sdXY --restore-all",
      "Recover specific file: sudo extundelete /dev/sdXY --restore-file path/to/file.txt",
      "Recover directory: sudo extundelete /dev/sdXY --restore-directory path/to/directory",
      "Recover by date: sudo extundelete /dev/sdXY --after $(date -d '2025-01-01' +%s) --restore-all",
      "Files recovered to ./RECOVERED_FILES/ directory",
      "Alternative: Use testdisk for broader support",
      "Install testdisk: sudo apt install testdisk (Ubuntu) or sudo pacman -S testdisk (Arch)",
      "Run testdisk: sudo testdisk /dev/sdXY",
      "Select partition type: Usually 'Intel' for PC",
      "Choose partition, select 'Advanced' → 'Undelete'",
      "Browse deleted files (green = good recovery chance, red = overwritten)",
      "Select files with arrows, press 'c' to copy to current directory",
      "Specify destination: Enter path like /home/user/recovered",
      "For PhotoRec (testdisk companion, file carving): sudo photorec /dev/sdXY",
      "PhotoRec recovers by file signatures, doesn't need filesystem structure",
      "Select partition, file types to recover, destination",
      "PhotoRec saves with generic names, check file contents to identify",
      "For very recent deletions: Check trash first: ls ~/.local/share/Trash/files/",
      "Restore from trash: mv ~/.local/share/Trash/files/filename ~/",
      "Check backups: timeshift, rsnapshot, or manual backups",
      "Prevention: Set up automatic backups: timeshift, borg, restic"
    ],
    "commands": ["df", "file", "umount", "mount", "extundelete", "date", "testdisk", "photorec", "ls", "mv"],
    "packages": {
      "debian_ubuntu": ["extundelete", "testdisk"],
      "arch": ["extundelete", "testdisk"]
    },
    "complexity": "advanced",
    "tags": ["data-recovery", "deleted-files", "extundelete", "testdisk", "photorec", "rescue", "filesystem"]
  },
  {
    "id": "rescue_003",
    "scenario": "Fix corrupted filesystem that won't mount",
    "problem": "Disk partition won't mount, shows 'bad superblock' or 'filesystem corruption' errors",
    "solution": "Use fsck to check and repair filesystem errors",
    "steps": [
      "IMPORTANT: Never run fsck on mounted filesystem! Data corruption risk!",
      "Check if mounted: mount | grep /dev/sdXY or df -h",
      "Unmount if mounted: sudo umount /dev/sdXY",
      "If unmount fails (device busy): sudo fuser -m /dev/sdXY (shows processes using it)",
      "Kill processes: sudo fuser -km /dev/sdXY or sudo kill -9 <PID>",
      "Force unmount: sudo umount -l /dev/sdXY (lazy unmount)",
      "If root filesystem: Boot from live USB to work on it",
      "Check filesystem type: sudo blkid /dev/sdXY | grep TYPE",
      "For ext2/ext3/ext4: sudo fsck.ext4 -f /dev/sdXY",
      "For XFS: sudo xfs_repair /dev/sdXY",
      "For Btrfs: sudo btrfs check --repair /dev/sdXY",
      "For NTFS: sudo ntfsfix /dev/sdXY",
      "Run with auto-repair: sudo fsck.ext4 -y /dev/sdXY (-y answers yes to all prompts)",
      "For serious corruption: sudo fsck.ext4 -b 32768 /dev/sdXY (use backup superblock)",
      "Find backup superblocks: sudo mke2fs -n /dev/sdXY (shows superblock locations, doesn't write)",
      "Try alternate superblocks: sudo fsck.ext4 -b 98304 /dev/sdXY",
      "Check SMART health: sudo smartctl -a /dev/sdX | grep -iE 'error|fail|warning'",
      "If many bad sectors: Disk is failing, backup data immediately!",
      "After fsck completes: Check output for 'files deleted', 'inodes corrected', etc.",
      "Files may end up in lost+found: ls -la /mount/point/lost+found",
      "Recover from lost+found: sudo find /mount/point/lost+found -type f -exec file {} \\;",
      "Identify files by content: sudo file /mount/point/lost+found/*",
      "Mount filesystem: sudo mount /dev/sdXY /mnt",
      "Verify data integrity: Check important files",
      "If XFS won't mount: sudo xfs_repair -L /dev/sdXY (DANGER: Zeroes log, data loss risk)",
      "For journal corruption (ext4): sudo tune2fs -O ^has_journal /dev/sdXY then fsck then tune2fs -O has_journal /dev/sdXY",
      "Prevention: Regular backups, monitor SMART, don't force power off"
    ],
    "commands": ["mount", "umount", "df", "fuser", "kill", "blkid", "fsck.ext4", "xfs_repair", "btrfs", "ntfsfix", "mke2fs", "smartctl", "ls", "find", "file", "tune2fs"],
    "packages": {
      "debian_ubuntu": ["e2fsprogs", "xfsprogs", "btrfs-progs", "ntfs-3g", "smartmontools"],
      "arch": ["e2fsprogs", "xfsprogs", "btrfs-progs", "ntfs-3g", "smartmontools"]
    },
    "complexity": "advanced",
    "tags": ["filesystem", "corruption", "fsck", "repair", "rescue", "data-recovery", "bad-superblock"]
  },
  {
    "id": "rescue_004",
    "scenario": "Reset lost root password",
    "problem": "Forgot root/admin password, can't sudo or login as root",
    "solution": "Boot into single-user mode or use GRUB to get root shell and reset password",
    "steps": [
      "Method 1 - GRUB Single User Mode:",
      "Reboot system and hold Shift (BIOS) or Esc (UEFI) to show GRUB menu",
      "Select Ubuntu/Arch entry, press 'e' to edit",
      "Find line starting with 'linux' or 'linux16' or 'linuxefi'",
      "At end of linux line, add: init=/bin/bash (or rw init=/bin/bash)",
      "Or add: single or 1 (for single-user mode)",
      "Press Ctrl+X or F10 to boot with changes",
      "System boots to root shell without password",
      "Remount root as read-write: mount -o remount,rw /",
      "Verify mounted rw: mount | grep 'on / '",
      "Reset password: passwd username (or passwd for root)",
      "Enter new password twice",
      "For modern Ubuntu (uses recovery mode): Select 'Advanced options' → 'recovery mode' → 'root shell'",
      "Sync filesystems: sync",
      "Reboot: exec /sbin/init (or reboot -f)",
      "Method 2 - Live USB:",
      "Boot from live USB",
      "Mount root partition: sudo mount /dev/sdXY /mnt",
      "If encrypted: sudo cryptsetup luksOpen /dev/sdXY cryptroot && sudo mount /dev/mapper/cryptroot /mnt",
      "Chroot: sudo chroot /mnt /bin/bash",
      "Reset password: passwd username",
      "Exit and unmount: exit && sudo umount /mnt",
      "Reboot: sudo reboot",
      "Method 3 - Edit shadow file (advanced):",
      "Boot live USB, mount system partition",
      "Edit /mnt/etc/shadow: sudo nano /mnt/etc/shadow",
      "Find line for user: username:$6$...:...",
      "Delete hash between first and second colon: username::...",
      "Save and reboot - user has no password, set one immediately!",
      "Security note: If someone can physically access machine, they can reset password",
      "Protect with BIOS/UEFI password and disable boot from USB",
      "Full disk encryption (LUKS) provides better security"
    ],
    "commands": ["mount", "passwd", "sync", "exec", "reboot", "cryptsetup", "chroot", "umount", "nano"],
    "packages": {
      "debian_ubuntu": ["util-linux", "passwd", "cryptsetup"],
      "arch": ["util-linux", "shadow", "cryptsetup"]
    },
    "complexity": "intermediate",
    "tags": ["password-reset", "rescue", "grub", "single-user-mode", "root-access", "recovery"]
  },
  {
    "id": "rescue_005",
    "scenario": "Recover data from failing hard drive before it dies completely",
    "problem": "Hard drive making clicking noises, SMART errors, need to rescue data urgently",
    "solution": "Use ddrescue to create image of failing drive, then recover files from image",
    "steps": [
      "CRITICAL: Minimize access to failing drive! Every read attempt may be the last!",
      "Check SMART status: sudo smartctl -a /dev/sdX",
      "Look for: Reallocated_Sector_Count, Current_Pending_Sector, Offline_Uncorrectable",
      "High values = drive is failing",
      "Prepare destination: Need space equal to failing drive size",
      "Use external USB drive or another internal drive",
      "Check space: df -h /path/to/destination",
      "Install ddrescue: sudo apt install gddrescue (Ubuntu) or sudo pacman -S ddrescue (Arch)",
      "NOT dd_rescue - that's different! Want GNU ddrescue",
      "Power off system, physically remove failing drive if possible",
      "Connect as secondary drive (not boot drive) or use live USB",
      "Create image with ddrescue: sudo ddrescue -f -n /dev/sdX /path/to/image.img /path/to/logfile.log",
      "-f forces overwrite, -n means no scraping (first pass only)",
      "First pass: Reads all good sectors quickly",
      "This takes hours! Be patient, don't interrupt",
      "Second pass (scraping): sudo ddrescue -d -f -r3 /dev/sdX /path/to/image.img /path/to/logfile.log",
      "-d uses direct disk access, -r3 retries 3 times",
      "This is SLOW, may take days for large drives with many errors",
      "Monitor progress: ddrescue shows rescued, errors, and remaining",
      "If drive makes terrible noises: Stop immediately, consider professional recovery",
      "Once image created: Mount it as loop device",
      "Find partitions in image: sudo fdisk -l /path/to/image.img",
      "Calculate offset: Start sector × 512 (sector size)",
      "Mount partition: sudo mount -o loop,offset=<bytes> /path/to/image.img /mnt",
      "Or use losetup: sudo losetup -f -P /path/to/image.img then mount /dev/loop0p1 /mnt",
      "Copy data from mount: rsync -avh /mnt/ /path/to/safe/location/",
      "For corrupted filesystem in image: Run fsck on image file: sudo fsck.ext4 /path/to/image.img",
      "Or use testdisk/photorec on image: sudo testdisk /path/to/image.img",
      "Unmount: sudo umount /mnt",
      "Detach loop: sudo losetup -d /dev/loop0",
      "Keep image file as backup until data verified safe",
      "Dispose of failing drive properly - don't trust it again!"
    ],
    "commands": ["smartctl", "df", "ddrescue", "fdisk", "mount", "losetup", "rsync", "fsck.ext4", "testdisk", "umount"],
    "packages": {
      "debian_ubuntu": ["smartmontools", "gddrescue", "rsync", "testdisk"],
      "arch": ["smartmontools", "ddrescue", "rsync", "testdisk"]
    },
    "complexity": "advanced",
    "tags": ["data-recovery", "failing-drive", "ddrescue", "rescue", "disk-image", "smart", "hardware-failure"]
  }
]
