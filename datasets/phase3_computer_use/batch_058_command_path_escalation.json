[
  {
    "id": "scenario_command_not_found_multi_approach_001",
    "command": "which",
    "scenario": "Developer: Command not found errors for installed programs",
    "problem": "Commands exist but system can't find them",
    "solution": "Fix PATH and command resolution issues",
    "steps": [
      "USER SAYS: 'I installed Node.js but terminal says command not found!'",
      "AGENT: 'Let me troubleshoot why the command isn\\'t found...'",
      "AGENT: 'Approach 1: Check if command exists in PATH...'",
      "Try command: node --version",
      "AGENT: 'bash: node: command not found ✗'",
      "Check which: which node",
      "AGENT: '(no output) ✗'",
      "AGENT: 'Command not in PATH'",
      "AGENT: 'Approach 2: Search if binary exists anywhere...'",
      "Search system: sudo find /usr -name node 2>/dev/null",
      "AGENT: '/usr/local/bin/node'",
      "AGENT: '/usr/local/lib/nodejs/bin/node'",
      "AGENT: 'Found it! But not in PATH'",
      "Check PATH: echo $PATH",
      "AGENT: '/usr/bin:/bin:/usr/sbin:/sbin'",
      "AGENT: '/usr/local/bin is NOT in PATH! ✗'",
      "AGENT: 'Approach 3: Run with full path (temporary)...'",
      "Try full path: /usr/local/bin/node --version",
      "AGENT: 'v18.16.0 ✓'",
      "AGENT: 'Binary works with full path!'",
      "AGENT: 'Approach 4: Add directory to PATH permanently...'",
      "Add to bashrc: echo 'export PATH=/usr/local/bin:$PATH' >> ~/.bashrc",
      "AGENT: 'Added to ~/.bashrc ✓'",
      "Reload: source ~/.bashrc",
      "Check PATH: echo $PATH",
      "AGENT: '/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin ✓'",
      "Try command: node --version",
      "AGENT: 'v18.16.0 ✓'",
      "AGENT: 'Command works now!'",
      "USER: 'What if it still doesn\\'t work in new terminal?'",
      "AGENT: 'Different shells load different config files. Let me check...'",
      "AGENT: 'Approach 5: Check which shell you\\'re using...'",
      "Check shell: echo $SHELL",
      "AGENT: '/bin/zsh'",
      "AGENT: 'You\\'re using zsh, not bash!'",
      "AGENT: '.bashrc won\\'t be loaded by zsh'",
      "Add to zshrc: echo 'export PATH=/usr/local/bin:$PATH' >> ~/.zshrc",
      "AGENT: 'Added to ~/.zshrc ✓'",
      "Reload: source ~/.zshrc",
      "AGENT: 'Now works in zsh too ✓'",
      "AGENT: 'Approach 6: System-wide PATH for all users...'",
      "Show method: cat > ~/add-system-path.sh << 'EOF'",
      "#!/bin/bash",
      "# Add directory to system-wide PATH",
      "DIR=$1",
      "if [ -z \"$DIR\" ]; then",
      "  echo 'Usage: ./add-system-path.sh <directory>'",
      "  exit 1",
      "fi",
      "# Method 1: /etc/environment (affects all users)",
      "echo \"Adding $DIR to system PATH...\"",
      "if ! grep -q \"$DIR\" /etc/environment; then",
      "  sudo sed -i \"s|PATH=\\\"|PATH=\\\"$DIR:|\" /etc/environment",
      "  echo '✓ Added to /etc/environment'",
      "fi",
      "# Method 2: /etc/profile.d/ (more flexible)",
      "echo \"export PATH=$DIR:\\$PATH\" | sudo tee /etc/profile.d/custom-path.sh",
      "sudo chmod +x /etc/profile.d/custom-path.sh",
      "echo '✓ Added to /etc/profile.d/'",
      "echo ''",
      "echo 'Logout and login for changes to take effect'",
      "EOF",
      "chmod +x ~/add-system-path.sh",
      "AGENT: 'Approach 7: Create symlink in existing PATH dir...'",
      "Show method: sudo ln -s /usr/local/bin/node /usr/bin/node",
      "AGENT: 'Symlink makes it accessible without changing PATH'",
      "USER: 'What about commands from pip or npm?'",
      "AGENT: 'Approach 8: Add user-local bin directories...'",
      "Show paths: cat > ~/fix-user-paths.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== Adding User Binary Paths ==='",
      "SHELL_RC=~/.bashrc",
      "[ \"$SHELL\" == '/bin/zsh' ] && SHELL_RC=~/.zshrc",
      "# Python pip user installs",
      "if ! grep -q '.local/bin' $SHELL_RC; then",
      "  echo 'export PATH=$HOME/.local/bin:$PATH' >> $SHELL_RC",
      "  echo '✓ Added ~/.local/bin (Python pip)'",
      "fi",
      "# npm global installs",
      "if [ -d ~/.npm-global ]; then",
      "  if ! grep -q '.npm-global' $SHELL_RC; then",
      "    echo 'export PATH=$HOME/.npm-global/bin:$PATH' >> $SHELL_RC",
      "    echo '✓ Added ~/.npm-global/bin (npm)'",
      "  fi",
      "fi",
      "# Go binaries",
      "if [ -d ~/go/bin ]; then",
      "  if ! grep -q 'go/bin' $SHELL_RC; then",
      "    echo 'export PATH=$HOME/go/bin:$PATH' >> $SHELL_RC",
      "    echo '✓ Added ~/go/bin (Go)'",
      "  fi",
      "fi",
      "# Cargo/Rust binaries",
      "if [ -d ~/.cargo/bin ]; then",
      "  if ! grep -q '.cargo/bin' $SHELL_RC; then",
      "    echo 'export PATH=$HOME/.cargo/bin:$PATH' >> $SHELL_RC",
      "    echo '✓ Added ~/.cargo/bin (Rust)'",
      "  fi",
      "fi",
      "echo ''",
      "echo 'Reload shell:'",
      "echo \"  source $SHELL_RC\"",
      "EOF",
      "chmod +x ~/fix-user-paths.sh",
      "AGENT: 'Approach 9: Use hash to refresh command cache...'",
      "Show method: cat > ~/refresh-commands.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== Refreshing Command Cache ==='",
      "# Bash caches command locations",
      "hash -r",
      "echo '✓ Command cache cleared'",
      "echo ''",
      "echo 'If command still not found:'",
      "echo '1. Check PATH: echo $PATH'",
      "echo '2. Find binary: sudo find /usr /opt -name <command> 2>/dev/null'",
      "echo '3. Check installation: dpkg -L <package> | grep bin'",
      "EOF",
      "chmod +x ~/refresh-commands.sh",
      "AGENT: 'Approach 10: Check if using wrong package manager...'",
      "Show method: cat > ~/check-command-location.sh << 'EOF'",
      "#!/bin/bash",
      "CMD=$1",
      "echo \"=== Locating Command: $CMD ===\"",
      "echo ''",
      "# Try which (in PATH)",
      "echo '1. Checking PATH...'",
      "if which $CMD &>/dev/null; then",
      "  echo \"  ✓ Found: $(which $CMD)\"",
      "else",
      "  echo '  ✗ Not in PATH'",
      "fi",
      "echo ''",
      "# Try whereis (broader search)",
      "echo '2. Whereis results:'",
      "whereis $CMD",
      "echo ''",
      "# Search common locations",
      "echo '3. Searching common locations...'",
      "for dir in /usr/bin /usr/local/bin /opt /usr/sbin ~/.local/bin; do",
      "  if [ -f \"$dir/$CMD\" ] || [ -L \"$dir/$CMD\" ]; then",
      "    echo \"  ✓ Found in $dir\"",
      "  fi",
      "done",
      "echo ''",
      "# Check if installed",
      "echo '4. Package information:'",
      "if dpkg -l | grep -q $CMD 2>/dev/null; then",
      "  echo '  Installed via apt/dpkg'",
      "  dpkg -L $CMD 2>/dev/null | grep '/bin/'",
      "elif pacman -Q $CMD &>/dev/null; then",
      "  echo '  Installed via pacman'",
      "  pacman -Ql $CMD 2>/dev/null | grep '/bin/'",
      "else",
      "  echo '  Not found in package manager'",
      "fi",
      "EOF",
      "chmod +x ~/check-command-location.sh",
      "Create comprehensive PATH fixer: cat > ~/fix-path.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== PATH Configuration Fixer ==='",
      "echo ''",
      "echo 'Current PATH:'",
      "echo $PATH | tr ':' '\\n' | nl",
      "echo ''",
      "echo 'Current shell:'",
      "echo $SHELL",
      "echo ''",
      "# Determine config file",
      "if [[ $SHELL == *'zsh'* ]]; then",
      "  RC_FILE=~/.zshrc",
      "elif [[ $SHELL == *'bash'* ]]; then",
      "  RC_FILE=~/.bashrc",
      "else",
      "  RC_FILE=~/.profile",
      "fi",
      "echo \"Config file: $RC_FILE\"",
      "echo ''",
      "# Standard paths to add",
      "PATHS_TO_ADD=(",
      "  '/usr/local/bin'",
      "  '$HOME/.local/bin'",
      "  '/opt/bin'",
      ")",
      "echo 'Checking standard paths...'",
      "for path in \"${PATHS_TO_ADD[@]}\"; do",
      "  EXPANDED=$(eval echo $path)",
      "  if [[ \":$PATH:\" != *\":$EXPANDED:\"* ]]; then",
      "    if [ -d \"$EXPANDED\" ]; then",
      "      echo \"  Adding: $path\"",
      "      echo \"export PATH=$path:\\$PATH\" >> $RC_FILE",
      "    fi",
      "  else",
      "    echo \"  ✓ Already in PATH: $path\"",
      "  fi",
      "done",
      "echo ''",
      "echo 'Checking language-specific paths...'",
      "# Python",
      "if command -v python3 &>/dev/null; then",
      "  PY_USER_BASE=$(python3 -m site --user-base)/bin",
      "  if [ -d \"$PY_USER_BASE\" ]; then",
      "    echo \"  Found Python user base: $PY_USER_BASE\"",
      "    if ! grep -q \"$PY_USER_BASE\" $RC_FILE; then",
      "      echo \"export PATH=$PY_USER_BASE:\\$PATH\" >> $RC_FILE",
      "    fi",
      "  fi",
      "fi",
      "# Node.js",
      "if command -v npm &>/dev/null; then",
      "  NPM_PREFIX=$(npm config get prefix)/bin",
      "  if [ -d \"$NPM_PREFIX\" ]; then",
      "    echo \"  Found npm prefix: $NPM_PREFIX\"",
      "    if ! grep -q \"$NPM_PREFIX\" $RC_FILE; then",
      "      echo \"export PATH=$NPM_PREFIX:\\$PATH\" >> $RC_FILE",
      "    fi",
      "  fi",
      "fi",
      "echo ''",
      "echo '✓ PATH configuration updated'",
      "echo ''",
      "echo 'Apply changes:'",
      "echo \"  source $RC_FILE\"",
      "echo 'Or open a new terminal'",
      "EOF",
      "chmod +x ~/fix-path.sh",
      "Create command finder: cat > ~/find-command.sh << 'EOF'",
      "#!/bin/bash",
      "CMD=$1",
      "if [ -z \"$CMD\" ]; then",
      "  echo 'Usage: ./find-command.sh <command>'",
      "  exit 1",
      "fi",
      "echo \"=== Finding: $CMD ===\"",
      "echo ''",
      "# Quick checks",
      "if command -v $CMD &>/dev/null; then",
      "  echo \"✓ Found in PATH: $(which $CMD)\"",
      "  exit 0",
      "fi",
      "echo '✗ Not in current PATH'",
      "echo ''",
      "echo 'Searching system...'",
      "FOUND=false",
      "# Search likely locations",
      "for dir in /usr/bin /usr/local/bin /usr/sbin /usr/local/sbin /opt/*/bin ~/.local/bin ~/bin; do",
      "  if [ -f \"$dir/$CMD\" ]; then",
      "    echo \"Found: $dir/$CMD\"",
      "    FOUND=true",
      "    DIR=$(dirname $dir/$CMD)",
      "    echo ''",
      "    echo 'To use, either:'",
      "    echo \"  1. Run full path: $dir/$CMD\"",
      "    echo \"  2. Add to PATH: export PATH=$DIR:\\$PATH\"",
      "    echo \"  3. Create symlink: sudo ln -s $dir/$CMD /usr/local/bin/\"",
      "    break",
      "  fi",
      "done",
      "if [ \"$FOUND\" == 'false' ]; then",
      "  echo 'Not found on system'",
      "  echo ''",
      "  echo 'Try installing:'",
      "  echo \"  sudo apt install $CMD\"",
      "  echo \"  sudo pacman -S $CMD\"",
      "fi",
      "EOF",
      "chmod +x ~/find-command.sh",
      "AGENT: 'Command resolution fixed! ✓'",
      "AGENT: ''",
      "AGENT: 'Problem diagnosis:'",
      "AGENT: '  1. node command not found'",
      "AGENT: '  2. Binary exists at /usr/local/bin/node'",
      "AGENT: '  3. /usr/local/bin not in PATH'",
      "AGENT: '  4. Using zsh, not bash'",
      "AGENT: ''",
      "AGENT: 'Solutions applied:'",
      "AGENT: '  1. which node → not found'",
      "AGENT: '  2. find → located at /usr/local/bin'",
      "AGENT: '  3. full path → works'",
      "AGENT: '  4. added to PATH in .bashrc'",
      "AGENT: '  5. also added to .zshrc for zsh'",
      "AGENT: ''",
      "AGENT: 'Alternative approaches:'",
      "AGENT: '  6. System-wide PATH (~/add-system-path.sh)'",
      "AGENT: '  7. Symlink to existing PATH dir'",
      "AGENT: '  8. User-local paths (~/fix-user-paths.sh)'",
      "AGENT: '  9. Refresh command cache (hash -r)'",
      "AGENT: '  10. Check package location'",
      "AGENT: ''",
      "AGENT: 'Helper tools:'",
      "AGENT: '  ~/fix-path.sh - auto-configure PATH'",
      "AGENT: '  ~/find-command.sh <cmd> - locate command'",
      "AGENT: '  ~/check-command-location.sh <cmd> - detailed search'",
      "AGENT: ''",
      "AGENT: 'All commands now accessible! ✓'"
    ],
    "commands": ["which", "find", "echo", "export"],
    "packages": {"debian_ubuntu": [], "arch": []},
    "related_commands": ["which", "whereis", "find", "export"],
    "complexity": "beginner",
    "tags": ["PATH", "environment", "command-not-found", "multiple-approaches", "shell", "troubleshooting", "real-world", "ai-agent"]
  }
]
