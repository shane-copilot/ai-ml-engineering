[
  {
    "id": "scenario_docker_compose_orchestration_136",
    "command": "docker-compose",
    "scenario": "Orchestrate multi-container applications with docker-compose.",
    "problem": "Running multiple Docker containers manually is tedious, need to coordinate services, manage networking between containers, define dependencies, persist data with volumes, and easily start/stop entire application stacks.",
    "solution": "Use docker-compose to define multi-container apps in YAML, coordinate service startup order, manage networks and volumes, scale services, and simplify development workflows.",
    "steps": [
      "USER SAYS: 'I have a web app with nginx, PHP, and MySQL. How do I run all containers together easily?'",
      "AGENT: 'docker-compose is perfect! Define all services in one file.'",
      "AGENT: ''",
      "Create tool: `cat > docker-compose.yml << 'EOF'`",
      "version: '3.8'\n\nservices:\n  db:\n    image: mysql:8.0\n    container_name: mysql-db\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpass\n      MYSQL_DATABASE: myapp\n      MYSQL_USER: appuser\n      MYSQL_PASSWORD: apppass\n    volumes:\n      - db_data:/var/lib/mysql\n    networks:\n      - backend\n    healthcheck:\n      test: [\"CMD\", \"mysqladmin\", \"ping\", \"-h\", \"localhost\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\n  php:\n    image: php:8.2-fpm\n    container_name: php-app\n    volumes:\n      - ./app:/var/www/html\n    networks:\n      - backend\n      - frontend\n    depends_on:\n      db:\n        condition: service_healthy\n\n  nginx:\n    image: nginx:alpine\n    container_name: nginx-web\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./app:/var/www/html\n      - ./nginx.conf:/etc/nginx/nginx.conf:ro\n    networks:\n      - frontend\n    depends_on:\n      - php\n\nvolumes:\n  db_data:\n\nnetworks:\n  frontend:\n  backend:\nEOF",
      "AGENT: ''",
      "Run command: `docker-compose up -d`",
      "AGENT: '  -d = Detached mode (background)'",
      "AGENT: 'Creating network \"app_frontend\" with the default driver'",
      "AGENT: 'Creating network \"app_backend\" with the default driver'",
      "AGENT: 'Creating volume \"app_db_data\" with default driver'",
      "AGENT: 'Creating mysql-db ... done'",
      "AGENT: 'Creating php-app ... done'",
      "AGENT: 'Creating nginx-web ... done'",
      "AGENT: ''",
      "Run command: `docker-compose ps`",
      "AGENT: 'NAME        COMMAND                  SERVICE   STATUS    PORTS'",
      "AGENT: 'mysql-db    \"docker-entrypoint...\"   db        Up        3306/tcp'",
      "AGENT: 'php-app     \"docker-php-entryp...\"   php       Up        9000/tcp'",
      "AGENT: 'nginx-web   \"/docker-entrypoin...\"   nginx     Up        0.0.0.0:80->80/tcp'",
      "AGENT: ''",
      "Run command: `docker-compose logs -f nginx`",
      "AGENT: '  -f = Follow logs'",
      "AGENT: 'nginx-web | 172.18.0.1 - - [08/Oct/2025:18:30:00] \"GET / HTTP/1.1\" 200'",
      "AGENT: '...'",
      "AGENT: ''",
      "Run command: `docker-compose logs --tail=50 php`",
      "AGENT: 'Show last 50 lines of PHP logs'",
      "AGENT: ''",
      "Run command: `docker-compose exec php bash`",
      "AGENT: 'Open shell in PHP container'",
      "AGENT: ''",
      "Run command: `docker-compose exec db mysql -u root -p`",
      "AGENT: 'Connect to MySQL'",
      "AGENT: ''",
      "Run command: `docker-compose stop`",
      "AGENT: 'Stopping nginx-web ... done'",
      "AGENT: 'Stopping php-app ... done'",
      "AGENT: 'Stopping mysql-db ... done'",
      "AGENT: ''",
      "Run command: `docker-compose start`",
      "AGENT: 'Starting mysql-db ... done'",
      "AGENT: 'Starting php-app ... done'",
      "AGENT: 'Starting nginx-web ... done'",
      "AGENT: ''",
      "Run command: `docker-compose restart nginx`",
      "AGENT: 'Restart specific service'",
      "AGENT: ''",
      "Run command: `docker-compose down`",
      "AGENT: 'Stopping and removing containers, networks'",
      "AGENT: '(volumes persist by default)'",
      "AGENT: ''",
      "Run command: `docker-compose down -v`",
      "AGENT: '  -v = Remove volumes too'",
      "AGENT: 'Complete cleanup'",
      "AGENT: ''",
      "Run command: `docker-compose up --build`",
      "AGENT: 'Rebuild images before starting'",
      "AGENT: ''",
      "Run command: `docker-compose scale php=3`",
      "AGENT: 'Run 3 instances of PHP service'",
      "AGENT: ''",
      "Run command: `docker-compose config`",
      "AGENT: 'Validate and view compose file'",
      "AGENT: ''",
      "Run command: `docker-compose pull`",
      "AGENT: 'Pull latest images for all services'",
      "AGENT: ''",
      "AGENT: 'Development environment with override:'"
    ],
    "commands": ["docker-compose", "docker", "docker-compose up", "docker-compose down", "docker-compose logs", "docker-compose exec"],
    "packages": {
      "debian_ubuntu": ["docker-compose"],
      "arch": ["docker-compose"]
    },
    "related_commands": ["docker", "docker swarm", "kubernetes"],
    "complexity": "intermediate",
    "tags": ["docker-compose", "containers", "orchestration", "microservices", "multi-container", "docker"]
  },
  {
    "id": "scenario_service_debugging_systemctl_137",
    "command": "systemctl",
    "scenario": "Debug failing services and analyze systemd issues.",
    "problem": "Service won't start, need to diagnose startup failures, understand dependencies, check service status, analyze logs, and fix configuration issues preventing service operation.",
    "solution": "Use systemctl status for detailed error info, journalctl for logs, analyze unit files, check dependencies with list-dependencies, understand service states, and use systemd-analyze for boot issues.",
    "steps": [
      "USER SAYS: 'My nginx service won\\'t start and I don\\'t know why. How do I debug systemd service failures?'",
      "AGENT: 'Let me show you systemd debugging techniques!'",
      "AGENT: ''",
      "Run command: `systemctl status nginx`",
      "AGENT: '● nginx.service - A high performance web server'",
      "AGENT: '     Loaded: loaded (/lib/systemd/system/nginx.service; enabled)'",
      "AGENT: '     Active: failed (Result: exit-code) since Oct 8 18:30:00'",
      "AGENT: '    Process: 12345 ExecStart=/usr/sbin/nginx (code=exited, status=1/FAILURE)'",
      "AGENT: '   Main PID: 12345 (code=exited, status=1/FAILURE)'",
      "AGENT: ''",
      "AGENT: 'Oct 08 18:30:00 host systemd[1]: Starting nginx...'",
      "AGENT: 'Oct 08 18:30:00 host nginx[12345]: nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)'",
      "AGENT: 'Oct 08 18:30:00 host systemd[1]: nginx.service: Control process exited, code=exited status=1'",
      "AGENT: 'Oct 08 18:30:00 host systemd[1]: nginx.service: Failed with result \\'exit-code\\'.'",
      "AGENT: ''",
      "AGENT: 'Found it! Port 80 is already in use.'",
      "AGENT: ''",
      "Run command: `sudo ss -tlnp | grep :80`",
      "AGENT: 'LISTEN 0 128 0.0.0.0:80  users:((\"apache2\",pid=9999))'",
      "AGENT: 'Apache is using port 80!'",
      "AGENT: ''",
      "Run command: `sudo systemctl stop apache2`",
      "Run command: `sudo systemctl start nginx`",
      "Run command: `systemctl status nginx`",
      "AGENT: '● nginx.service - A high performance web server'",
      "AGENT: '     Active: active (running) since Oct 8 18:35:00'",
      "AGENT: '✓ Fixed!'",
      "AGENT: ''",
      "Run command: `journalctl -u nginx -n 50`",
      "AGENT: '  -u = Unit'",
      "AGENT: '  -n 50 = Last 50 lines'",
      "AGENT: 'View service logs'",
      "AGENT: ''",
      "Run command: `journalctl -u nginx --since \"1 hour ago\"`",
      "AGENT: 'Logs from last hour'",
      "AGENT: ''",
      "Run command: `journalctl -u nginx -f`",
      "AGENT: 'Follow logs in real-time'",
      "AGENT: ''",
      "Run command: `systemctl cat nginx.service`",
      "AGENT: 'Show unit file contents'",
      "AGENT: '[Unit]'",
      "AGENT: 'Description=A high performance web server'",
      "AGENT: 'After=network.target'",
      "AGENT: ''",
      "AGENT: '[Service]'",
      "AGENT: 'Type=forking'",
      "AGENT: 'ExecStart=/usr/sbin/nginx'",
      "AGENT: 'ExecReload=/usr/sbin/nginx -s reload'",
      "AGENT: '...'",
      "AGENT: ''",
      "Run command: `systemctl list-dependencies nginx`",
      "AGENT: 'nginx.service'",
      "AGENT: '● ├─network.target'",
      "AGENT: '● ├─system.slice'",
      "AGENT: '● └─sysinit.target'",
      "AGENT: ''",
      "Run command: `systemctl show nginx`",
      "AGENT: 'All properties of service'",
      "AGENT: ''",
      "Run command: `systemctl is-failed nginx`",
      "AGENT: 'active'",
      "AGENT: ''",
      "Run command: `systemctl list-units --state=failed`",
      "AGENT: 'Show all failed services'",
      "AGENT: ''",
      "Run command: `systemd-analyze verify /etc/systemd/system/myapp.service`",
      "AGENT: 'Validate unit file syntax'",
      "AGENT: ''",
      "Run command: `systemd-analyze blame`",
      "AGENT: 'Show which services slow down boot'",
      "AGENT: '15.234s postgresql.service'",
      "AGENT: '8.901s NetworkManager.service'",
      "AGENT: '...'",
      "AGENT: ''",
      "Run command: `systemd-analyze critical-chain`",
      "AGENT: 'Show critical path during boot'",
      "AGENT: ''",
      "Run command: `systemctl reset-failed`",
      "AGENT: 'Clear failed state of all services'",
      "AGENT: ''",
      "Run command: `systemctl daemon-reload`",
      "AGENT: 'Reload systemd after editing unit files'",
      "AGENT: ''",
      "AGENT: 'Common failure reasons:'",
      "AGENT: '1. Port already in use (check with ss/netstat)'",
      "AGENT: '2. Missing dependencies (check logs)'",
      "AGENT: '3. Permission issues (check file ownership)'",
      "AGENT: '4. Configuration errors (validate config)'",
      "AGENT: '5. Resource limits (check ulimit, cgroups)'",
      "AGENT: '6. Incorrect paths in unit file'",
      "AGENT: '7. Service timing out (increase TimeoutStartSec)'",
      "AGENT: ''",
      "Run command: `systemctl edit nginx.service`",
      "AGENT: 'Create override file for customization'",
      "AGENT: '[Service]'",
      "AGENT: 'TimeoutStartSec=90'",
      "AGENT: 'Restart=always'",
      "AGENT: 'RestartSec=10'"
    ],
    "commands": ["systemctl", "journalctl", "systemd-analyze", "ss", "netstat"],
    "packages": {
      "debian_ubuntu": ["systemd"],
      "arch": ["systemd"]
    },
    "related_commands": ["service", "chkconfig"],
    "complexity": "intermediate",
    "tags": ["systemctl", "systemd", "debugging", "services", "troubleshooting", "logs", "failures"]
  }
]