[
  {
    "id": "scenario_kernel_tuning_001",
    "command": "sysctl",
    "scenario": "User: System performance tuning needed",
    "problem": "Default kernel settings not optimized",
    "solution": "Tune kernel parameters for performance",
    "steps": [
      "USER SAYS: 'My system feels sluggish even though I have good hardware.'",
      "AGENT: 'Let me optimize kernel parameters for better performance...'",
      "Check current: sysctl -a | grep -E 'vm.swappiness|net.core'",
      "AGENT: 'Current settings shown'",
      "AGENT: 'vm.swappiness = 60 (too aggressive for desktop)'",
      "AGENT: 'net.core.default_qdisc = pfifo_fast (old)'",
      "Create tuning file: sudo cat > /etc/sysctl.d/99-performance.conf << 'EOF'",
      "# Memory management",
      "vm.swappiness = 10",
      "vm.vfs_cache_pressure = 50",
      "vm.dirty_ratio = 10",
      "vm.dirty_background_ratio = 5",
      "# Network performance",
      "net.core.default_qdisc = fq",
      "net.ipv4.tcp_congestion_control = bbr",
      "net.core.rmem_max = 16777216",
      "net.core.wmem_max = 16777216",
      "net.ipv4.tcp_rmem = 4096 87380 16777216",
      "net.ipv4.tcp_wmem = 4096 65536 16777216",
      "# File system",
      "fs.file-max = 2097152",
      "fs.inotify.max_user_watches = 524288",
      "EOF",
      "AGENT: 'Performance tuning file created ✓'",
      "Apply: sudo sysctl --system",
      "AGENT: 'New settings applied! ✓'",
      "Verify: sysctl vm.swappiness net.core.default_qdisc",
      "AGENT: 'vm.swappiness = 10 ✓'",
      "AGENT: 'net.core.default_qdisc = fq ✓'",
      "USER: 'What do these settings do?'",
      "AGENT: 'Let me explain:'",
      "AGENT: '- vm.swappiness=10: Use swap only when necessary (was 60)'",
      "AGENT: '- vm.vfs_cache_pressure=50: Keep file cache longer'",
      "AGENT: '- dirty_ratio: Control when to flush disk writes'",
      "AGENT: '- fq + bbr: Modern network congestion control'",
      "AGENT: '- tcp_rmem/wmem: Larger network buffers for speed'",
      "AGENT: '- file-max: More open files allowed'",
      "Create SSD optimization: sudo cat > /etc/sysctl.d/99-ssd.conf << 'EOF'",
      "# SSD-specific optimizations",
      "vm.dirty_ratio = 10",
      "vm.dirty_background_ratio = 5",
      "vm.dirty_expire_centisecs = 3000",
      "vm.dirty_writeback_centisecs = 500",
      "EOF",
      "AGENT: 'SSD optimization created ✓'",
      "Create gaming optimization: cat > ~/gaming-mode.sh << 'EOF'",
      "#!/bin/bash",
      "echo 'Enabling gaming mode...'",
      "# CPU governor",
      "echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor",
      "# Disable CPU power saving",
      "sudo systemctl mask systemd-rfkill.service systemd-rfkill.socket",
      "# Network priority",
      "sudo sysctl -w net.ipv4.tcp_low_latency=1",
      "echo '✓ Gaming mode enabled'",
      "echo 'Run ~/normal-mode.sh when done gaming'",
      "EOF",
      "chmod +x ~/gaming-mode.sh",
      "Create normal mode: cat > ~/normal-mode.sh << 'EOF'",
      "#!/bin/bash",
      "echo 'Restoring normal mode...'",
      "echo powersave | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor",
      "sudo systemctl unmask systemd-rfkill.service systemd-rfkill.socket",
      "sudo sysctl --system",
      "echo '✓ Normal mode restored'",
      "EOF",
      "chmod +x ~/normal-mode.sh",
      "Create tuning manager: cat > ~/system-tune.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== System Tuning Manager ==='",
      "echo ''",
      "echo '1. Show current settings'",
      "echo '2. Apply performance tuning'",
      "echo '3. Apply SSD optimizations'",
      "echo '4. Enable gaming mode'",
      "echo '5. Restore defaults'",
      "read -p 'Choice: ' OPT",
      "case $OPT in",
      "  1) sysctl -a | grep -E 'vm\\.|net\\.|fs\\.' | head -20 ;;",
      "  2) sudo sysctl --system ;;",
      "  3) sudo sysctl -p /etc/sysctl.d/99-ssd.conf ;;",
      "  4) ~/gaming-mode.sh ;;",
      "  5) sudo rm /etc/sysctl.d/99-*.conf && sudo sysctl --system ;;",
      "esac",
      "EOF",
      "chmod +x ~/system-tune.sh",
      "AGENT: 'System tuning complete! ✓'",
      "AGENT: 'Your system is now optimized for performance ✓'"
    ],
    "commands": ["sysctl"],
    "packages": {"debian_ubuntu": [], "arch": []},
    "related_commands": ["sysctl", "tuned"],
    "complexity": "advanced",
    "tags": ["performance", "kernel", "tuning", "optimization", "sysctl", "real-world", "ai-agent"]
  },
  {
    "id": "scenario_io_scheduler_001",
    "command": "iostat",
    "scenario": "User: Disk I/O performance issues",
    "problem": "Slow disk operations, need optimization",
    "solution": "Optimize I/O scheduler and disk settings",
    "steps": [
      "USER SAYS: 'Disk operations are super slow!'",
      "AGENT: 'Let me diagnose and optimize I/O performance...'",
      "Install tools: sudo apt install sysstat || sudo pacman -S sysstat",
      "AGENT: 'I/O monitoring tools installed ✓'",
      "Check I/O: iostat -x 1 5",
      "AGENT: 'Measuring disk activity...'",
      "AGENT: 'High %util and await times detected!'",
      "Check scheduler: cat /sys/block/sda/queue/scheduler",
      "AGENT: 'Current: [mq-deadline] noop kyber'",
      "USER: 'Which scheduler is best?'",
      "AGENT: 'Depends on your drive type:'",
      "AGENT: '- SSD/NVMe: none or kyber'",
      "AGENT: '- HDD: mq-deadline or bfq'",
      "Check drive type: lsblk -d -o name,rota",
      "AGENT: 'rota=0 → SSD, rota=1 → HDD'",
      "AGENT: 'Your /dev/sda: SSD (rota=0)'",
      "Set scheduler: echo none | sudo tee /sys/block/sda/queue/scheduler",
      "AGENT: 'Scheduler set to \"none\" for SSD ✓'",
      "Make permanent: sudo cat > /etc/udev/rules.d/60-ioschedulers.rules << 'EOF'",
      "# SSD/NVMe - use none or kyber",
      "ACTION==\"add|change\", KERNEL==\"sd[a-z]|nvme[0-9]n[0-9]\", ATTR{queue/rotational}==\"0\", ATTR{queue/scheduler}=\"none\"",
      "# HDD - use mq-deadline",
      "ACTION==\"add|change\", KERNEL==\"sd[a-z]\", ATTR{queue/rotational}==\"1\", ATTR{queue/scheduler}=\"mq-deadline\"",
      "EOF",
      "AGENT: 'Scheduler auto-selection configured ✓'",
      "Optimize SSD: sudo cat > /etc/tmpfiles.d/io-tuning.conf << 'EOF'",
      "# SSD optimizations",
      "w /sys/block/sda/queue/read_ahead_kb - - - - 256",
      "w /sys/block/sda/queue/nr_requests - - - - 256",
      "w /sys/block/sda/queue/add_random - - - - 0",
      "EOF",
      "AGENT: 'SSD optimizations configured ✓'",
      "Enable TRIM: sudo systemctl enable --now fstrim.timer",
      "AGENT: 'Weekly TRIM scheduled for SSD health ✓'",
      "Test improvement: iostat -x 1 5",
      "AGENT: 'Measuring after optimization...'",
      "AGENT: 'await time reduced by 40%! ✓'",
      "Create I/O monitor: cat > ~/io-monitor.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== Disk I/O Monitor ==='",
      "echo ''",
      "echo 'Current schedulers:'",
      "for disk in /sys/block/sd*; do",
      "  dev=$(basename $disk)",
      "  sched=$(cat $disk/queue/scheduler)",
      "  echo \"$dev: $sched\"",
      "done",
      "echo ''",
      "echo 'I/O statistics (5 samples):'",
      "iostat -x 1 5",
      "echo ''",
      "echo 'Top I/O processes:'",
      "sudo iotop -b -n 1 | head -15",
      "EOF",
      "chmod +x ~/io-monitor.sh",
      "Install iotop: sudo apt install iotop || sudo pacman -S iotop",
      "Create disk benchmark: cat > ~/disk-benchmark.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== Disk Benchmark ==='",
      "echo ''",
      "echo 'Write test (1GB):'",
      "dd if=/dev/zero of=~/testfile bs=1M count=1024 conv=fdatasync",
      "echo ''",
      "echo 'Read test (1GB):'",
      "dd if=~/testfile of=/dev/null bs=1M count=1024",
      "rm ~/testfile",
      "echo ''",
      "echo 'Random I/O test:'",
      "fio --name=randread --ioengine=libaio --iodepth=16 --rw=randread --bs=4k --direct=1 --size=512M --numjobs=1 --runtime=30 --group_reporting",
      "EOF",
      "chmod +x ~/disk-benchmark.sh",
      "AGENT: 'I/O performance optimized! ✓'",
      "AGENT: 'Disk operations should be much faster now ✓'"
    ],
    "commands": ["iostat", "iotop", "lsblk", "fio"],
    "packages": {"debian_ubuntu": ["sysstat", "iotop", "fio"], "arch": ["sysstat", "iotop", "fio"]},
    "related_commands": ["iostat", "iotop", "fio", "hdparm"],
    "complexity": "advanced",
    "tags": ["io", "disk", "performance", "optimization", "ssd", "scheduler", "real-world", "ai-agent"]
  },
  {
    "id": "scenario_zram_setup_001",
    "command": "zram",
    "scenario": "User: Limited RAM, system swapping heavily",
    "problem": "Not enough RAM, swap is slow",
    "solution": "Setup zram for compressed RAM",
    "steps": [
      "USER SAYS: 'I only have 4GB RAM and my system is constantly swapping!'",
      "AGENT: 'zram can compress RAM and avoid disk swap! Let me set it up...'",
      "Check current swap: swapon --show",
      "AGENT: 'Using disk swap: /swapfile (slow)'",
      "Install: sudo apt install zram-config || sudo pacman -S zram-generator",
      "AGENT: 'zram tools installed ✓'",
      "Configure: sudo cat > /etc/systemd/zram-generator.conf << 'EOF'",
      "[zram0]",
      "zram-size = ram / 2",
      "compression-algorithm = lz4",
      "swap-priority = 100",
      "EOF",
      "AGENT: 'zram configured: 50% of RAM, LZ4 compression ✓'",
      "Start: sudo systemctl daemon-reload && sudo systemctl start systemd-zram-setup@zram0.service",
      "AGENT: 'zram activated! ✓'",
      "Verify: zramctl",
      "AGENT: 'zram0: 2GB compressed RAM swap ✓'",
      "Check compression: cat /sys/block/zram0/mm_stat",
      "AGENT: 'Compression ratio: 3:1 (1GB RAM holds 3GB data) ✓'",
      "Disable old swap: sudo swapoff /swapfile",
      "AGENT: 'Disk swap disabled ✓'",
      "Remove from fstab: sudo sed -i '/swapfile/d' /etc/fstab",
      "AGENT: 'Permanent disk swap removed ✓'",
      "Test: free -h",
      "AGENT: 'Total available: 4GB RAM + 2GB zram = 6GB effective ✓'",
      "USER: 'Is it really faster?'",
      "AGENT: 'Much faster! zram is RAM speed, disk swap is 100x slower'",
      "Create zram stats: cat > ~/zram-stats.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== zram Statistics ==='",
      "echo ''",
      "zramctl",
      "echo ''",
      "echo 'Compression details:'",
      "cat /sys/block/zram0/mm_stat | awk '{",
      "  print \"Original size: \" $1/1024/1024 \" MB\"",
      "  print \"Compressed size: \" $2/1024/1024 \" MB\"",
      "  print \"Memory used: \" $3/1024/1024 \" MB\"",
      "  print \"Compression ratio: \" $1/$2 \":1\"",
      "}'",
      "echo ''",
      "echo 'Memory overview:'",
      "free -h",
      "EOF",
      "chmod +x ~/zram-stats.sh",
      "Create optimal config for different RAM sizes: cat > ~/zram-config-examples.txt << 'EOF'",
      "# zram configuration examples",
      "# For 2GB RAM:",
      "zram-size = ram",
      "# (100% of RAM = 2GB effective total)",
      "# For 4GB RAM:",
      "zram-size = ram / 2",
      "# (50% of RAM = 6GB effective total)",
      "# For 8GB+ RAM:",
      "zram-size = ram / 4",
      "# (25% of RAM for occasional swapping)",
      "# Compression algorithms:",
      "# lz4 - fastest (default)",
      "# zstd - better compression",
      "# lzo - balanced",
      "EOF",
      "AGENT: 'Example configs created ✓'",
      "Create zram toggle: cat > ~/zram-toggle.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== zram Manager ==='",
      "echo ''",
      "if zramctl | grep -q zram0; then",
      "  echo 'zram is ACTIVE'",
      "  echo ''",
      "  echo '1. Show stats'",
      "  echo '2. Disable zram'",
      "  read -p 'Choice: ' OPT",
      "  case $OPT in",
      "    1) ~/zram-stats.sh ;;",
      "    2) sudo swapoff /dev/zram0 && sudo systemctl stop systemd-zram-setup@zram0.service ;;",
      "  esac",
      "else",
      "  echo 'zram is INACTIVE'",
      "  echo ''",
      "  read -p 'Enable zram? (y/n): ' CONFIRM",
      "  if [ \"$CONFIRM\" == 'y' ]; then",
      "    sudo systemctl start systemd-zram-setup@zram0.service",
      "    echo '✓ zram enabled'",
      "  fi",
      "fi",
      "EOF",
      "chmod +x ~/zram-toggle.sh",
      "AGENT: 'zram setup complete! ✓'",
      "AGENT: 'Your 4GB RAM now effectively has 6GB! ✓'"
    ],
    "commands": ["zramctl", "swapon", "free"],
    "packages": {"debian_ubuntu": ["zram-config"], "arch": ["zram-generator"]},
    "related_commands": ["zramctl", "swapon", "free"],
    "complexity": "intermediate",
    "tags": ["zram", "memory", "swap", "compression", "performance", "optimization", "real-world", "ai-agent"]
  },
  {
    "id": "scenario_cpu_frequency_001",
    "command": "cpupower",
    "scenario": "User: Need CPU frequency control",
    "problem": "CPU always at max speed or too slow",
    "solution": "Configure CPU governor for best performance/battery",
    "steps": [
      "USER SAYS: 'My laptop battery drains fast because CPU is always at max speed!'",
      "AGENT: 'Let me configure intelligent CPU frequency scaling...'",
      "Install: sudo apt install linux-tools-generic || sudo pacman -S cpupower",
      "AGENT: 'CPU power tools installed ✓'",
      "Check current: cpupower frequency-info",
      "AGENT: 'Current governor: performance (always max speed)'",
      "AGENT: 'Available governors: performance powersave schedutil ondemand'",
      "List governors: cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors",
      "USER: 'Which should I use?'",
      "AGENT: 'Recommendations:'",
      "AGENT: '- powersave: Best battery life, scales based on load'",
      "AGENT: '- performance: Max speed always (gaming/rendering)'",
      "AGENT: '- schedutil: Automatic (recommended modern choice)'",
      "AGENT: '- ondemand: Quick response to load changes'",
      "Set powersave: sudo cpupower frequency-set -g powersave",
      "AGENT: 'Governor set to powersave ✓'",
      "Verify: cpupower frequency-info | grep 'current policy'",
      "AGENT: 'Now CPU scales from 800MHz to 4.8GHz based on load ✓'",
      "Make permanent: sudo cat > /etc/default/cpupower << 'EOF'",
      "governor='powersave'",
      "EOF",
      "Enable service: sudo systemctl enable --now cpupower",
      "AGENT: 'Power-saving mode will persist across reboots ✓'",
      "USER: 'But I want max performance when gaming!'",
      "AGENT: 'Create profiles you can switch!'",
      "Create performance mode: cat > ~/performance-mode.sh << 'EOF'",
      "#!/bin/bash",
      "echo 'Switching to PERFORMANCE mode...'",
      "sudo cpupower frequency-set -g performance",
      "echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor",
      "sudo cpupower frequency-info | grep 'current policy'",
      "echo '✓ Maximum performance enabled'",
      "EOF",
      "chmod +x ~/performance-mode.sh",
      "Create battery mode: cat > ~/battery-mode.sh << 'EOF'",
      "#!/bin/bash",
      "echo 'Switching to BATTERY SAVING mode...'",
      "sudo cpupower frequency-set -g powersave",
      "echo powersave | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor",
      "# Also reduce screen brightness",
      "echo 50 | sudo tee /sys/class/backlight/*/brightness",
      "sudo cpupower frequency-info | grep 'current policy'",
      "echo '✓ Battery saving mode enabled'",
      "EOF",
      "chmod +x ~/battery-mode.sh",
      "Create balanced mode: cat > ~/balanced-mode.sh << 'EOF'",
      "#!/bin/bash",
      "echo 'Switching to BALANCED mode...'",
      "sudo cpupower frequency-set -g schedutil",
      "echo schedutil | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor",
      "sudo cpupower frequency-info | grep 'current policy'",
      "echo '✓ Balanced mode enabled'",
      "EOF",
      "chmod +x ~/balanced-mode.sh",
      "Create CPU monitor: cat > ~/cpu-monitor.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== CPU Frequency Monitor ==='",
      "echo ''",
      "echo 'Current governor:'",
      "cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor",
      "echo ''",
      "echo 'CPU frequencies (live):'",
      "watch -n 1 'grep \"MHz\" /proc/cpuinfo'",
      "EOF",
      "chmod +x ~/cpu-monitor.sh",
      "Create power profile manager: cat > ~/power-profile.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== Power Profile Manager ==='",
      "echo ''",
      "echo 'Current governor:' $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor)",
      "echo 'Current frequency:' $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq | awk '{print $1/1000 \" MHz\"}')",
      "echo ''",
      "echo '1. Performance (max speed, gaming)'",
      "echo '2. Balanced (automatic, recommended)'",
      "echo '3. Battery saving (minimum power)'",
      "echo '4. Show CPU stats'",
      "read -p 'Choice: ' OPT",
      "case $OPT in",
      "  1) ~/performance-mode.sh ;;",
      "  2) ~/balanced-mode.sh ;;",
      "  3) ~/battery-mode.sh ;;",
      "  4) cpupower frequency-info ;;",
      "esac",
      "EOF",
      "chmod +x ~/power-profile.sh",
      "AGENT: 'CPU frequency management configured! ✓'",
      "AGENT: 'Switch profiles anytime with ~/power-profile.sh ✓'"
    ],
    "commands": ["cpupower"],
    "packages": {"debian_ubuntu": ["linux-tools-generic"], "arch": ["cpupower"]},
    "related_commands": ["cpupower", "cpufreq-set"],
    "complexity": "intermediate",
    "tags": ["cpu", "frequency", "governor", "power-management", "battery", "performance", "real-world", "ai-agent"]
  }
]
