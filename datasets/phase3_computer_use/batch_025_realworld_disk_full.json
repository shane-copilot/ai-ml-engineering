[
  {
    "id": "scenario_disk_full_001",
    "command": "multiple",
    "scenario": "User: My disk is full and I need to free up space",
    "problem": "Disk at 100% capacity, system warnings appearing, can't save files",
    "solution": "Diagnose what's using space and clean up safely",
    "steps": [
      "USER ASKS: 'My computer says the disk is full, what do I do?'",
      "AGENT: First, let me check your disk usage",
      "Run: df -h",
      "Identify which partition is full (usually / or /home)",
      "Example output: /dev/sda1 100% 450G mounted on /",
      "AGENT: 'Your main disk is 100% full (450GB used). Let me find what's taking up space.'",
      "Check home directory: du -sh ~/* | sort -h",
      "Shows folders by size, sorted",
      "Common culprits visible: Downloads/, Documents/, .cache/",
      "AGENT: 'Your Downloads folder is 50GB. Let me check what's there.'",
      "List large files: find ~/Downloads -type f -size +1G -exec ls -lh {} \\; | awk '{print $5, $9}'",
      "Shows files over 1GB with sizes",
      "AGENT: 'I found several large video files. Would you like me to list them?'",
      "USER: 'Yes, show me'",
      "Show sorted: find ~/Downloads -type f -size +1G -printf '%s %p\\n' | sort -rn | head -20 | awk '{print $1/1024/1024/1024 \" GB: \" $2}'",
      "Top 20 largest files in GB",
      "AGENT: 'Here are your largest files: movie1.mp4 (8.5GB), backup.tar (6.2GB)...'",
      "USER: 'Can you delete the old ISOs and backup files?'",
      "AGENT: 'I'll move them to trash for safety. You can permanently delete later.'",
      "Install trash-cli if needed: sudo apt install trash-cli",
      "Move to trash: find ~/Downloads -name '*.iso' -o -name '*backup*' | xargs -I {} trash-put {}",
      "Check system logs: sudo du -sh /var/log/* | sort -h | tail -10",
      "AGENT: 'Your logs are using 2GB. Should I clean old logs?'",
      "USER: 'Yes'",
      "Clean old logs: sudo journalctl --vacuum-time=7d",
      "Keeps only last 7 days",
      "Clean apt cache: sudo apt clean",
      "Frees downloaded package files",
      "Check for broken packages: dpkg -l | grep '^rc' | awk '{print $2}'",
      "Lists removed but not purged packages",
      "AGENT: 'Found residual config files from old packages. Cleaning...'",
      "Purge: dpkg -l | grep '^rc' | awk '{print $2}' | sudo xargs dpkg --purge",
      "Check docker: docker system df",
      "AGENT: 'Docker is using 30GB. Should I clean unused containers and images?'",
      "USER: 'Yes, but keep what I'm using'",
      "Clean docker: docker system prune -a --volumes",
      "Removes stopped containers, unused images, volumes",
      "Check package cache: du -sh /var/cache/apt/archives",
      "Already cleaned with apt clean",
      "Check for core dumps: du -sh /var/crash",
      "AGENT: 'Found 5GB of crash dumps. These are safe to delete.'",
      "Remove: sudo rm -rf /var/crash/*",
      "Check thumbnails: du -sh ~/.cache/thumbnails",
      "AGENT: 'Thumbnail cache is 800MB. Cleaning...'",
      "Remove: rm -rf ~/.cache/thumbnails/*",
      "Check browser cache: du -sh ~/.cache/mozilla ~/.cache/chromium ~/.cache/google-chrome",
      "AGENT: 'Browser caches total 3GB. Should I clear them?'",
      "USER: 'Yes'",
      "Clear: rm -rf ~/.cache/mozilla/* ~/.cache/chromium/* ~/.cache/google-chrome/*",
      "Final check: df -h",
      "AGENT: 'Done! Your disk now has 85GB free (19% usage). I cleaned:'",
      "AGENT: '- 50GB from Downloads (moved to trash)'",
      "AGENT: '- 30GB from Docker'",
      "AGENT: '- 5GB from crash dumps'",
      "AGENT: '- 3GB from browser caches'",
      "AGENT: '- 2GB from old logs'",
      "AGENT: 'Total freed: 90GB. You can empty trash permanently with: trash-empty'",
      "Suggest prevention: AGENT: 'Want me to set up automatic cleanup?'",
      "USER: 'Yes'",
      "Create cleanup script: cat > ~/cleanup.sh << 'EOF'",
      "#!/bin/bash",
      "# Auto cleanup script",
      "sudo journalctl --vacuum-time=7d",
      "sudo apt autoremove -y",
      "sudo apt clean",
      "docker system prune -f",
      "rm -rf ~/.cache/thumbnails/*",
      "echo \"Cleanup complete: $(df -h / | awk 'NR==2{print $4}') free\"",
      "EOF",
      "Make executable: chmod +x ~/cleanup.sh",
      "Add to cron: (crontab -l 2>/dev/null; echo '0 2 * * 0 ~/cleanup.sh') | crontab -",
      "Runs weekly on Sunday 2am",
      "AGENT: 'Setup complete! Automatic cleanup runs every Sunday at 2am.'"
    ],
    "commands": ["df", "du", "find", "sort", "trash-put", "journalctl", "apt", "dpkg", "docker", "rm", "crontab"],
    "packages": {
      "debian_ubuntu": ["trash-cli", "coreutils", "docker.io"],
      "arch": ["trash-cli", "coreutils", "docker"]
    },
    "related_commands": ["df", "du", "find", "ncdu", "baobab"],
    "complexity": "intermediate",
    "tags": ["disk-full", "cleanup", "storage", "troubleshooting", "real-world", "ai-agent"]
  },
  {
    "id": "scenario_slow_system_001",
    "command": "multiple",
    "scenario": "User: My computer is really slow right now",
    "problem": "System unresponsive, applications lagging, general slowness",
    "solution": "Diagnose bottleneck (CPU/RAM/disk/network) and resolve",
    "steps": [
      "USER ASKS: 'Everything is so slow! Can you help?'",
      "AGENT: 'Let me check what's causing the slowdown. One moment...'",
      "Check system load: uptime",
      "Shows load average: load average: 8.50, 7.23, 5.67",
      "AGENT: 'High CPU load detected (8.5). Let me find the culprit.'",
      "Check top processes: ps aux --sort=-pcpu | head -10",
      "Shows top CPU consumers",
      "Example: chrome using 150% CPU (multi-core)",
      "AGENT: 'Chrome is using 150% CPU with 30 tabs open.'",
      "Check memory: free -h",
      "Output: Mem: 15Gi total, 14.8Gi used, 200Mi free, 50Mi available",
      "AGENT: 'Also, you're almost out of RAM (only 50MB available).'",
      "Check swap usage: swapon --show",
      "Swap is active and being used heavily",
      "AGENT: 'Your system is swapping to disk, which makes everything slow.'",
      "Interactive view: Launch htop",
      "Run: htop",
      "AGENT: 'Opening system monitor...'",
      "Sort by CPU (P key) and Memory (M key)",
      "Identify: Chrome, several node processes, python script",
      "AGENT: 'I see three issues:'",
      "AGENT: '1. Chrome with 30 tabs (8GB RAM, 150% CPU)'",
      "AGENT: '2. node build process (4GB RAM, 80% CPU)'",
      "AGENT: '3. Python script running for 6 hours (2GB RAM, 20% CPU)'",
      "USER: 'I forgot about that Python script! Can you stop it?'",
      "AGENT: 'Yes. Is this it: python analyze_data.py?'",
      "USER: 'Yes, kill it'",
      "Find PID: pgrep -f analyze_data.py",
      "Kill gracefully: kill $(pgrep -f analyze_data.py)",
      "Wait 3 seconds: sleep 3",
      "Check if stopped: pgrep -f analyze_data.py",
      "If still running: kill -9 $(pgrep -f analyze_data.py)",
      "AGENT: 'Python script stopped. That freed 2GB RAM.'",
      "Check node process: ps aux | grep node",
      "AGENT: 'The node build is part of your project build. Should I stop it?'",
      "USER: 'No, I need that. Can you make it lower priority?'",
      "AGENT: 'Yes, I'll renice it to run at lower priority.'",
      "Find node PIDs: pgrep node",
      "Renice: pgrep node | xargs sudo renice -n 15 -p",
      "AGENT: 'Node processes now run at low priority (nice 15). Build continues but won't slow system.'",
      "Address Chrome: AGENT: 'Chrome is using 8GB RAM. Want me to check which tabs?'",
      "USER: 'Yes'",
      "List Chrome processes: ps aux | grep chrome | wc -l",
      "AGENT: 'Chrome has 87 processes. Consider:'",
      "AGENT: '- Close unused tabs'",
      "AGENT: '- Use Tab Suspender extension'",
      "AGENT: '- Or I can restart Chrome (closes all tabs)'",
      "USER: 'Just give me the current status'",
      "Check improvement: free -h",
      "Now: Mem: 12Gi used, 3Gi free, 2.5Gi available",
      "AGENT: 'Memory improved: 2.5GB now available (was 50MB).'",
      "Check CPU: uptime",
      "Load: load average: 4.2, 5.8, 6.1",
      "AGENT: 'CPU load dropping: 4.2 (was 8.5). System should feel faster.'",
      "Check I/O wait: vmstat 1 5",
      "Shows wa (I/O wait) column",
      "If high wa: AGENT: 'High disk I/O detected. Checking...'",
      "Check disk activity: sudo iotop -o -n 3",
      "Shows processes doing I/O",
      "If disk issue found: AGENT: 'Heavy disk activity from: [process]'",
      "Proactive suggestions: AGENT: 'To prevent future slowdowns:'",
      "AGENT: '1. Consider adding more RAM (16GB recommended)'",
      "AGENT: '2. Close unused Chrome tabs regularly'",
      "AGENT: '3. Use nice for background tasks'",
      "AGENT: '4. Monitor with: htop'",
      "USER: 'How do I check later if system is healthy?'",
      "Create helper alias: echo \"alias syscheck='echo \\\"=== CPU Load ===\\\" && uptime && echo \\\"=== Memory ===\\\" && free -h && echo \\\"=== Top Processes ===\\\" && ps aux --sort=-pcpu | head -5'\" >> ~/.bashrc",
      "Source: source ~/.bashrc",
      "AGENT: 'Added syscheck command. Just type: syscheck'",
      "Test it: syscheck",
      "AGENT: 'System now responsive. Summary:'",
      "AGENT: '✓ Killed stuck Python script (freed 2GB)'",
      "AGENT: '✓ Lowered node priority (CPU usage normalized)'",
      "AGENT: '✓ RAM available: 2.5GB (was 50MB)'",
      "AGENT: '✓ CPU load: 4.2 (was 8.5)'",
      "AGENT: 'Main remaining issue: Chrome (8GB). Consider closing tabs.'"
    ],
    "commands": ["uptime", "ps", "free", "swapon", "htop", "pgrep", "kill", "renice", "vmstat", "iotop", "xargs"],
    "packages": {
      "debian_ubuntu": ["procps", "htop", "iotop"],
      "arch": ["procps-ng", "htop", "iotop"]
    },
    "related_commands": ["top", "htop", "ps", "kill", "renice", "free"],
    "complexity": "intermediate",
    "tags": ["slow-system", "performance", "troubleshooting", "cpu", "memory", "real-world", "ai-agent"]
  },
  {
    "id": "scenario_connection_refused_001",
    "command": "multiple",
    "scenario": "User: I can't connect to my database/service",
    "problem": "Connection refused error when trying to access local or remote service",
    "solution": "Diagnose network connectivity, service status, and firewall issues",
    "steps": [
      "USER ASKS: 'I'm getting connection refused when trying to connect to my database'",
      "AGENT: 'Let me help diagnose this. What database and how are you connecting?'",
      "USER: 'PostgreSQL on localhost:5432'",
      "AGENT: 'Checking if PostgreSQL is running...'",
      "Check service status: sudo systemctl status postgresql",
      "If inactive: AGENT: 'PostgreSQL is not running. Starting it...'",
      "Start service: sudo systemctl start postgresql",
      "Enable on boot: sudo systemctl enable postgresql",
      "If active: AGENT: 'PostgreSQL is running. Checking if it's listening...'",
      "Check listening ports: sudo ss -tulpn | grep 5432",
      "Example output: LISTEN 0 128 127.0.0.1:5432 0.0.0.0:* users:((\"postgres\",pid=1234,fd=5))",
      "AGENT: 'Found it! PostgreSQL is listening on 127.0.0.1:5432 (localhost only)'",
      "If not found: AGENT: 'PostgreSQL not listening on port 5432. Checking configuration...'",
      "Check config: sudo cat /etc/postgresql/*/main/postgresql.conf | grep listen_addresses",
      "If localhost: AGENT: 'It's configured for localhost only. Is that correct?'",
      "USER: 'I need to connect from another machine'",
      "AGENT: 'I'll configure it to listen on all interfaces. Backing up config first...'",
      "Backup: sudo cp /etc/postgresql/14/main/postgresql.conf /etc/postgresql/14/main/postgresql.conf.backup",
      "Find exact path: PG_CONF=$(sudo find /etc/postgresql -name postgresql.conf)",
      "Update config: sudo sed -i \"s/#listen_addresses = 'localhost'/listen_addresses = '*'/\" $PG_CONF",
      "Or: echo \"listen_addresses = '*'\" | sudo tee -a $PG_CONF",
      "AGENT: 'Updated configuration. Restarting PostgreSQL...'",
      "Restart: sudo systemctl restart postgresql",
      "Verify: sudo ss -tulpn | grep 5432",
      "Should show: 0.0.0.0:5432 (all interfaces)",
      "Check firewall: sudo ufw status",
      "If active and port blocked: AGENT: 'Firewall is blocking port 5432. Opening it...'",
      "Allow port: sudo ufw allow 5432/tcp",
      "Reload: sudo ufw reload",
      "Test locally: psql -h localhost -U postgres -c '\\l'",
      "If password error: AGENT: 'PostgreSQL is running but needs authentication setup.'",
      "Check pg_hba.conf: sudo cat /etc/postgresql/*/main/pg_hba.conf | grep -v '^#' | grep -v '^$'",
      "AGENT: 'Current authentication rules shown above.'",
      "USER: 'I forgot the password'",
      "AGENT: 'I can help reset it. This requires sudo access.'",
      "Switch to postgres user: sudo -u postgres psql",
      "Run: ALTER USER postgres PASSWORD 'new_password';",
      "Or automated: sudo -u postgres psql -c \"ALTER USER postgres PASSWORD 'new_password';\"",
      "AGENT: 'Password updated. Try connecting again.'",
      "Test connection: psql -h localhost -U postgres -d postgres",
      "If remote connection: AGENT: 'Testing from remote host...'",
      "USER: 'It's still not working from my other machine'",
      "AGENT: 'Let me check network connectivity between machines.'",
      "Test ping: ping -c 3 <remote-ip>",
      "Test port: telnet <remote-ip> 5432",
      "Or: nc -zv <remote-ip> 5432",
      "If connection refused: AGENT: 'Connection refused. Checking firewall on database server...'",
      "Check iptables: sudo iptables -L -n | grep 5432",
      "If blocked: sudo iptables -A INPUT -p tcp --dport 5432 -j ACCEPT",
      "Save rules: sudo netfilter-persistent save",
      "Or for firewalld: sudo firewall-cmd --permanent --add-port=5432/tcp",
      "Reload: sudo firewall-cmd --reload",
      "Check pg_hba.conf for remote: sudo cat /etc/postgresql/*/main/pg_hba.conf | tail -5",
      "Need entry like: host all all 192.168.1.0/24 md5",
      "Add if missing: echo 'host all all 0.0.0.0/0 md5' | sudo tee -a $PG_HBA_CONF",
      "AGENT: 'Added rule to allow remote connections. Reloading...'",
      "Reload config: sudo systemctl reload postgresql",
      "Final test: psql -h <database-ip> -U postgres -d postgres",
      "AGENT: 'Connection successful! Summary of changes:'",
      "AGENT: '✓ PostgreSQL listening on all interfaces (0.0.0.0:5432)'",
      "AGENT: '✓ Firewall allows port 5432'",
      "AGENT: '✓ PostgreSQL authentication configured'",
      "AGENT: '✓ Remote access enabled'",
      "AGENT: 'Connection string: postgresql://postgres@<host>:5432/postgres'",
      "Security warning: AGENT: 'Security note: You've enabled remote access.'",
      "AGENT: 'Recommendations:'",
      "AGENT: '1. Use strong passwords'",
      "AGENT: '2. Consider SSL/TLS encryption'",
      "AGENT: '3. Restrict IP ranges in pg_hba.conf'",
      "AGENT: '4. Use VPN for remote access'",
      "Create connection test script: cat > ~/test_db.sh << 'EOF'",
      "#!/bin/bash",
      "psql -h localhost -U postgres -d postgres -c 'SELECT version();'",
      "EOF",
      "Make executable: chmod +x ~/test_db.sh",
      "AGENT: 'Created test_db.sh for quick connection testing'"
    ],
    "commands": ["systemctl", "ss", "cat", "sed", "ufw", "psql", "ping", "telnet", "nc", "iptables", "firewall-cmd", "grep", "tee"],
    "packages": {
      "debian_ubuntu": ["postgresql", "netcat-openbsd", "ufw", "iptables-persistent"],
      "arch": ["postgresql", "gnu-netcat", "ufw", "iptables"]
    },
    "related_commands": ["systemctl", "ss", "netstat", "psql", "firewall-cmd", "ufw"],
    "complexity": "advanced",
    "tags": ["connection-refused", "database", "postgresql", "networking", "firewall", "troubleshooting", "real-world", "ai-agent"]
  }
]
