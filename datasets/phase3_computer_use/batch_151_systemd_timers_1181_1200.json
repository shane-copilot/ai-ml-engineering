[
  {
    "id": "scenario_systemd_timers_149",
    "command": "systemd-timer",
    "scenario": "Use systemd timers as a modern alternative to cron for scheduled tasks.",
    "problem": "Need to schedule recurring tasks, run jobs at specific times, manage service dependencies, get better logging than cron, handle failures with retries, and integrate with systemd's service management for robust task scheduling.",
    "solution": "Create systemd timer units paired with service units, use OnCalendar for scheduling, OnBootSec for boot-relative timing, configure dependencies and conditions, enable persistent timers, and leverage journald logging.",
    "steps": [
      "USER SAYS: 'How do I schedule tasks with systemd timers? I want better logging and control than cron.'",
      "AGENT: 'Let me show you systemd timers! They're more powerful than cron with better logging, dependencies, and integration with systemd.'",
      "AGENT: ''",
      "AGENT: 'üîç RESEARCH PHASE: systemd timers...'",
      "AGENT: '[Searching] \"systemd timer tutorial scheduling cron alternative\"'",
      "AGENT: '[Found] Timers require a .timer and .service file pair.'",
      "AGENT: '[Found] OnCalendar for cron-like scheduling, OnBootSec for boot timing.'",
      "AGENT: '[Found] Persistent timers survive system downtime.'",
      "AGENT: '[Found] Better logging via journalctl, automatic retries.'",
      "AGENT: '‚úì Research complete! Let's master systemd timers.'",
      "AGENT: ''",
      "AGENT: '--- Approach 1: Create Basic Timer ---'",
      "AGENT: ''",
      "AGENT: 'Step 1: Create the service (what to run)'",
      "Create tool: `sudo tee /etc/systemd/system/backup.service << 'EOF'`",
      "[Unit]\nDescription=Backup Service\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nType=oneshot\nExecStart=/usr/local/bin/backup.sh\nUser=backup\nGroup=backup\n\n# Restart on failure\nRestart=on-failure\nRestartSec=5min\n\n# Logging\nStandardOutput=journal\nStandardError=journal\nEOF",
      "AGENT: ''",
      "AGENT: 'Step 2: Create the timer (when to run)'",
      "Create tool: `sudo tee /etc/systemd/system/backup.timer << 'EOF'`",
      "[Unit]\nDescription=Backup Timer\nRequires=backup.service\n\n[Timer]\n# Run daily at 2 AM\nOnCalendar=daily\nOnCalendar=*-*-* 02:00:00\n\n# If system was off, run on next boot\nPersistent=true\n\n# Randomize start time by up to 15 minutes\nRandomizedDelaySec=15min\n\n[Install]\nWantedBy=timers.target\nEOF",
      "AGENT: ''",
      "AGENT: 'Step 3: Enable and start'",
      "Run command: `sudo systemctl daemon-reload`",
      "Run command: `sudo systemctl enable backup.timer`",
      "AGENT: 'Created symlink /etc/systemd/system/timers.target.wants/backup.timer'",
      "AGENT: ''",
      "Run command: `sudo systemctl start backup.timer`",
      "AGENT: ''",
      "Run command: `sudo systemctl status backup.timer`",
      "AGENT: '‚óè backup.timer - Backup Timer'",
      "AGENT: '   Loaded: loaded (/etc/systemd/system/backup.timer; enabled)'",
      "AGENT: '   Active: active (waiting) since Tue 2025-10-08 19:00:00 UTC'",
      "AGENT: '  Trigger: Wed 2025-10-09 02:00:00 UTC'",
      "AGENT: ''",
      "AGENT: '--- Approach 2: View Timers ---'",
      "Run command: `systemctl list-timers`",
      "AGENT: 'NEXT                         LEFT          LAST  PASSED  UNIT             ACTIVATES'",
      "AGENT: 'Wed 2025-10-09 02:00:00 UTC  6h 59min left -     -       backup.timer     backup.service'",
      "AGENT: 'Wed 2025-10-09 00:00:00 UTC  4h 59min left -     -       logrotate.timer  logrotate.service'",
      "AGENT: ''",
      "Run command: `systemctl list-timers --all`",
      "AGENT: 'Shows all timers including inactive ones'",
      "AGENT: ''",
      "Run command: `systemctl status backup.timer`",
      "AGENT: 'Shows timer status and next activation time'",
      "AGENT: ''",
      "AGENT: '--- Approach 3: OnCalendar Scheduling ---'",
      "AGENT: ''",
      "AGENT: 'Cron-style scheduling with OnCalendar:'",
      "AGENT: ''",
      "AGENT: 'Every minute:'",
      "AGENT: '  OnCalendar=*-*-* *:*:00'",
      "AGENT: ''",
      "AGENT: 'Every hour:'",
      "AGENT: '  OnCalendar=hourly'",
      "AGENT: '  OnCalendar=*-*-* *:00:00'",
      "AGENT: ''",
      "AGENT: 'Every day at 3 AM:'",
      "AGENT: '  OnCalendar=daily'",
      "AGENT: '  OnCalendar=*-*-* 03:00:00'",
      "AGENT: ''",
      "AGENT: 'Every Monday at 9 AM:'",
      "AGENT: '  OnCalendar=Mon *-*-* 09:00:00'",
      "AGENT: ''",
      "AGENT: 'First day of month:'",
      "AGENT: '  OnCalendar=monthly'",
      "AGENT: '  OnCalendar=*-*-01 00:00:00'",
      "AGENT: ''",
      "AGENT: 'Weekdays at 8 AM:'",
      "AGENT: '  OnCalendar=Mon..Fri *-*-* 08:00:00'",
      "AGENT: ''",
      "AGENT: 'Every 15 minutes:'",
      "AGENT: '  OnCalendar=*:0/15'",
      "AGENT: ''",
      "AGENT: 'Multiple times per day:'",
      "AGENT: '  OnCalendar=*-*-* 06,12,18:00:00'",
      "AGENT: ''",
      "AGENT: 'Test calendar expression:'",
      "Run command: `systemd-analyze calendar 'Mon..Fri *-*-* 09:00:00'`",
      "AGENT: '  Original form: Mon..Fri *-*-* 09:00:00'",
      "AGENT: 'Normalized form: Mon..Fri *-*-* 09:00:00'",
      "AGENT: '    Next elapse: Wed 2025-10-09 09:00:00 UTC'",
      "AGENT: ''",
      "AGENT: '--- Approach 4: Boot-Relative Timers ---'",
      "Create tool: `sudo tee /etc/systemd/system/startup-task.timer << 'EOF'`",
      "[Unit]\nDescription=Run task 5 minutes after boot\n\n[Timer]\n# 5 minutes after boot\nOnBootSec=5min\n\n# Run once, not recurring\nPersistent=false\n\n[Install]\nWantedBy=timers.target\nEOF",
      "AGENT: ''",
      "AGENT: 'OnBootSec - relative to system boot'",
      "AGENT: 'OnStartupSec - relative to systemd start'",
      "AGENT: 'OnActiveSec - relative to timer activation'",
      "AGENT: 'OnUnitActiveSec - relative to service last activation'",
      "AGENT: 'OnUnitInactiveSec - relative to service last deactivation'",
      "AGENT: ''",
      "AGENT: '--- Approach 5: Frequent Tasks (Alternative to Cron) ---'",
      "Create tool: `sudo tee /etc/systemd/system/monitor.service << 'EOF'`",
      "[Unit]\nDescription=System Monitor\n\n[Service]\nType=oneshot\nExecStart=/usr/local/bin/monitor.sh\nEOF",
      "AGENT: ''",
      "Create tool: `sudo tee /etc/systemd/system/monitor.timer << 'EOF'`",
      "[Unit]\nDescription=Monitor Timer - Every 5 minutes\n\n[Timer]\n# Run every 5 minutes\nOnBootSec=5min\nOnUnitActiveSec=5min\n\n[Install]\nWantedBy=timers.target\nEOF",
      "Run command: `sudo systemctl daemon-reload`",
      "Run command: `sudo systemctl enable --now monitor.timer`",
      "AGENT: ''",
      "AGENT: '--- Approach 6: View Logs ---'",
      "Run command: `journalctl -u backup.service`",
      "AGENT: 'Oct 08 19:00:00 host backup.sh[1234]: Starting backup...'",
      "AGENT: 'Oct 08 19:00:05 host backup.sh[1234]: Backup completed'",
      "AGENT: 'Shows all logs for the service'",
      "AGENT: ''",
      "Run command: `journalctl -u backup.service -n 50`",
      "AGENT: '  -n 50 = Last 50 lines'",
      "AGENT: ''",
      "Run command: `journalctl -u backup.service --since today`",
      "AGENT: 'Logs from today only'",
      "AGENT: ''",
      "Run command: `journalctl -u backup.service --since '2025-10-01' --until '2025-10-08'`",
      "AGENT: 'Date range'",
      "AGENT: ''",
      "Run command: `journalctl -u backup.timer -u backup.service`",
      "AGENT: 'Combined logs from timer and service'",
      "AGENT: ''",
      "AGENT: '--- Approach 7: Manual Trigger ---'",
      "Run command: `sudo systemctl start backup.service`",
      "AGENT: 'Run service manually (doesn\\'t affect timer schedule)'",
      "AGENT: ''",
      "Run command: `systemctl status backup.service`",
      "AGENT: 'Check last run status'",
      "AGENT: ''",
      "AGENT: '--- Approach 8: Persistent Timers ---'",
      "Create tool: `sudo tee /etc/systemd/system/critical-backup.timer << 'EOF'`",
      "[Unit]\nDescription=Critical Backup - Must Run Even If System Was Off\n\n[Timer]\nOnCalendar=daily\n\n# CRITICAL: Run on next boot if system was off during scheduled time\nPersistent=true\n\n# Ensure service finishes even if system is shutting down\nOnClockChange=true\nOnTimezoneChange=true\n\n[Install]\nWantedBy=timers.target\nEOF",
      "AGENT: ''",
      "AGENT: 'Persistent=true ensures:'",
      "AGENT: '  - If system was off during scheduled time'",
      "AGENT: '  - Task runs on next boot'",
      "AGENT: '  - Timestamp is stored in /var/lib/systemd/timers/'",
      "AGENT: ''",
      "AGENT: '--- Approach 9: Advanced Service Configuration ---'",
      "Create tool: `sudo tee /etc/systemd/system/db-backup.service << 'EOF'`",
      "[Unit]\nDescription=Database Backup Service\nAfter=postgresql.service\nRequires=postgresql.service\n\n[Service]\nType=oneshot\nExecStart=/usr/local/bin/db-backup.sh\n\n# Run as specific user\nUser=postgres\nGroup=postgres\n\n# Resource limits\nCPUQuota=50%\nMemoryMax=1G\nIOWeight=100\n\n# Timeout\nTimeoutStartSec=30min\n\n# Retry on failure\nRestart=on-failure\nRestartSec=5min\nStartLimitBurst=3\nStartLimitIntervalSec=1h\n\n# Environment\nEnvironment=\"BACKUP_DIR=/backup\"\nEnvironmentFile=-/etc/backup.conf\n\n# Logging\nStandardOutput=journal\nStandardError=journal\nSyslogIdentifier=db-backup\n\n# Security\nPrivateTmp=true\nProtectSystem=strict\nProtectHome=true\nReadWritePaths=/backup\nEOF",
      "AGENT: ''",
      "AGENT: '--- Approach 10: Complex Scheduling Example ---'",
      "Create tool: `sudo tee /etc/systemd/system/complex-task.timer << 'EOF'`",
      "[Unit]\nDescription=Complex Scheduling Example\n\n[Timer]\n# Multiple schedules\nOnCalendar=Mon,Wed,Fri 09:00:00\nOnCalendar=Tue,Thu 14:00:00\nOnCalendar=Sat,Sun 07:00:00\n\n# Add random delay (prevent thundering herd)\nRandomizedDelaySec=30min\n\n# Accuracy (default 1min, lower = more precise but more wakeups)\nAccuracySec=1min\n\n# Persistent\nPersistent=true\n\n# Wait for other services\nAfter=network-online.target\nWants=network-online.target\n\n[Install]\nWantedBy=timers.target\nEOF",
      "AGENT: ''",
      "AGENT: '--- Bonus: Migration from Cron ---'",
      "AGENT: ''",
      "AGENT: 'Cron: 0 2 * * * /path/to/script'",
      "AGENT: 'Systemd:'",
      "AGENT: '  OnCalendar=*-*-* 02:00:00'",
      "AGENT: ''",
      "AGENT: 'Cron: */15 * * * * /path/to/script'",
      "AGENT: 'Systemd:'",
      "AGENT: '  OnUnitActiveSec=15min'",
      "AGENT: ''",
      "AGENT: 'Cron: 0 0 * * 1 /path/to/script'",
      "AGENT: 'Systemd:'",
      "AGENT: '  OnCalendar=Mon *-*-* 00:00:00'",
      "AGENT: ''",
      "AGENT: 'Cron: @reboot /path/to/script'",
      "AGENT: 'Systemd:'",
      "AGENT: '  OnBootSec=5min'",
      "AGENT: ''",
      "AGENT: '--- Bonus: Timer Management Commands ---'",
      "AGENT: ''",
      "Run command: `systemctl list-timers --all`",
      "AGENT: 'List all timers'",
      "AGENT: ''",
      "Run command: `systemctl enable backup.timer`",
      "AGENT: 'Enable (start on boot)'",
      "AGENT: ''",
      "Run command: `systemctl disable backup.timer`",
      "AGENT: 'Disable (don\\'t start on boot)'",
      "AGENT: ''",
      "Run command: `systemctl start backup.timer`",
      "AGENT: 'Start immediately'",
      "AGENT: ''",
      "Run command: `systemctl stop backup.timer`",
      "AGENT: 'Stop timer'",
      "AGENT: ''",
      "Run command: `systemctl restart backup.timer`",
      "AGENT: 'Restart timer'",
      "AGENT: ''",
      "Run command: `systemctl status backup.timer`",
      "AGENT: 'Show status and next run'",
      "AGENT: ''",
      "Run command: `journalctl -u backup.service -f`",
      "AGENT: 'Follow logs in real-time'",
      "AGENT: ''",
      "Run command: `systemd-analyze calendar 'daily'`",
      "AGENT: 'Test calendar expression'",
      "AGENT: ''",
      "AGENT: '--- Bonus: Timer vs Cron Advantages ---'",
      "AGENT: ''",
      "AGENT: 'Systemd Timers Advantages:'",
      "AGENT: '  ‚úì Better logging (journalctl)'",
      "AGENT: '  ‚úì Service dependencies'",
      "AGENT: '  ‚úì Resource limits (CPU, memory)'",
      "AGENT: '  ‚úì Automatic retries on failure'",
      "AGENT: '  ‚úì Persistent timers (run if system was off)'",
      "AGENT: '  ‚úì Randomized delays'",
      "AGENT: '  ‚úì Better monitoring with systemctl'",
      "AGENT: '  ‚úì Security features (sandboxing)'",
      "AGENT: ''",
      "AGENT: 'Cron Advantages:'",
      "AGENT: '  ‚úì Simpler syntax (for basic tasks)'",
      "AGENT: '  ‚úì Single file configuration'",
      "AGENT: '  ‚úì Per-user crontabs'",
      "AGENT: '  ‚úì More portable'",
      "AGENT: ''",
      "AGENT: '--- Bonus: Real-World Examples ---'",
      "AGENT: ''",
      "AGENT: '1. Daily database backup at 3 AM:'",
      "Create tool: `cat > /tmp/example1.timer << 'EOF'`",
      "[Timer]\nOnCalendar=*-*-* 03:00:00\nPersistent=true\nEOF",
      "AGENT: ''",
      "AGENT: '2. System health check every 10 minutes:'",
      "Create tool: `cat > /tmp/example2.timer << 'EOF'`",
      "[Timer]\nOnBootSec=10min\nOnUnitActiveSec=10min\nEOF",
      "AGENT: ''",
      "AGENT: '3. Log rotation on Sundays at midnight:'",
      "Create tool: `cat > /tmp/example3.timer << 'EOF'`",
      "[Timer]\nOnCalendar=Sun *-*-* 00:00:00\nPersistent=true\nEOF",
      "AGENT: ''",
      "AGENT: '4. Certificate renewal check every 6 hours:'",
      "Create tool: `cat > /tmp/example4.timer << 'EOF'`",
      "[Timer]\nOnCalendar=*-*-* 00,06,12,18:00:00\nPersistent=true\nRandomizedDelaySec=15min\nEOF",
      "AGENT: ''",
      "AGENT: '5. Cleanup temp files 5 minutes after boot:'",
      "Create tool: `cat > /tmp/example5.timer << 'EOF'`",
      "[Timer]\nOnBootSec=5min\nEOF",
      "AGENT: ''",
      "AGENT: '‚úì SOLUTION SUMMARY:'",
      "AGENT: '  ‚úì Created systemd .timer and .service file pairs.'",
      "AGENT: '  ‚úì Used OnCalendar for cron-like scheduling.'",
      "AGENT: '  ‚úì Implemented boot-relative timing with OnBootSec.'",
      "AGENT: '  ‚úì Enabled persistent timers to survive downtime.'",
      "AGENT: '  ‚úì Viewed timer status with systemctl list-timers.'",
      "AGENT: '  ‚úì Accessed logs with journalctl -u service.'",
      "AGENT: '  ‚úì Tested calendar expressions with systemd-analyze.'",
      "AGENT: '  ‚úì Configured resource limits and security features.'",
      "AGENT: '  ‚úì Migrated from cron to systemd timers.'",
      "AGENT: '  ‚úì You now master systemd timers for robust task scheduling! ‚è∞'"
    ],
    "commands": ["systemctl", "journalctl", "systemd-analyze"],
    "packages": {
      "debian_ubuntu": ["systemd"],
      "arch": ["systemd"]
    },
    "related_commands": ["cron", "at", "anacron"],
    "complexity": "intermediate",
    "tags": ["systemd", "timers", "scheduling", "cron-alternative", "automation", "systemctl", "journalctl", "task-scheduling"]
  }
]
