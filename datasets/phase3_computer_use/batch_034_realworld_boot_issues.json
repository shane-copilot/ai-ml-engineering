[
  {
    "id": "scenario_boot_failure_001",
    "command": "multiple",
    "scenario": "User: System won't boot, stuck at black screen or emergency mode",
    "problem": "Boot failure, emergency mode, GRUB issues, or kernel panic",
    "solution": "Diagnose boot issues and recover system",
    "steps": [
      "USER SAYS: 'My computer won't boot! It's stuck at emergency mode.'",
      "AGENT: 'Don't worry, we can fix this. You're in emergency mode - that's actually good, means we have a shell.'",
      "AGENT: 'Let me check what caused the boot failure...'",
      "Check logs: journalctl -xb | grep -i 'error\\|fail' | tail -20",
      "AGENT: 'Looking at boot logs...'",
      "Common issue 1: Filesystem",
      "AGENT: 'I see: Failed to mount /home. This is likely a filesystem issue.'",
      "Check fstab: cat /etc/fstab",
      "AGENT: 'Checking /etc/fstab for mount errors...'",
      "Check mounts: mount | grep /home",
      "AGENT: 'The problem: /home partition has errors.'",
      "AGENT: 'I need to check the filesystem. This requires unmounting it.'",
      "Unmount: umount /home",
      "If busy: fuser -km /home",
      "Force unmount: umount -f /home",
      "AGENT: 'Running filesystem check...'",
      "Check filesystem: sudo fsck -y /dev/sda2",
      "AGENT: 'fsck is checking and repairing /home partition...'",
      "Wait: sleep 5",
      "AGENT: 'Filesystem repaired. Remounting...'",
      "Mount: mount /home",
      "Verify: df -h | grep /home",
      "AGENT: '/home mounted successfully. ✓'",
      "AGENT: 'Now let's exit emergency mode and continue boot...'",
      "Exit: systemctl default",
      "Or reboot: systemctl reboot",
      "Common issue 2: GRUB",
      "SCENARIO: 'GRUB rescue mode'",
      "USER: 'I'm stuck at grub rescue>'",
      "AGENT: 'GRUB bootloader is damaged. Let me help you boot...'",
      "AGENT: 'First, finding your Linux partition:'",
      "List: ls",
      "Shows: (hd0) (hd0,gpt1) (hd0,gpt2)",
      "AGENT: 'Checking each partition for Linux...'",
      "Check: ls (hd0,gpt2)/",
      "If found: AGENT: 'Found Linux on (hd0,gpt2)'",
      "Set root: set root=(hd0,gpt2)",
      "Set prefix: set prefix=(hd0,gpt2)/boot/grub",
      "Load normal: insmod normal",
      "Start: normal",
      "AGENT: 'GRUB should load now. After boot, we'll reinstall GRUB.'",
      "After successful boot:",
      "AGENT: 'System booted! Now reinstalling GRUB permanently...'",
      "Reinstall GRUB: sudo grub-install /dev/sda",
      "Update config: sudo update-grub",
      "AGENT: 'GRUB reinstalled. Next boot will be normal. ✓'",
      "Common issue 3: Kernel panic",
      "SCENARIO: 'Kernel panic on boot'",
      "AGENT: 'Kernel panic means the kernel couldn't initialize. Usually from bad kernel or drivers.'",
      "AGENT: 'At GRUB menu, press Esc to select previous kernel...'",
      "USER: 'I'm in GRUB now'",
      "AGENT: 'Select: Advanced Options for Ubuntu'",
      "AGENT: 'Choose the previous kernel (not the latest one)'",
      "After boot: AGENT: 'Booted with old kernel. Let me remove the broken one...'",
      "List kernels: dpkg --list | grep linux-image",
      "AGENT: 'Installed kernels: 5.15.0-91 (broken), 5.15.0-89 (current), 5.15.0-88'",
      "Remove broken: sudo apt remove linux-image-5.15.0-91-generic",
      "Update GRUB: sudo update-grub",
      "AGENT: 'Broken kernel removed. System will boot normally now. ✓'",
      "Common issue 4: Missing kernel modules",
      "AGENT: 'Checking if all required modules are present...'",
      "Check loaded: lsmod",
      "Check initramfs: sudo update-initramfs -u",
      "AGENT: 'Regenerating initramfs with all modules...'",
      "Update: sudo update-initramfs -u -k all",
      "AGENT: 'Kernel modules updated. ✓'",
      "Common issue 5: Disk full",
      "AGENT: 'Checking if boot partition is full...'",
      "Check: df -h /boot",
      "If 100%: AGENT: '/boot is full! This prevents kernel updates.'",
      "AGENT: 'Removing old kernels to free space...'",
      "List old: dpkg --list | grep linux-image | grep -v $(uname -r)",
      "Remove: sudo apt autoremove --purge",
      "Check again: df -h /boot",
      "AGENT: '/boot now has space. ✓'",
      "Create boot rescue script: AGENT: 'Creating emergency boot helper...'",
      "Create USB rescue: cat > ~/create-rescue-usb.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== Create Rescue USB ==='",
      "echo ''",
      "echo 'WARNING: This will erase the USB drive!'",
      "echo ''",
      "lsblk",
      "echo ''",
      "read -p 'USB device (e.g., /dev/sdb): ' USB",
      "read -p 'Are you sure? (type YES): ' CONFIRM",
      "[ \"$CONFIRM\" != 'YES' ] && exit 1",
      "echo ''",
      "echo 'Downloading Ubuntu ISO...'",
      "wget -O ~/ubuntu.iso https://releases.ubuntu.com/22.04/ubuntu-22.04.3-desktop-amd64.iso",
      "echo 'Writing to USB (this takes 5-10 minutes)...'",
      "sudo dd if=~/ubuntu.iso of=$USB bs=4M status=progress",
      "sync",
      "echo ''",
      "echo '✓ Rescue USB created!'",
      "echo 'Boot from this USB to access rescue tools.'",
      "EOF",
      "Make executable: chmod +x ~/create-rescue-usb.sh",
      "Create boot diagnostic: cat > ~/diagnose-boot.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== Boot Diagnostics ==='",
      "echo ''",
      "echo '1. Boot logs:'",
      "journalctl -xb | grep -i 'error\\|fail' | tail -10",
      "echo ''",
      "echo '2. Filesystem check:'",
      "mount | grep -E '^/dev'",
      "echo ''",
      "echo '3. Disk space:'",
      "df -h | grep -E '^/dev'",
      "echo ''",
      "echo '4. fstab configuration:'",
      "cat /etc/fstab | grep -v '^#'",
      "echo ''",
      "echo '5. Installed kernels:'",
      "dpkg --list | grep linux-image || pacman -Q | grep linux",
      "echo ''",
      "echo '6. GRUB configuration:'",
      "[ -f /boot/grub/grub.cfg ] && echo 'GRUB OK' || echo 'GRUB Missing'",
      "EOF",
      "Make executable: chmod +x ~/diagnose-boot.sh",
      "Create recovery commands: cat > ~/boot-recovery-guide.txt << 'EOF'",
      "Boot Recovery Quick Reference",
      "",
      "=== Emergency Mode ===",
      "1. Check logs: journalctl -xb",
      "2. Check mounts: mount",
      "3. Check fstab: cat /etc/fstab",
      "4. Fix filesystem: fsck -y /dev/sdXX",
      "5. Exit emergency: systemctl default",
      "",
      "=== GRUB Rescue ===",
      "1. List partitions: ls",
      "2. Find Linux: ls (hd0,gptX)/",
      "3. Set root: set root=(hd0,gptX)",
      "4. Set prefix: set prefix=(hd0,gptX)/boot/grub",
      "5. Load: insmod normal",
      "6. Start: normal",
      "7. After boot: sudo grub-install /dev/sda && sudo update-grub",
      "",
      "=== Kernel Panic ===",
      "1. At GRUB: Select Advanced Options",
      "2. Choose previous kernel",
      "3. After boot: Remove bad kernel",
      "   sudo apt remove linux-image-X.X.X",
      "   sudo update-grub",
      "",
      "=== Boot Partition Full ===",
      "1. Check: df -h /boot",
      "2. Remove old kernels: sudo apt autoremove --purge",
      "3. Verify: df -h /boot",
      "EOF",
      "Add aliases: cat >> ~/.bashrc << 'EOF'",
      "# Boot helpers",
      "alias boot-logs='journalctl -xb'",
      "alias boot-errors='journalctl -xb | grep -i error'",
      "alias boot-diag='~/diagnose-boot.sh'",
      "alias boot-guide='cat ~/boot-recovery-guide.txt'",
      "EOF",
      "Source: source ~/.bashrc",
      "Prevent future issues: AGENT: 'Setting up automatic maintenance...'",
      "Create script: cat > ~/boot-maintenance.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== Boot Maintenance ==='",
      "echo ''",
      "echo '1. Checking /boot space...'",
      "BOOT_USAGE=$(df /boot | tail -1 | awk '{print $5}' | sed 's/%//')",
      "if [ $BOOT_USAGE -gt 80 ]; then",
      "  echo 'WARNING: /boot is '$BOOT_USAGE'% full'",
      "  echo 'Cleaning old kernels...'",
      "  sudo apt autoremove --purge -y",
      "fi",
      "echo ''",
      "echo '2. Verifying filesystems...'",
      "sudo fsck -n / 2>&1 | grep -i 'clean\\|ok'",
      "echo ''",
      "echo '3. Checking GRUB...'",
      "[ -f /boot/grub/grub.cfg ] && echo '✓ GRUB OK' || echo '✗ GRUB Missing'",
      "echo ''",
      "echo '4. Updating initramfs...'",
      "sudo update-initramfs -u -k $(uname -r)",
      "echo ''",
      "echo '✓ Maintenance complete'",
      "EOF",
      "Make executable: chmod +x ~/boot-maintenance.sh",
      "Schedule: (crontab -l 2>/dev/null; echo '0 3 * * 0 ~/boot-maintenance.sh') | crontab -",
      "AGENT: 'Weekly boot maintenance scheduled. ✓'",
      "Final summary: AGENT: 'Boot issues resolved! Summary:'",
      "AGENT: ''",
      "AGENT: '✓ Filesystem repaired and mounted'",
      "AGENT: '✓ GRUB reinstalled and working'",
      "AGENT: '✓ Broken kernel removed'",
      "AGENT: '✓ Boot partition cleaned'",
      "AGENT: '✓ System boots normally'",
      "AGENT: ''",
      "AGENT: 'Prevention setup:'",
      "AGENT: '- Weekly boot maintenance (Sundays 3 AM)'",
      "AGENT: '- Automatic old kernel cleanup'",
      "AGENT: '- Boot diagnostic tools'",
      "AGENT: ''",
      "AGENT: 'Tools created:'",
      "AGENT: '- ~/diagnose-boot.sh (check boot health)'",
      "AGENT: '- ~/boot-maintenance.sh (maintenance)'",
      "AGENT: '- ~/boot-recovery-guide.txt (reference)'",
      "AGENT: '- ~/create-rescue-usb.sh (emergency USB)'",
      "AGENT: ''",
      "AGENT: 'Commands:'",
      "AGENT: '- boot-diag (diagnose)'",
      "AGENT: '- boot-logs (view logs)'",
      "AGENT: '- boot-guide (recovery reference)'",
      "AGENT: ''",
      "AGENT: 'Your system is stable and protected! ✓'"
    ],
    "commands": ["journalctl", "mount", "umount", "fsck", "systemctl", "grub-install", "update-grub", "dpkg", "apt", "df", "lsblk", "dd", "sync", "update-initramfs", "crontab", "cat", "chmod", "source"],
    "packages": {
      "debian_ubuntu": ["systemd", "grub2", "e2fsprogs"],
      "arch": ["systemd", "grub", "e2fsprogs"]
    },
    "related_commands": ["journalctl", "fsck", "grub-install", "systemctl", "mount"],
    "complexity": "advanced",
    "tags": ["boot-failure", "grub", "emergency-mode", "filesystem", "kernel-panic", "recovery", "real-world", "ai-agent"]
  }
]
