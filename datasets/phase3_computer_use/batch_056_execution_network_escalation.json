[
  {
    "id": "scenario_script_wont_execute_multi_approach_001",
    "command": "bash",
    "scenario": "Developer: Shell script won't execute, various errors",
    "problem": "Script fails in multiple ways, need systematic debugging",
    "solution": "Escalate through execution methods until success",
    "steps": [
      "USER SAYS: 'My script won\\'t run! I keep getting errors!'",
      "AGENT: 'Let me help you debug this systematically...'",
      "AGENT: 'Approach 1: Direct execution with ./ ...'",
      "Try run: ./deploy.sh",
      "AGENT: 'bash: ./deploy.sh: Permission denied ✗'",
      "AGENT: 'Missing execute permission'",
      "Check perms: ls -l deploy.sh",
      "AGENT: '-rw-r--r-- deploy.sh (no x permission)'",
      "AGENT: 'Approach 2: Add execute permission...'",
      "Fix perms: chmod +x deploy.sh",
      "AGENT: 'Execute permission added ✓'",
      "Try again: ./deploy.sh",
      "AGENT: 'bash: ./deploy.sh: /usr/bin/bash: bad interpreter ✗'",
      "AGENT: 'Shebang points to wrong path!'",
      "Check shebang: head -1 deploy.sh",
      "AGENT: '#!/usr/bin/bash'",
      "Check bash location: which bash",
      "AGENT: '/bin/bash'",
      "AGENT: 'Script expects /usr/bin/bash but it\\'s at /bin/bash'",
      "AGENT: 'Approach 3: Fix shebang path...'",
      "Fix shebang: sed -i '1s|/usr/bin/bash|/bin/bash|' deploy.sh",
      "AGENT: 'Shebang corrected ✓'",
      "Try again: ./deploy.sh",
      "AGENT: ': command not found ✗'",
      "AGENT: 'Weird error - checking file encoding...'",
      "Check encoding: file deploy.sh",
      "AGENT: 'deploy.sh: ASCII text, with CRLF line terminators'",
      "AGENT: 'Windows line endings! (CRLF instead of LF)'",
      "AGENT: 'Approach 4: Convert line endings...'",
      "Install dos2unix: sudo apt install dos2unix || sudo pacman -S dos2unix",
      "Convert: dos2unix deploy.sh",
      "AGENT: 'dos2unix: converting file deploy.sh to Unix format... ✓'",
      "Try again: ./deploy.sh",
      "AGENT: 'cd: /opt/app: No such file or directory ✗'",
      "AGENT: 'Script has hardcoded paths that don\\'t exist'",
      "USER: 'The paths are different on my system!'",
      "AGENT: 'Approach 5: Run with explicit interpreter and debugging...'",
      "Debug run: bash -x deploy.sh",
      "AGENT: '+ cd /opt/app  ← failing here'",
      "AGENT: '+ echo Starting deployment'",
      "AGENT: 'Script expects /opt/app but using relative paths would be better'",
      "Check pwd: pwd",
      "AGENT: '/home/user/projects/myapp'",
      "AGENT: 'Approach 6: Modify script to use relative paths...'",
      "Backup: cp deploy.sh deploy.sh.bak",
      "AGENT: 'Backup created ✓'",
      "Fix paths: sed -i 's|cd /opt/app|cd \"$(dirname \"$0\")\"|' deploy.sh",
      "AGENT: 'Changed to use script\\'s own directory ✓'",
      "Try again: bash deploy.sh",
      "AGENT: 'Starting deployment...'",
      "AGENT: 'Error: DEPLOY_KEY not set ✗'",
      "AGENT: 'Missing environment variable!'",
      "USER: 'I thought I set that!'",
      "AGENT: 'Approach 7: Check how script is sourcing environment...'",
      "Check script: grep -n 'DEPLOY_KEY' deploy.sh",
      "AGENT: 'Line 10: if [ -z \"$DEPLOY_KEY\" ]; then'",
      "AGENT: 'Script expects DEPLOY_KEY but it\\'s not set'",
      "Check env: echo $DEPLOY_KEY",
      "AGENT: '(empty)'",
      "AGENT: 'Approach 8: Set variable inline...'",
      "Run with var: DEPLOY_KEY='abc123' ./deploy.sh",
      "AGENT: 'Deployment successful! ✓'",
      "AGENT: 'It works when variable is provided!'",
      "USER: 'How do I make variables permanent?'",
      "AGENT: 'Let me show you different approaches...'",
      "AGENT: 'Approach 9: Use .env file (recommended for projects)...'",
      "Create env: cat > .env << 'EOF'",
      "DEPLOY_KEY=abc123",
      "DEPLOY_USER=admin",
      "DEPLOY_HOST=server.com",
      "EOF",
      "Update script: cat > deploy-improved.sh << 'EOF'",
      "#!/bin/bash",
      "# Load environment from .env file",
      "if [ -f .env ]; then",
      "  export $(cat .env | xargs)",
      "fi",
      "# Script content here",
      "if [ -z \"$DEPLOY_KEY\" ]; then",
      "  echo 'Error: DEPLOY_KEY not set'",
      "  exit 1",
      "fi",
      "echo \"Deploying with key: ${DEPLOY_KEY:0:5}...\"",
      "EOF",
      "chmod +x deploy-improved.sh",
      "AGENT: 'Script now loads .env automatically ✓'",
      "Test: ./deploy-improved.sh",
      "AGENT: 'Deploying with key: abc12... ✓'",
      "AGENT: 'Approach 10: Use env file with source...'",
      "Alternative: cat > deploy-source.sh << 'EOF'",
      "#!/bin/bash",
      "set -a  # Auto-export variables",
      "source .env 2>/dev/null || true",
      "set +a",
      "# Rest of script",
      "EOF",
      "AGENT: 'Approach 11: Add to .bashrc (user-wide)...'",
      "Show method: echo 'export DEPLOY_KEY=abc123' >> ~/.bashrc",
      "AGENT: 'Variable available in all future shells'",
      "AGENT: 'Approach 12: System-wide in /etc/environment...'",
      "Show method: echo 'DEPLOY_KEY=abc123' | sudo tee -a /etc/environment",
      "AGENT: 'Available to all users after reboot'",
      "Create script debugger: cat > ~/debug-script.sh << 'EOF'",
      "#!/bin/bash",
      "SCRIPT=$1",
      "if [ -z \"$SCRIPT\" ]; then",
      "  echo 'Usage: ./debug-script.sh <script>'",
      "  exit 1",
      "fi",
      "echo \"=== Script Debug: $SCRIPT ===\"",
      "echo ''",
      "echo '1. File exists?'",
      "if [ -f \"$SCRIPT\" ]; then",
      "  echo '  ✓ Yes'",
      "else",
      "  echo \"  ✗ No such file: $SCRIPT\"",
      "  exit 1",
      "fi",
      "echo ''",
      "echo '2. Permissions:'",
      "ls -l \"$SCRIPT\"",
      "if [ -x \"$SCRIPT\" ]; then",
      "  echo '  ✓ Executable'",
      "else",
      "  echo '  ✗ Not executable (run: chmod +x)'",
      "fi",
      "echo ''",
      "echo '3. Shebang line:'",
      "SHEBANG=$(head -1 \"$SCRIPT\")",
      "echo \"  $SHEBANG\"",
      "if [[ $SHEBANG == '#!'* ]]; then",
      "  INTERP=$(echo \"$SHEBANG\" | cut -d' ' -f1 | sed 's/#!//')",
      "  if [ -f \"$INTERP\" ]; then",
      "    echo \"  ✓ Interpreter exists: $INTERP\"",
      "  else",
      "    echo \"  ✗ Interpreter not found: $INTERP\"",
      "    echo \"  Available bash: $(which bash)\"",
      "  fi",
      "fi",
      "echo ''",
      "echo '4. Line endings:'",
      "if file \"$SCRIPT\" | grep -q CRLF; then",
      "  echo '  ✗ Windows (CRLF) - run: dos2unix'",
      "else",
      "  echo '  ✓ Unix (LF)'",
      "fi",
      "echo ''",
      "echo '5. Syntax check:'",
      "bash -n \"$SCRIPT\" 2>&1",
      "if [ $? -eq 0 ]; then",
      "  echo '  ✓ Syntax OK'",
      "else",
      "  echo '  ✗ Syntax errors found'",
      "fi",
      "echo ''",
      "echo '6. Environment variables referenced:'",
      "grep -oE '\\$\\{?[A-Z_]+\\}?' \"$SCRIPT\" | sort -u",
      "echo ''",
      "echo 'To run with debugging:'",
      "echo \"  bash -x $SCRIPT\"",
      "echo 'To check specific line:'",
      "echo \"  sed -n '<line>p' $SCRIPT\"",
      "EOF",
      "chmod +x ~/debug-script.sh",
      "Create script fixer: cat > ~/fix-script.sh << 'EOF'",
      "#!/bin/bash",
      "SCRIPT=$1",
      "echo \"=== Auto-fixing common script issues ===\"",
      "echo ''",
      "# Backup",
      "cp \"$SCRIPT\" \"${SCRIPT}.backup\"",
      "echo \"✓ Backup created: ${SCRIPT}.backup\"",
      "# Fix permissions",
      "chmod +x \"$SCRIPT\"",
      "echo '✓ Made executable'",
      "# Fix line endings",
      "if command -v dos2unix &>/dev/null; then",
      "  dos2unix -q \"$SCRIPT\" 2>/dev/null",
      "  echo '✓ Converted line endings'",
      "fi",
      "# Fix shebang if needed",
      "FIRST=$(head -1 \"$SCRIPT\")",
      "if [[ $FIRST == '#!/usr/bin/bash' ]] && [ ! -f /usr/bin/bash ]; then",
      "  sed -i '1s|/usr/bin/bash|/bin/bash|' \"$SCRIPT\"",
      "  echo '✓ Fixed shebang path'",
      "fi",
      "# Remove carriage returns",
      "sed -i 's/\\r$//' \"$SCRIPT\" 2>/dev/null",
      "echo '✓ Cleaned special characters'",
      "echo ''",
      "echo 'Testing script...'",
      "bash -n \"$SCRIPT\"",
      "if [ $? -eq 0 ]; then",
      "  echo '✓ Script syntax is valid'",
      "  echo ''",
      "  echo 'Try running:'",
      "  echo \"  ./$SCRIPT\"",
      "else",
      "  echo '✗ Syntax errors remain - manual fix needed'",
      "fi",
      "EOF",
      "chmod +x ~/fix-script.sh",
      "Create script wrapper: cat > ~/run-script-safely.sh << 'EOF'",
      "#!/bin/bash",
      "SCRIPT=$1",
      "shift  # Remaining args for script",
      "echo \"=== Running script with error handling ===\"",
      "echo ''",
      "# Try different execution methods",
      "echo 'Method 1: Direct execution...'",
      "if \"$SCRIPT\" \"$@\" 2>&1; then",
      "  echo '✓ Success'",
      "  exit 0",
      "fi",
      "echo '✗ Failed, trying method 2'",
      "echo ''",
      "echo 'Method 2: Explicit bash...'",
      "if bash \"$SCRIPT\" \"$@\" 2>&1; then",
      "  echo '✓ Success'",
      "  exit 0",
      "fi",
      "echo '✗ Failed, trying method 3'",
      "echo ''",
      "echo 'Method 3: Source in current shell...'",
      "if source \"$SCRIPT\" \"$@\" 2>&1; then",
      "  echo '✓ Success'",
      "  exit 0",
      "fi",
      "echo '✗ All methods failed'",
      "echo ''",
      "echo 'Run diagnostics:'",
      "echo \"  ~/debug-script.sh $SCRIPT\"",
      "EOF",
      "chmod +x ~/run-script-safely.sh",
      "AGENT: 'Script is now working! ✓'",
      "AGENT: ''",
      "AGENT: 'Problems encountered and fixed:'",
      "AGENT: '  1. No execute permission → chmod +x'",
      "AGENT: '  2. Wrong shebang path → sed to fix'",
      "AGENT: '  3. Windows line endings → dos2unix'",
      "AGENT: '  4. Hardcoded paths → relative paths'",
      "AGENT: '  5. Missing env variables → .env file'",
      "AGENT: ''",
      "AGENT: 'Execution methods tried:'",
      "AGENT: '  ./script.sh (direct)'",
      "AGENT: '  bash script.sh (explicit interpreter)'",
      "AGENT: '  bash -x script.sh (debug mode)'",
      "AGENT: '  VAR=value ./script.sh (inline env)'",
      "AGENT: ''",
      "AGENT: 'Helper tools created:'",
      "AGENT: '  ~/debug-script.sh - diagnose issues'",
      "AGENT: '  ~/fix-script.sh - auto-fix common problems'",
      "AGENT: '  ~/run-script-safely.sh - try multiple execution methods'",
      "AGENT: ''",
      "AGENT: 'Use ~/debug-script.sh for any script issues! ✓'"
    ],
    "commands": ["bash", "chmod", "dos2unix", "sed"],
    "packages": {"debian_ubuntu": ["dos2unix"], "arch": ["dos2unix"]},
    "related_commands": ["bash", "sh", "chmod", "dos2unix"],
    "complexity": "intermediate",
    "tags": ["bash", "scripting", "execution", "multiple-approaches", "debugging", "troubleshooting", "permissions", "real-world", "ai-agent"]
  },
  {
    "id": "scenario_network_unreachable_multi_approach_001",
    "command": "ping",
    "scenario": "Developer: Can't reach external servers, network issues",
    "problem": "Network connectivity failing, need systematic diagnosis",
    "solution": "Test connectivity at each network layer",
    "steps": [
      "USER SAYS: 'I can\\'t reach any external servers! Everything times out!'",
      "AGENT: 'Let me diagnose network connectivity layer by layer...'",
      "AGENT: 'Approach 1: Test basic ping to known server...'",
      "Try ping: ping -c 4 8.8.8.8",
      "AGENT: 'connect: Network is unreachable ✗'",
      "AGENT: 'Complete network failure'",
      "AGENT: 'Approach 2: Check if network interface is up...'",
      "Check interface: ip link show",
      "AGENT: '1: lo: <LOOPBACK,UP> state UNKNOWN'",
      "AGENT: '2: eth0: <NO-CARRIER,BROADCAST,MULTICAST,UP> state DOWN'",
      "AGENT: 'eth0 is UP but state is DOWN (no carrier) ✗'",
      "AGENT: 'Physical connection issue!'",
      "USER: 'The cable is plugged in!'",
      "AGENT: 'Approach 3: Try bringing interface down and up...'",
      "Restart interface: sudo ip link set eth0 down",
      "sleep 2",
      "sudo ip link set eth0 up",
      "AGENT: 'Interface cycled'",
      "Check again: ip link show eth0",
      "AGENT: 'eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> state UP ✓'",
      "AGENT: 'Link detected now!'",
      "Try ping: ping -c 4 8.8.8.8",
      "AGENT: 'connect: Network is unreachable ✗'",
      "AGENT: 'Link is up but still no connectivity'",
      "AGENT: 'Approach 4: Check if we have an IP address...'",
      "Check IP: ip addr show eth0",
      "AGENT: 'eth0: <BROADCAST,MULTICAST,UP,LOWER_UP>'",
      "AGENT: '    link/ether aa:bb:cc:dd:ee:ff'",
      "AGENT: '(no inet address!) ✗'",
      "AGENT: 'No IP address assigned!'",
      "AGENT: 'Approach 5: Try DHCP to get IP...'",
      "Try DHCP: sudo dhclient eth0",
      "AGENT: 'DHCPDISCOVER on eth0'",
      "AGENT: 'DHCPOFFER from 192.168.1.1'",
      "AGENT: 'DHCPACK from 192.168.1.1'",
      "AGENT: 'bound to 192.168.1.100 ✓'",
      "Check IP: ip addr show eth0",
      "AGENT: 'inet 192.168.1.100/24 ✓'",
      "AGENT: 'IP address assigned!'",
      "Try ping: ping -c 4 8.8.8.8",
      "AGENT: 'connect: Network is unreachable ✗'",
      "AGENT: 'Have IP but still can\\'t route'",
      "AGENT: 'Approach 6: Check routing table...'",
      "Check routes: ip route show",
      "AGENT: '192.168.1.0/24 dev eth0 proto kernel scope link src 192.168.1.100'",
      "AGENT: '(no default route!) ✗'",
      "AGENT: 'Missing default gateway!'",
      "USER: 'My router is 192.168.1.1'",
      "AGENT: 'Approach 7: Add default route manually...'",
      "Add route: sudo ip route add default via 192.168.1.1",
      "AGENT: 'Default route added ✓'",
      "Check routes: ip route show",
      "AGENT: 'default via 192.168.1.1 dev eth0 ✓'",
      "AGENT: '192.168.1.0/24 dev eth0 ✓'",
      "Try ping gateway: ping -c 4 192.168.1.1",
      "AGENT: '64 bytes from 192.168.1.1: icmp_seq=1 ttl=64 time=1.2 ms ✓'",
      "AGENT: 'Can reach gateway!'",
      "Try ping external: ping -c 4 8.8.8.8",
      "AGENT: '64 bytes from 8.8.8.8: icmp_seq=1 ttl=117 time=15 ms ✓'",
      "AGENT: 'External connectivity working! ✓'",
      "Test DNS: ping -c 4 google.com",
      "AGENT: 'ping: google.com: Temporary failure in name resolution ✗'",
      "AGENT: 'DNS not working!'",
      "AGENT: 'Approach 8: Check DNS configuration...'",
      "Check DNS: cat /etc/resolv.conf",
      "AGENT: '(empty file!) ✗'",
      "AGENT: 'No DNS servers configured'",
      "Add DNS: echo 'nameserver 8.8.8.8' | sudo tee /etc/resolv.conf",
      "echo 'nameserver 8.8.4.4' | sudo tee -a /etc/resolv.conf",
      "AGENT: 'Google DNS configured ✓'",
      "Test DNS: ping -c 4 google.com",
      "AGENT: 'PING google.com (172.217.14.206) 56(84) bytes of data. ✓'",
      "AGENT: 'DNS working!'",
      "USER: 'Why did I have to do all this manually?'",
      "AGENT: 'NetworkManager or systemd-networkd should handle this. Let me check...'",
      "AGENT: 'Approach 9: Check network management services...'",
      "Check NetworkManager: systemctl status NetworkManager",
      "AGENT: 'Unit NetworkManager.service could not be found ✗'",
      "Check networkd: systemctl status systemd-networkd",
      "AGENT: 'inactive (dead) ✗'",
      "AGENT: 'No network manager running!'",
      "AGENT: 'Approach 10: Enable NetworkManager...'",
      "Install: sudo apt install network-manager || sudo pacman -S networkmanager",
      "AGENT: 'NetworkManager installed ✓'",
      "Enable: sudo systemctl enable --now NetworkManager",
      "AGENT: 'NetworkManager started ✓'",
      "Wait: sleep 5",
      "Check connection: nmcli con show",
      "AGENT: 'Wired connection 1  uuid-xxx  eth0'",
      "AGENT: 'Connection managed automatically now ✓'",
      "Alternative approach: cat > ~/network-manual-setup.sh << 'EOF'",
      "#!/bin/bash",
      "# Approach 11: Manual network configuration",
      "INTERFACE=eth0",
      "IP=192.168.1.100",
      "GATEWAY=192.168.1.1",
      "NETMASK=24",
      "echo 'Manual network setup...'",
      "sudo ip link set $INTERFACE up",
      "sudo ip addr add $IP/$NETMASK dev $INTERFACE",
      "sudo ip route add default via $GATEWAY",
      "echo 'nameserver 8.8.8.8' | sudo tee /etc/resolv.conf",
      "echo '✓ Network configured manually'",
      "ping -c 2 8.8.8.8 && echo '✓ Connectivity verified'",
      "EOF",
      "chmod +x ~/network-manual-setup.sh",
      "Create network diagnostic tool: cat > ~/diagnose-network.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== Network Diagnostic Tool ==='",
      "echo ''",
      "echo '1. Testing network layers...'",
      "echo ''",
      "echo 'Layer 1: Physical link'",
      "for iface in $(ip -o link show | awk -F': ' '{print $2}' | grep -v lo); do",
      "  STATE=$(ip link show $iface | grep -oP 'state \\K\\w+')",
      "  if [ \"$STATE\" == 'UP' ]; then",
      "    echo \"  ✓ $iface: $STATE\"",
      "  else",
      "    echo \"  ✗ $iface: $STATE\"",
      "  fi",
      "done",
      "echo ''",
      "echo 'Layer 2: IP addressing'",
      "HAS_IP=false",
      "for iface in $(ip -o link show | awk -F': ' '{print $2}' | grep -v lo); do",
      "  IP=$(ip addr show $iface | grep 'inet ' | awk '{print $2}')",
      "  if [ -n \"$IP\" ]; then",
      "    echo \"  ✓ $iface: $IP\"",
      "    HAS_IP=true",
      "  else",
      "    echo \"  ✗ $iface: no IP\"",
      "  fi",
      "done",
      "echo ''",
      "echo 'Layer 3: Routing'",
      "if ip route show | grep -q default; then",
      "  GW=$(ip route show | grep default | awk '{print $3}')",
      "  echo \"  ✓ Default gateway: $GW\"",
      "  if ping -c 1 -W 2 $GW >/dev/null 2>&1; then",
      "    echo \"  ✓ Gateway reachable\"",
      "  else",
      "    echo \"  ✗ Gateway not reachable\"",
      "  fi",
      "else",
      "  echo '  ✗ No default gateway'",
      "fi",
      "echo ''",
      "echo 'Layer 4: Internet connectivity'",
      "if ping -c 1 -W 3 8.8.8.8 >/dev/null 2>&1; then",
      "  echo '  ✓ Can reach internet (8.8.8.8)'",
      "else",
      "  echo '  ✗ Cannot reach internet'",
      "fi",
      "echo ''",
      "echo 'Layer 5: DNS resolution'",
      "if ping -c 1 -W 3 google.com >/dev/null 2>&1; then",
      "  echo '  ✓ DNS working'",
      "else",
      "  echo '  ✗ DNS not working'",
      "  echo '  Current DNS servers:'",
      "  cat /etc/resolv.conf | grep nameserver",
      "fi",
      "echo ''",
      "echo 'Troubleshooting tips:'",
      "if [ \"$HAS_IP\" == 'false' ]; then",
      "  echo '  No IP: Run sudo dhclient <interface>'",
      "fi",
      "if ! ip route show | grep -q default; then",
      "  echo '  No gateway: Run sudo ip route add default via <gateway_ip>'",
      "fi",
      "if ! grep -q nameserver /etc/resolv.conf; then",
      "  echo '  No DNS: Add nameserver 8.8.8.8 to /etc/resolv.conf'",
      "fi",
      "EOF",
      "chmod +x ~/diagnose-network.sh",
      "Create network fixer: cat > ~/fix-network.sh << 'EOF'",
      "#!/bin/bash",
      "echo '=== Network Auto-Fix Tool ==='",
      "echo ''",
      "read -p 'Interface (eth0/wlan0): ' IFACE",
      "echo ''",
      "echo 'Attempting fixes...'",
      "echo ''",
      "echo '1. Bringing interface up...'",
      "sudo ip link set $IFACE down",
      "sleep 1",
      "sudo ip link set $IFACE up",
      "sleep 2",
      "echo ''",
      "echo '2. Requesting IP via DHCP...'",
      "sudo dhclient -r $IFACE 2>/dev/null",
      "sudo dhclient $IFACE",
      "sleep 3",
      "echo ''",
      "echo '3. Checking configuration...'",
      "IP=$(ip addr show $IFACE | grep 'inet ' | awk '{print $2}')",
      "if [ -n \"$IP\" ]; then",
      "  echo \"  ✓ IP: $IP\"",
      "else",
      "  echo '  ✗ No IP assigned'",
      "  exit 1",
      "fi",
      "if ip route show | grep -q default; then",
      "  echo \"  ✓ Gateway: $(ip route show | grep default | awk '{print $3}')\"",
      "else",
      "  echo '  ✗ No default gateway - add manually'",
      "fi",
      "echo ''",
      "echo '4. Testing connectivity...'",
      "ping -c 2 8.8.8.8 && echo '  ✓ Internet reachable' || echo '  ✗ No internet'",
      "EOF",
      "chmod +x ~/fix-network.sh",
      "AGENT: 'Network fully restored! ✓'",
      "AGENT: ''",
      "AGENT: 'Issues found and fixed:'",
      "AGENT: '  Layer 1: Interface down → brought up'",
      "AGENT: '  Layer 2: No IP → DHCP request'",
      "AGENT: '  Layer 3: No route → added default gateway'",
      "AGENT: '  Layer 4: Working after routing'",
      "AGENT: '  Layer 5: No DNS → added Google DNS'",
      "AGENT: '  Management: No network manager → installed NetworkManager'",
      "AGENT: ''",
      "AGENT: 'Diagnostic approach used:'",
      "AGENT: '  1. Test ping → failed (network unreachable)'",
      "AGENT: '  2. Check link → down, brought up'",
      "AGENT: '  3. Check IP → none, requested DHCP'",
      "AGENT: '  4. Check routing → missing, added route'",
      "AGENT: '  5. Check DNS → missing, configured'",
      "AGENT: '  6. Test each layer → all working'",
      "AGENT: ''",
      "AGENT: 'Tools created:'",
      "AGENT: '  ~/diagnose-network.sh - layer-by-layer diagnostic'",
      "AGENT: '  ~/fix-network.sh - automatic repair'",
      "AGENT: '  ~/network-manual-setup.sh - manual configuration'",
      "AGENT: ''",
      "AGENT: 'Use ~/diagnose-network.sh for any network issues! ✓'"
    ],
    "commands": ["ping", "ip", "dhclient", "nmcli"],
    "packages": {"debian_ubuntu": ["iproute2", "isc-dhcp-client", "network-manager"], "arch": ["iproute2", "dhclient", "networkmanager"]},
    "related_commands": ["ping", "ip", "dhclient", "nmcli", "ifconfig"],
    "complexity": "intermediate",
    "tags": ["network", "connectivity", "multiple-approaches", "layer-by-layer", "troubleshooting", "dhcp", "routing", "real-world", "ai-agent"]
  }
]
