[
  {
    "id": "scenario_network_troubleshoot_connectivity_100",
    "command": "ping",
    "scenario": "Systematically diagnose network connectivity issues using layered troubleshooting approach.",
    "problem": "Users report they cannot access a web application. The sysadmin needs to methodically diagnose where the problem is: DNS, routing, firewall, or the application itself. Random troubleshooting is wasting time.",
    "solution": "Use a systematic layered approach following the OSI model: test physical connectivity (ping), DNS resolution (dig/nslookup), routing (traceroute), port connectivity (telnet/nc), and finally application layer (curl). Narrow down the exact failure point.",
    "steps": [
      "USER SAYS: 'Users can't reach our web app at https://app.example.com. Where do I even start troubleshooting?'",
      "AGENT: 'Let's use a systematic layered approach! We'll work from bottom to top of the network stack to find exactly where the connection breaks. This is how professional network engineers troubleshoot.'",
      "AGENT: ''",
      "AGENT: 'üîç RESEARCH PHASE: Systematic network troubleshooting...'",
      "AGENT: '[Searching] \"network troubleshooting methodology osi model\"'",
      "AGENT: '[Found] Use bottom-up approach: Physical ‚Üí Network ‚Üí Transport ‚Üí Application layers.'",
      "AGENT: '[Found] Test each layer independently to isolate the problem.'",
      "AGENT: '[Found] Common tools: ping (ICMP), dig (DNS), traceroute (routing), nc/telnet (TCP), curl (HTTP).'",
      "AGENT: '‚úì Research complete! Let's systematically find the issue.'",
      "AGENT: ''",
      "AGENT: '--- Layer 1: Basic Connectivity (ICMP) ---'",
      "AGENT: 'First, can we reach the server at all?'",
      "Run command: `ping -c 4 app.example.com`",
      "AGENT: 'PING app.example.com (203.0.113.50) 56(84) bytes of data.'",
      "AGENT: '64 bytes from app.example.com (203.0.113.50): icmp_seq=1 ttl=54 time=12.3 ms'",
      "AGENT: '64 bytes from app.example.com (203.0.113.50): icmp_seq=2 ttl=54 time=11.8 ms'",
      "AGENT: '64 bytes from app.example.com (203.0.113.50): icmp_seq=3 ttl=54 time=12.1 ms'",
      "AGENT: '64 bytes from app.example.com (203.0.113.50): icmp_seq=4 ttl=54 time=12.5 ms'",
      "AGENT: ''",
      "AGENT: '--- 4 packets transmitted, 4 received, 0% packet loss ---'",
      "AGENT: ''",
      "AGENT: '‚úÖ Layer 1 OK: Server is reachable (IP: 203.0.113.50, latency: ~12ms)'",
      "AGENT: ''",
      "AGENT: '--- Layer 2: DNS Resolution ---'",
      "AGENT: 'Is DNS resolving correctly?'",
      "Run command: `dig +short app.example.com`",
      "AGENT: '203.0.113.50'",
      "AGENT: ''",
      "Run command: `dig app.example.com`",
      "AGENT: '; <<>> DiG 9.18.12 <<>> app.example.com'",
      "AGENT: ';; ANSWER SECTION:'",
      "AGENT: 'app.example.com.    300    IN    A    203.0.113.50'",
      "AGENT: ''",
      "AGENT: ';; Query time: 23 msec'",
      "AGENT: ';; SERVER: 8.8.8.8#53(8.8.8.8)'",
      "AGENT: ''",
      "AGENT: '‚úÖ Layer 2 OK: DNS resolves to 203.0.113.50 (TTL: 300s)'",
      "AGENT: ''",
      "AGENT: '--- Layer 3: Routing Path ---'",
      "AGENT: 'What route do packets take to reach the server?'",
      "Run command: `traceroute -n -m 15 app.example.com`",
      "AGENT: 'traceroute to app.example.com (203.0.113.50), 15 hops max'",
      "AGENT: ' 1  192.168.1.1      1.234 ms'",
      "AGENT: ' 2  10.0.0.1         2.456 ms'",
      "AGENT: ' 3  172.16.0.1       5.678 ms'",
      "AGENT: ' 4  203.0.113.1      10.234 ms'",
      "AGENT: ' 5  203.0.113.50     12.345 ms'",
      "AGENT: ''",
      "AGENT: '‚úÖ Layer 3 OK: Routing works, 5 hops, no timeouts'",
      "AGENT: ''",
      "AGENT: '--- Layer 4: Port Connectivity (TCP) ---'",
      "AGENT: 'Can we establish a TCP connection to the web port?'",
      "Run command: `nc -zv app.example.com 443`",
      "AGENT: 'Connection to app.example.com 443 port [tcp/https] succeeded!'",
      "AGENT: ''",
      "Run command: `nc -zv app.example.com 80`",
      "AGENT: 'Connection to app.example.com 80 port [tcp/http] succeeded!'",
      "AGENT: ''",
      "AGENT: '‚úÖ Layer 4 OK: Both HTTP (80) and HTTPS (443) ports are open'",
      "AGENT: ''",
      "AGENT: '--- Alternative: Check with telnet ---'",
      "Run command: `timeout 5 telnet app.example.com 443`",
      "AGENT: 'Trying 203.0.113.50...'",
      "AGENT: 'Connected to app.example.com.'",
      "AGENT: 'Escape character is \\'^]\\'.'",
      "AGENT: ''",
      "AGENT: '‚úÖ Telnet confirms port 443 accepts connections'",
      "AGENT: ''",
      "AGENT: '--- Layer 5: SSL/TLS Certificate ---'",
      "AGENT: 'Is the SSL certificate valid?'",
      "Run command: `openssl s_client -connect app.example.com:443 -servername app.example.com < /dev/null 2>&1 | grep -E 'subject=|issuer=|Verify'`",
      "AGENT: 'depth=2 C = US, O = DigiCert Inc, CN = DigiCert Global Root CA'",
      "AGENT: 'verify return:1'",
      "AGENT: 'subject=CN = app.example.com'",
      "AGENT: 'issuer=C = US, O = Let\\'s Encrypt, CN = R3'",
      "AGENT: 'Verify return code: 0 (ok)'",
      "AGENT: ''",
      "AGENT: '‚úÖ Layer 5 OK: SSL certificate is valid for app.example.com'",
      "AGENT: ''",
      "AGENT: '--- Layer 6: HTTP Response ---'",
      "AGENT: 'Does the web server respond correctly?'",
      "Run command: `curl -I https://app.example.com`",
      "AGENT: 'HTTP/2 503'",
      "AGENT: 'server: nginx/1.24.0'",
      "AGENT: 'date: Mon, 07 Oct 2025 15:15:00 GMT'",
      "AGENT: 'content-type: text/html'",
      "AGENT: 'content-length: 197'",
      "AGENT: ''",
      "AGENT: 'üî¥ FOUND THE PROBLEM! HTTP 503 Service Unavailable'",
      "AGENT: ''",
      "AGENT: '--- Layer 7: Detailed HTTP Check ---'",
      "Run command: `curl -v https://app.example.com 2>&1 | head -20`",
      "AGENT: '* Connected to app.example.com (203.0.113.50) port 443'",
      "AGENT: '* SSL connection using TLSv1.3 / TLS_AES_256_GCM_SHA384'",
      "AGENT: '> GET / HTTP/2'",
      "AGENT: '> Host: app.example.com'",
      "AGENT: '> User-Agent: curl/7.88.0'",
      "AGENT: '< HTTP/2 503'",
      "AGENT: '< server: nginx/1.24.0'",
      "AGENT: '<html>'",
      "AGENT: '<head><title>503 Service Temporarily Unavailable</title></head>'",
      "AGENT: '<body>'",
      "AGENT: '<center><h1>503 Service Temporarily Unavailable</h1></center>'",
      "AGENT: '</body>'",
      "AGENT: '</html>'",
      "AGENT: ''",
      "AGENT: '--- Diagnosis Summary ---'",
      "AGENT: '‚úÖ Network Layer (1-3): WORKING'",
      "AGENT: '  - Server is reachable via ping'",
      "AGENT: '  - DNS resolution works correctly'",
      "AGENT: '  - Routing path is clean'",
      "AGENT: ''",
      "AGENT: '‚úÖ Transport Layer (4): WORKING'",
      "AGENT: '  - TCP connections established successfully'",
      "AGENT: '  - Ports 80 and 443 are open'",
      "AGENT: ''",
      "AGENT: '‚úÖ Session/Presentation Layer (5-6): WORKING'",
      "AGENT: '  - SSL/TLS handshake succeeds'",
      "AGENT: '  - Certificate is valid'",
      "AGENT: '  - Nginx web server responds'",
      "AGENT: ''",
      "AGENT: 'üî¥ Application Layer (7): FAILING'",
      "AGENT: '  - HTTP 503 error: Backend application is down'",
      "AGENT: '  - Nginx is running but can't reach the application'",
      "AGENT: ''",
      "AGENT: '--- Next Steps: Check Backend Application ---'",
      "Run command: `ssh app.example.com 'systemctl status myapp'`",
      "AGENT: '‚óè myapp.service - My Application'",
      "AGENT: '   Loaded: loaded (/etc/systemd/system/myapp.service; enabled)'",
      "AGENT: '   Active: failed (Result: exit-code) since Mon 2025-10-07 15:10:00 UTC'",
      "AGENT: '   Process: 12345 ExecStart=/usr/bin/myapp (code=exited, status=1/FAILURE)'",
      "AGENT: ''",
      "AGENT: 'üí° ROOT CAUSE IDENTIFIED: The application service crashed!'",
      "AGENT: ''",
      "Run command: `ssh app.example.com 'journalctl -u myapp -n 20'`",
      "AGENT: 'Oct 07 15:10:00 app myapp[12345]: Error: Failed to connect to database'",
      "AGENT: 'Oct 07 15:10:00 app myapp[12345]: ECONNREFUSED: Connection refused at 127.0.0.1:5432'",
      "AGENT: ''",
      "AGENT: 'üéØ FINAL DIAGNOSIS: Application can't connect to PostgreSQL database!'",
      "AGENT: ''",
      "Run command: `ssh app.example.com 'systemctl status postgresql'`",
      "AGENT: '‚óè postgresql.service - PostgreSQL Database'",
      "AGENT: '   Loaded: loaded'",
      "AGENT: '   Active: inactive (dead)'",
      "AGENT: ''",
      "AGENT: '‚úì SOLUTION: Start the database, then restart the application:'",
      "Run command: `ssh app.example.com 'sudo systemctl start postgresql && sudo systemctl start myapp'`",
      "AGENT: ''",
      "Run command: `curl -I https://app.example.com`",
      "AGENT: 'HTTP/2 200'",
      "AGENT: 'server: nginx/1.24.0'",
      "AGENT: 'content-type: text/html'",
      "AGENT: ''",
      "AGENT: '‚úÖ FIXED! Application is now responding with HTTP 200 OK'",
      "AGENT: ''",
      "AGENT: '‚úì SOLUTION SUMMARY:'",
      "AGENT: '  ‚úì Used systematic layered troubleshooting approach.'",
      "AGENT: '  ‚úì Tested connectivity (ping), DNS (dig), routing (traceroute), ports (nc), SSL (openssl), HTTP (curl).'",
      "AGENT: '  ‚úì Identified that network layers 1-6 were working perfectly.'",
      "AGENT: '  ‚úì Found application layer failure: HTTP 503 error.'",
      "AGENT: '  ‚úì Traced root cause to PostgreSQL database being stopped.'",
      "AGENT: '  ‚úì Fixed by starting database and application services.'",
      "AGENT: '  ‚úì This methodical approach saved hours of random troubleshooting! üîç'"
    ],
    "commands": ["ping", "dig", "traceroute", "nc", "telnet", "openssl", "curl", "ssh", "systemctl", "journalctl"],
    "packages": {
      "debian_ubuntu": ["iputils-ping", "dnsutils", "traceroute", "netcat-openbsd", "telnet", "openssl", "curl", "openssh-client"],
      "arch": ["iputils", "bind", "traceroute", "gnu-netcat", "inetutils", "openssl", "curl", "openssh"]
    },
    "related_commands": ["nslookup", "mtr", "nmap", "tcpdump", "ss", "netstat"],
    "complexity": "intermediate",
    "tags": ["networking", "troubleshooting", "connectivity", "dns", "tcp", "http", "ssl", "debugging", "systematic-approach"]
  }
]
