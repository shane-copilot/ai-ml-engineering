[
  {
    "id": "scenario_docker_multi_stage_build_093",
    "command": "docker",
    "scenario": "Optimize Docker image size using multi-stage builds.",
    "problem": "A developer's Docker image is 1.2GB because it contains build tools, source code, and development dependencies. This makes deployments slow and storage expensive. They need to create a lean production image with only the compiled application.",
    "solution": "Use Docker multi-stage builds to separate the build environment from the runtime environment. Build the application in one stage with all necessary tools, then copy only the final artifacts to a minimal base image.",
    "steps": [
      "USER SAYS: 'My Node.js app Docker image is over 1GB! It has npm, build tools, and all the source files. How do I make it smaller for production?'",
      "AGENT: 'Perfect timing! Multi-stage Docker builds were designed exactly for this. We'll build in one stage and create a tiny production image in another. Let me show you.'",
      "AGENT: ''",
      "AGENT: '🔍 RESEARCH PHASE: Docker multi-stage builds...'",
      "AGENT: '[Searching] \"docker multi-stage build reduce image size\"'",
      "AGENT: '[Found] Multi-stage builds use multiple FROM statements in one Dockerfile.'",
      "AGENT: '[Found] Use `--from` flag in COPY to copy files from earlier stages.'",
      "AGENT: '[Found] Only the final stage becomes the actual image.'",
      "AGENT: '[Found] Use alpine base images for minimal size (5MB vs 100MB+).'",
      "AGENT: '✓ Research complete! Let's optimize that image.'",
      "AGENT: ''",
      "AGENT: '--- Approach 1: Current Single-Stage Dockerfile (The Problem) ---'",
      "Create tool: `cat > Dockerfile.old << 'EOF'`",
      "FROM node:18\n\nWORKDIR /app\n\n# Copy everything\nCOPY package*.json ./\nCOPY . .\n\n# Install all dependencies (including dev)\nRUN npm install\n\n# Build the application\nRUN npm run build\n\nEXPOSE 3000\nCMD [\"node\", \"dist/server.js\"]\nEOF",
      "AGENT: ''",
      "AGENT: 'Build it to see the size:'",
      "Run command: `docker build -f Dockerfile.old -t myapp:old .`",
      "Run command: `docker images myapp:old`",
      "AGENT: 'REPOSITORY   TAG       IMAGE ID       CREATED          SIZE'",
      "AGENT: 'myapp        old       a1b2c3d4e5f6   10 seconds ago   1.21GB'",
      "AGENT: ''",
      "AGENT: '😱 1.21GB! That includes Node.js, npm, build tools, node_modules, source files, and compiled output.'",
      "AGENT: ''",
      "AGENT: '--- Approach 2: Multi-Stage Dockerfile (The Solution) ---'",
      "Create tool: `cat > Dockerfile << 'EOF'`",
      "# Stage 1: Build stage\nFROM node:18 AS builder\n\nWORKDIR /app\n\n# Copy package files\nCOPY package*.json ./\n\n# Install ALL dependencies (including devDependencies for building)\nRUN npm ci\n\n# Copy source code\nCOPY . .\n\n# Build the application\nRUN npm run build\n\n# Remove dev dependencies after build\nRUN npm prune --production\n\n# Stage 2: Production stage\nFROM node:18-alpine\n\nWORKDIR /app\n\n# Copy only the built application and production dependencies\nCOPY --from=builder /app/dist ./dist\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --from=builder /app/package*.json ./\n\n# Run as non-root user for security\nRUN addgroup -g 1001 -S nodejs && adduser -S nodejs -u 1001\nUSER nodejs\n\nEXPOSE 3000\n\nCMD [\"node\", \"dist/server.js\"]\nEOF",
      "AGENT: ''",
      "AGENT: '--- Approach 3: Build the Optimized Image ---'",
      "Run command: `docker build -t myapp:optimized .`",
      "AGENT: '[+] Building 45.2s (16/16) FINISHED'",
      "AGENT: ' => [builder 1/6] FROM docker.io/library/node:18'",
      "AGENT: ' => [builder 2/6] WORKDIR /app'",
      "AGENT: ' => [builder 3/6] COPY package*.json ./'",
      "AGENT: ' => [builder 4/6] RUN npm ci'",
      "AGENT: ' => [builder 5/6] COPY . .'",
      "AGENT: ' => [builder 6/6] RUN npm run build'",
      "AGENT: ' => [stage-1 1/5] FROM docker.io/library/node:18-alpine'",
      "AGENT: ' => [stage-1 2/5] WORKDIR /app'",
      "AGENT: ' => [stage-1 3/5] COPY --from=builder /app/dist ./dist'",
      "AGENT: ' => [stage-1 4/5] COPY --from=builder /app/node_modules ./node_modules'",
      "AGENT: ' => [stage-1 5/5] COPY --from=builder /app/package*.json ./'",
      "AGENT: ' => exporting to image'",
      "AGENT: ''",
      "AGENT: '--- Approach 4: Compare Image Sizes ---'",
      "Run command: `docker images | grep myapp`",
      "AGENT: 'REPOSITORY   TAG         IMAGE ID       CREATED          SIZE'",
      "AGENT: 'myapp        optimized   f6e5d4c3b2a1   30 seconds ago   187MB'",
      "AGENT: 'myapp        old         a1b2c3d4e5f6   2 minutes ago    1.21GB'",
      "AGENT: ''",
      "AGENT: '🎉 INCREDIBLE! 1.21GB → 187MB = 85% size reduction!'",
      "AGENT: ''",
      "AGENT: '--- Approach 5: Verify the Image Works ---'",
      "Run command: `docker run -d -p 3000:3000 --name myapp-test myapp:optimized`",
      "AGENT: 'c7d8e9f0a1b2'",
      "AGENT: ''",
      "Run command: `curl http://localhost:3000/health`",
      "AGENT: '{\"status\":\"ok\",\"version\":\"1.0.0\"}'",
      "AGENT: ''",
      "AGENT: '✅ Application runs perfectly in the optimized image!'",
      "AGENT: ''",
      "Run command: `docker stop myapp-test && docker rm myapp-test`",
      "AGENT: ''",
      "AGENT: '--- Approach 6: Analyze Layer Sizes ---'",
      "Run command: `docker history myapp:optimized`",
      "AGENT: 'IMAGE          CREATED          CREATED BY                                      SIZE'",
      "AGENT: 'f6e5d4c3b2a1   2 minutes ago    CMD [\"node\" \"dist/server.js\"]                   0B'",
      "AGENT: '<missing>      2 minutes ago    USER nodejs                                     0B'",
      "AGENT: '<missing>      2 minutes ago    RUN addgroup -g 1001 -S nodejs && adduser...   5kB'",
      "AGENT: '<missing>      2 minutes ago    COPY /app/package*.json ./ # buildkit           2kB'",
      "AGENT: '<missing>      2 minutes ago    COPY /app/node_modules ./node_modules # bu...   45MB'",
      "AGENT: '<missing>      2 minutes ago    COPY /app/dist ./dist # buildkit                12MB'",
      "AGENT: '<missing>      3 weeks ago      /bin/sh -c #(nop) WORKDIR /app                  0B'",
      "AGENT: '<missing>      3 weeks ago      /bin/sh -c #(nop) CMD [\"node\"]                  0B'",
      "AGENT: '...node:18-alpine base layers...                                             130MB'",
      "AGENT: ''",
      "AGENT: '--- Bonus: Even Smaller with Distroless ---'",
      "AGENT: 'For the absolute smallest image, use Google's distroless base:'",
      "AGENT: '```dockerfile'",
      "AGENT: 'FROM gcr.io/distroless/nodejs18-debian11'",
      "AGENT: 'COPY --from=builder /app/dist ./dist'",
      "AGENT: 'COPY --from=builder /app/node_modules ./node_modules'",
      "AGENT: 'CMD [\"dist/server.js\"]'",
      "AGENT: '```'",
      "AGENT: 'This can get you down to ~100MB!'",
      "AGENT: ''",
      "AGENT: '✓ SOLUTION SUMMARY:'",
      "AGENT: '  ✓ Created multi-stage Dockerfile with separate builder and runtime stages.'",
      "AGENT: '  ✓ Used node:18 for building (has all tools) and node:18-alpine for runtime (minimal).'",
      "AGENT: '  ✓ Copied only compiled artifacts and production dependencies to final image.'",
      "AGENT: '  ✓ Reduced image size by 85% (1.21GB → 187MB).'",
      "AGENT: '  ✓ Added security best practice: run as non-root user.'",
      "AGENT: '  ✓ Faster deployments, lower storage costs, better security posture! 🐳'"
    ],
    "commands": ["docker", "cat", "curl"],
    "packages": {
      "debian_ubuntu": ["docker.io"],
      "arch": ["docker"]
    },
    "related_commands": ["docker-compose", "podman", "buildah"],
    "complexity": "intermediate",
    "tags": ["docker", "containers", "multi-stage-build", "optimization", "devops", "image-size", "best-practices", "security"]
  },
  {
    "id": "scenario_git_rebase_interactive_094",
    "command": "git",
    "scenario": "Clean up messy commit history before merging a feature branch.",
    "problem": "A developer has a feature branch with 15 commits including 'WIP', 'fix typo', 'actually fix typo', and 'oops forgot file'. They want to squash and reorder commits into a clean, logical history before creating a pull request.",
    "solution": "Use interactive rebase (git rebase -i) to squash related commits, edit commit messages, reorder commits, and create a clean commit history that tells a clear story of the feature development.",
    "steps": [
      "USER SAYS: 'My feature branch has a mess of commits like \"WIP\", \"fix\", \"really fix this time\". I want to clean this up before opening a PR. How do I combine and organize these commits?'",
      "AGENT: 'Perfect use case for interactive rebase! It's like a time machine that lets you rewrite your commit history. Let me show you how to make your branch history beautiful.'",
      "AGENT: ''",
      "AGENT: '🔍 RESEARCH PHASE: Git interactive rebase...'",
      "AGENT: '[Searching] \"git rebase interactive squash commits\"'",
      "AGENT: '[Found] `git rebase -i HEAD~N` opens interactive editor for last N commits.'",
      "AGENT: '[Found] Commands: pick (keep), squash (combine with previous), reword (change message), drop (delete).'",
      "AGENT: '[Found] IMPORTANT: Never rebase commits that have been pushed to shared branches.'",
      "AGENT: '[Found] Use `git rebase -i origin/main` to rebase everything since branching.'",
      "AGENT: '✓ Research complete! Let's clean up that history.'",
      "AGENT: ''",
      "AGENT: '--- Approach 1: Review Current Messy History ---'",
      "Run command: `git log --oneline -15`",
      "AGENT: 'e7f8a9b (HEAD -> feature/user-auth) oops forgot to add test file'",
      "AGENT: 'd6c5b4a actually fix the typo this time'",
      "AGENT: 'c5b4a3d fix typo in login function'",
      "AGENT: 'b4a3d2c WIP - still debugging'",
      "AGENT: 'a3d2c1c Add password validation'",
      "AGENT: '9c1b2a3 WIP'",
      "AGENT: '8b1a2c3 Add JWT token generation'",
      "AGENT: '7a1b2c3 fix: remove console.log'",
      "AGENT: '6a1b2c3 Add login endpoint'",
      "AGENT: '5a1b2c3 Update dependencies'",
      "AGENT: '4a1b2c3 Create user model'",
      "AGENT: '3a1b2c3 WIP authentication'",
      "AGENT: '2a1b2c3 Setup auth routes'",
      "AGENT: '1a1b2c3 Initial auth scaffolding'",
      "AGENT: '0a1b2c3 (origin/main, main) Add user registration feature'",
      "AGENT: ''",
      "AGENT: '😱 This is a mess! Let's turn this into 3-4 clean, logical commits.'",
      "AGENT: ''",
      "AGENT: '--- Approach 2: Start Interactive Rebase ---'",
      "Run command: `git rebase -i origin/main`",
      "AGENT: 'This opens your editor with:'",
      "AGENT: ''",
      "AGENT: 'pick 1a1b2c3 Initial auth scaffolding'",
      "AGENT: 'pick 2a1b2c3 Setup auth routes'",
      "AGENT: 'pick 3a1b2c3 WIP authentication'",
      "AGENT: 'pick 4a1b2c3 Create user model'",
      "AGENT: 'pick 5a1b2c3 Update dependencies'",
      "AGENT: 'pick 6a1b2c3 Add login endpoint'",
      "AGENT: 'pick 7a1b2c3 fix: remove console.log'",
      "AGENT: 'pick 8b1a2c3 Add JWT token generation'",
      "AGENT: 'pick 9c1b2a3 WIP'",
      "AGENT: 'pick a3d2c1c Add password validation'",
      "AGENT: 'pick b4a3d2c WIP - still debugging'",
      "AGENT: 'pick c5b4a3d fix typo in login function'",
      "AGENT: 'pick d6c5b4a actually fix the typo this time'",
      "AGENT: 'pick e7f8a9b oops forgot to add test file'",
      "AGENT: ''",
      "AGENT: '--- Approach 3: Edit the Rebase Plan ---'",
      "AGENT: 'Change it to this (squash related commits, reorder logically):'",
      "AGENT: ''",
      "AGENT: 'pick 1a1b2c3 Initial auth scaffolding'",
      "AGENT: 'squash 2a1b2c3 Setup auth routes'",
      "AGENT: 'squash 3a1b2c3 WIP authentication'",
      "AGENT: 'reword 4a1b2c3 Create user model'",
      "AGENT: 'pick 5a1b2c3 Update dependencies'",
      "AGENT: 'pick 6a1b2c3 Add login endpoint'",
      "AGENT: 'squash 7a1b2c3 fix: remove console.log'",
      "AGENT: 'squash c5b4a3d fix typo in login function'",
      "AGENT: 'squash d6c5b4a actually fix the typo this time'",
      "AGENT: 'pick 8b1a2c3 Add JWT token generation'",
      "AGENT: 'pick a3d2c1c Add password validation'",
      "AGENT: 'squash b4a3d2c WIP - still debugging'",
      "AGENT: 'squash 9c1b2a3 WIP'",
      "AGENT: 'squash e7f8a9b oops forgot to add test file'",
      "AGENT: ''",
      "AGENT: 'Save and close. Git will now process each command.'",
      "AGENT: ''",
      "AGENT: '--- Approach 4: Edit Combined Commit Messages ---'",
      "AGENT: 'For the first squashed commit group, editor opens with:'",
      "AGENT: ''",
      "AGENT: '# This is a combination of 3 commits.'",
      "AGENT: 'Initial auth scaffolding'",
      "AGENT: 'Setup auth routes'",
      "AGENT: 'WIP authentication'",
      "AGENT: ''",
      "AGENT: 'Replace with a clear message:'",
      "AGENT: ''",
      "AGENT: 'feat: Set up authentication infrastructure'",
      "AGENT: ''",
      "AGENT: '- Create auth module structure'",
      "AGENT: '- Set up Express routes for authentication'",
      "AGENT: '- Add authentication middleware'",
      "AGENT: ''",
      "AGENT: 'Save and close. Repeat for other squashed groups.'",
      "AGENT: ''",
      "AGENT: '--- Approach 5: Handle the Reword ---'",
      "AGENT: 'For the commit marked \"reword\", editor opens:'",
      "AGENT: ''",
      "AGENT: 'Create user model'",
      "AGENT: ''",
      "AGENT: 'Change to:'",
      "AGENT: ''",
      "AGENT: 'feat: Implement user model with validation'",
      "AGENT: ''",
      "AGENT: '- Add User schema with email, password fields'",
      "AGENT: '- Include password hashing with bcrypt'",
      "AGENT: '- Add email validation'",
      "AGENT: ''",
      "AGENT: '--- Approach 6: Complete the Rebase ---'",
      "AGENT: 'Successfully rebased and updated refs/heads/feature/user-auth.'",
      "AGENT: ''",
      "Run command: `git log --oneline -10`",
      "AGENT: 'a9b8c7d (HEAD -> feature/user-auth) feat: Add password validation with complexity rules'",
      "AGENT: '8c7d6e5 feat: Add JWT token generation and verification'",
      "AGENT: '7d6e5f4 feat: Implement login endpoint with error handling'",
      "AGENT: '6e5f4a3 chore: Update authentication dependencies'",
      "AGENT: '5f4a3b2 feat: Implement user model with validation'",
      "AGENT: '4a3b2c1 feat: Set up authentication infrastructure'",
      "AGENT: '0a1b2c3 (origin/main, main) Add user registration feature'",
      "AGENT: ''",
      "AGENT: '🎉 BEAUTIFUL! 14 messy commits became 6 clean, descriptive commits!'",
      "AGENT: ''",
      "AGENT: '--- Approach 7: Force Push to Your Branch ---'",
      "AGENT: 'Since we rewrote history, we need to force push:'",
      "Run command: `git push --force-with-lease origin feature/user-auth`",
      "AGENT: 'Enumerating objects: 42, done.'",
      "AGENT: 'Total 42 (delta 12), reused 0 (delta 0)'",
      "AGENT: 'To github.com:user/repo.git'",
      "AGENT: ' + e7f8a9b...a9b8c7d feature/user-auth -> feature/user-auth (forced update)'",
      "AGENT: ''",
      "AGENT: '⚠️  NOTE: `--force-with-lease` is safer than `--force` - it fails if someone else pushed to the branch.'",
      "AGENT: ''",
      "AGENT: '--- Bonus: Viewing the Clean Diff ---'",
      "Run command: `git log origin/main..HEAD --oneline --graph`",
      "AGENT: '* a9b8c7d (HEAD -> feature/user-auth, origin/feature/user-auth) feat: Add password validation with complexity rules'",
      "AGENT: '* 8c7d6e5 feat: Add JWT token generation and verification'",
      "AGENT: '* 7d6e5f4 feat: Implement login endpoint with error handling'",
      "AGENT: '* 6e5f4a3 chore: Update authentication dependencies'",
      "AGENT: '* 5f4a3b2 feat: Implement user model with validation'",
      "AGENT: '* 4a3b2c1 feat: Set up authentication infrastructure'",
      "AGENT: ''",
      "AGENT: '✓ SOLUTION SUMMARY:'",
      "AGENT: '  ✓ Used interactive rebase to review all commits since branching from main.'",
      "AGENT: '  ✓ Squashed related commits (fixes, WIP messages) into logical feature commits.'",
      "AGENT: '  ✓ Reordered commits to follow logical development flow.'",
      "AGENT: '  ✓ Rewrote commit messages using conventional commit format.'",
      "AGENT: '  ✓ Force pushed with --force-with-lease for safety.'",
      "AGENT: '  ✓ Transformed 14 messy commits into 6 clean, reviewable commits.'",
      "AGENT: '  ✓ Your PR reviewers will love you for this clean history! 🎨'"
    ],
    "commands": ["git"],
    "packages": {
      "debian_ubuntu": ["git"],
      "arch": ["git"]
    },
    "related_commands": ["git-log", "git-reflog", "git-cherry-pick"],
    "complexity": "intermediate",
    "tags": ["git", "version-control", "rebase", "interactive-rebase", "commit-history", "best-practices", "pull-request", "code-review"]
  }
]
