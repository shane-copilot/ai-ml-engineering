[
  {
    "id": "sec_001",
    "scenario": "Detect and remove hidden cryptocurrency miner on system",
    "problem": "CPU usage constantly high even when idle, suspect cryptominer malware",
    "solution": "Systematically hunt for unauthorized mining processes and remove them",
    "steps": [
      "Check CPU usage: top or htop - look for unfamiliar processes using high CPU",
      "List all running processes: ps aux --sort=-%cpu | head -20",
      "Check for common miner names: ps aux | grep -iE 'xmrig|minergate|cpuminer|ccminer|ethminer'",
      "Look for obfuscated names: ps aux | grep -E '[a-z]{32}|\\./\\.[a-z]+'",
      "Check network connections: netstat -anp | grep ESTABLISHED or ss -tp",
      "Look for mining pool connections: netstat -anp | grep -E '3333|4444|5555|9999' (common mining ports)",
      "Check process command lines: cat /proc/[PID]/cmdline | strings",
      "Find process binary location: ls -l /proc/[PID]/exe",
      "Check what started it: ps -o ppid= -p [PID] (parent process ID)",
      "Look for suspicious cron jobs: crontab -l && sudo crontab -l && cat /etc/cron*/*",
      "Check systemd services: systemctl list-units --type=service --state=running | grep -v '@'",
      "Look in user systemd units: systemctl --user list-units --type=service",
      "Check systemd timers: systemctl list-timers --all",
      "Find suspicious auto-start: ls -la ~/.config/autostart/ /etc/xdg/autostart/",
      "Check for hidden files: find ~ -name '.*' -type f -executable",
      "Look for recently modified system files: find /usr /opt -type f -mtime -7 -executable",
      "Check for persistence in .bashrc/.profile: cat ~/.bashrc ~/.bash_profile ~/.profile | grep -v '^#'",
      "Scan with rkhunter: sudo rkhunter --check --sk",
      "Scan with chkrootkit: sudo chkrootkit",
      "Use ClamAV: sudo freshclam && sudo clamscan -r --bell -i /",
      "Kill miner process: sudo kill -9 [PID]",
      "Remove binary: sudo rm $(ls -l /proc/[PID]/exe | awk '{print $NF}')",
      "Remove from crontab: crontab -e (delete malicious entries)",
      "Remove systemd service: sudo systemctl disable --now [service] && sudo rm /etc/systemd/system/[service].service",
      "Clean persistence: Edit ~/.bashrc, ~/.profile, remove suspicious commands",
      "Check for backdoor: sudo netstat -tlnp (check for unusual listening ports)",
      "Change passwords: All user passwords, especially if SSH exposed",
      "Review SSH authorized_keys: cat ~/.ssh/authorized_keys (remove unknown keys)",
      "Check sudo access: sudo -l && cat /etc/sudoers",
      "Harden system: Disable unnecessary services, configure firewall, enable automatic updates",
      "Monitor for return: Install and configure fail2ban, AIDE (file integrity monitoring)"
    ],
    "commands": ["top", "htop", "ps", "grep", "netstat", "ss", "cat", "strings", "ls", "crontab", "systemctl", "find", "rkhunter", "chkrootkit", "freshclam", "clamscan", "kill", "rm", "sudo"],
    "packages": {
      "debian_ubuntu": ["htop", "net-tools", "rkhunter", "chkrootkit", "clamav", "clamav-daemon", "fail2ban", "aide"],
      "arch": ["htop", "net-tools", "rkhunter", "chkrootkit", "clamav", "fail2ban", "aide"]
    },
    "complexity": "advanced",
    "tags": ["security", "malware", "cryptominer", "detection", "removal", "troubleshooting"]
  },
  {
    "id": "sec_002",
    "scenario": "Lock down SSH access after failed login attempts from unknown IPs",
    "problem": "Seeing hundreds of failed SSH login attempts from foreign IPs in logs",
    "solution": "Configure fail2ban, disable password auth, implement key-based access only",
    "steps": [
      "Check failed login attempts: sudo grep 'Failed password' /var/log/auth.log | tail -50 or sudo journalctl -u sshd | grep 'Failed password'",
      "Count attempts by IP: sudo grep 'Failed password' /var/log/auth.log | awk '{print $(NF-3)}' | sort | uniq -c | sort -rn",
      "Install fail2ban: sudo apt install fail2ban (Ubuntu) or sudo pacman -S fail2ban (Arch)",
      "Enable and start fail2ban: sudo systemctl enable --now fail2ban",
      "Configure SSH jail: sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local",
      "Edit jail.local: sudo nano /etc/fail2ban/jail.local",
      "Find [sshd] section, enable: enabled = true, maxretry = 3, bantime = 3600 (1 hour)",
      "For permanent bans: bantime = -1",
      "Restart fail2ban: sudo systemctl restart fail2ban",
      "Check banned IPs: sudo fail2ban-client status sshd",
      "Manually ban IP: sudo fail2ban-client set sshd banip 1.2.3.4",
      "Unban IP: sudo fail2ban-client set sshd unbanip 1.2.3.4",
      "Configure SSH for key-only auth: sudo nano /etc/ssh/sshd_config",
      "Change settings: PasswordAuthentication no, ChallengeResponseAuthentication no, UsePAM no",
      "Keep PubkeyAuthentication yes",
      "BEFORE disabling password: Ensure you have working SSH key!",
      "Generate SSH key if needed: ssh-keygen -t ed25519 -C 'your_email@example.com'",
      "Copy key to server: ssh-copy-id user@server (do this BEFORE disabling password auth)",
      "Test key login: ssh user@server (should not ask for password)",
      "Only after test succeeds: Restart SSH: sudo systemctl restart sshd",
      "Change SSH port from 22: In sshd_config: Port 2222 (security through obscurity, but helps)",
      "Update firewall: sudo ufw delete allow 22/tcp && sudo ufw allow 2222/tcp",
      "Disable root login: PermitRootLogin no in sshd_config",
      "Limit SSH access to specific users: AllowUsers user1 user2 in sshd_config",
      "Or limit to specific IPs: In /etc/hosts.allow: sshd: 192.168.1.0/24, then /etc/hosts.deny: sshd: ALL",
      "Install additional protection: sudo apt install denyhosts or configure iptables rate limiting",
      "Monitor logs: tail -f /var/log/fail2ban.log && sudo journalctl -u sshd -f",
      "Set up email alerts: Configure fail2ban to email on ban: destemail = your@email.com, action = %(action_mwl)s"
    ],
    "commands": ["grep", "journalctl", "awk", "sort", "uniq", "systemctl", "fail2ban-client", "ssh-keygen", "ssh-copy-id", "ssh", "ufw", "tail"],
    "packages": {
      "debian_ubuntu": ["fail2ban", "openssh-server", "ufw", "denyhosts"],
      "arch": ["fail2ban", "openssh", "ufw", "denyhosts"]
    },
    "complexity": "intermediate",
    "tags": ["ssh", "security", "fail2ban", "brute-force-protection", "authentication", "hardening"]
  },
  {
    "id": "sec_003",
    "scenario": "Encrypt external USB drive with LUKS for secure portable storage",
    "problem": "Need to store sensitive files on USB drive that could be lost or stolen",
    "solution": "Set up LUKS full-disk encryption on USB drive with secure passphrase",
    "steps": [
      "WARN: This erases ALL data on USB drive!",
      "Backup any existing data first",
      "Identify USB drive: lsblk or sudo fdisk -l (e.g., /dev/sdb)",
      "Unmount if mounted: sudo umount /dev/sdb*",
      "Install cryptsetup: sudo apt install cryptsetup (Ubuntu) or sudo pacman -S cryptsetup (Arch)",
      "Securely wipe drive (optional but recommended): sudo dd if=/dev/urandom of=/dev/sdb bs=4M status=progress",
      "Or faster but less secure: sudo shred -v -n 1 /dev/sdb",
      "Create LUKS container: sudo cryptsetup luksFormat /dev/sdb (for whole drive) or /dev/sdb1 (for partition)",
      "Confirm with uppercase YES",
      "Enter strong passphrase: Use 20+ characters, mix of letters/numbers/symbols",
      "Re-enter passphrase to confirm",
      "Open LUKS container: sudo cryptsetup luksOpen /dev/sdb my_encrypted_usb",
      "Container now mapped at /dev/mapper/my_encrypted_usb",
      "Create filesystem: sudo mkfs.ext4 /dev/mapper/my_encrypted_usb -L \"SecureUSB\"",
      "Or for Windows compatibility: sudo mkfs.ntfs /dev/mapper/my_encrypted_usb",
      "Create mount point: sudo mkdir -p /mnt/secure_usb",
      "Mount encrypted volume: sudo mount /dev/mapper/my_encrypted_usb /mnt/secure_usb",
      "Set permissions: sudo chown $USER:$USER /mnt/secure_usb",
      "Test: echo 'test' > /mnt/secure_usb/test.txt && cat /mnt/secure_usb/test.txt",
      "Unmount when done: sudo umount /mnt/secure_usb",
      "Close LUKS container: sudo cryptsetup luksClose my_encrypted_usb",
      "To use later: sudo cryptsetup luksOpen /dev/sdb my_encrypted_usb → enter passphrase → mount",
      "Add backup passphrase: sudo cryptsetup luksAddKey /dev/sdb",
      "View key slots: sudo cryptsetup luksDump /dev/sdb | grep 'Slot'",
      "Remove key slot: sudo cryptsetup luksKillSlot /dev/sdb 1 (careful!)",
      "Change passphrase: sudo cryptsetup luksChangeKey /dev/sdb",
      "Backup LUKS header: sudo cryptsetup luksHeaderBackup /dev/sdb --header-backup-file usb_header.img",
      "Store header backup securely (NOT on the USB!)",
      "Restore header if corrupted: sudo cryptsetup luksHeaderRestore /dev/sdb --header-backup-file usb_header.img",
      "For auto-mount on insert: Use GNOME Disks or KDE Partition Manager to set up",
      "Or create udev rule: /etc/udev/rules.d/99-usb-encrypt.rules"
    ],
    "commands": ["lsblk", "fdisk", "umount", "dd", "shred", "cryptsetup", "mkfs.ext4", "mkfs.ntfs", "mkdir", "mount", "chown", "echo", "cat"],
    "packages": {
      "debian_ubuntu": ["cryptsetup", "e2fsprogs", "ntfs-3g"],
      "arch": ["cryptsetup", "e2fsprogs", "ntfs-3g"]
    },
    "complexity": "advanced",
    "tags": ["encryption", "luks", "usb", "security", "data-protection", "cryptsetup"]
  },
  {
    "id": "sec_004",
    "scenario": "Set up firewall to block all incoming connections except specific services",
    "problem": "Want to lock down system but allow SSH, web server, and local network access",
    "solution": "Configure ufw (Uncomplicated Firewall) with default deny and explicit allows",
    "steps": [
      "Install ufw: sudo apt install ufw (Ubuntu, usually pre-installed) or sudo pacman -S ufw (Arch)",
      "Check current status: sudo ufw status verbose",
      "Set default policies: sudo ufw default deny incoming && sudo ufw default allow outgoing",
      "Allow SSH before enabling: sudo ufw allow 22/tcp (or custom port: sudo ufw allow 2222/tcp)",
      "Alternative SSH rule with rate limiting: sudo ufw limit 22/tcp (prevents brute force)",
      "Allow from specific IP only: sudo ufw allow from 192.168.1.5 to any port 22",
      "Allow local network: sudo ufw allow from 192.168.1.0/24",
      "Allow web server: sudo ufw allow 80/tcp && sudo ufw allow 443/tcp",
      "Allow by service name: sudo ufw allow http && sudo ufw allow https",
      "Allow port range: sudo ufw allow 6000:6007/tcp",
      "Allow specific app profile: sudo ufw app list && sudo ufw allow 'Apache Full'",
      "Enable firewall: sudo ufw enable (WARNING: This activates rules immediately!)",
      "Verify you can still SSH: Test from another terminal before closing current session!",
      "Check status: sudo ufw status numbered",
      "View app profiles: sudo ufw app list",
      "Info on specific app: sudo ufw app info 'OpenSSH'",
      "Delete rule by number: sudo ufw delete 3",
      "Delete rule by specification: sudo ufw delete allow 80/tcp",
      "Insert rule at position: sudo ufw insert 1 allow from 192.168.1.0/24",
      "Allow outgoing to specific IP: sudo ufw allow out to 8.8.8.8 port 53",
      "Deny specific service: sudo ufw deny 23/tcp (telnet)",
      "Logging: sudo ufw logging on (or low/medium/high)",
      "View logs: sudo tail -f /var/log/ufw.log or sudo journalctl -f -u ufw",
      "Reset all rules: sudo ufw reset (careful!)",
      "Advanced: Allow loopback: sudo ufw allow in on lo && sudo ufw allow out on lo",
      "Block specific IP: sudo ufw deny from 1.2.3.4",
      "Rate limit connection: sudo ufw limit from 0.0.0.0/0 to any port 22 proto tcp",
      "For complex rules, edit directly: sudo nano /etc/ufw/before.rules",
      "Reload after changes: sudo ufw reload",
      "Disable firewall: sudo ufw disable (for testing)"
    ],
    "commands": ["ufw", "tail", "journalctl", "nano"],
    "packages": {
      "debian_ubuntu": ["ufw"],
      "arch": ["ufw"]
    },
    "complexity": "intermediate",
    "tags": ["firewall", "ufw", "security", "network-security", "iptables", "access-control"]
  },
  {
    "id": "sec_005",
    "scenario": "Audit system for weak file permissions and SUID binaries",
    "problem": "Need to find security vulnerabilities like world-writable files and suspicious SUID executables",
    "solution": "Run comprehensive file permission audit and review SUID/SGID binaries",
    "steps": [
      "Find world-writable files: sudo find / -type f -perm -0002 -ls 2>/dev/null",
      "Find world-writable directories: sudo find / -type d -perm -0002 -ls 2>/dev/null",
      "Exclude /proc and /sys: sudo find / -path /proc -prune -o -path /sys -prune -o -type f -perm -0002 -print",
      "Find files with no owner: sudo find / -nouser -o -nogroup 2>/dev/null",
      "Find SUID binaries: sudo find / -type f -perm -4000 -ls 2>/dev/null",
      "Find SGID binaries: sudo find / -type f -perm -2000 -ls 2>/dev/null",
      "Find SUID and SGID: sudo find / -type f \\( -perm -4000 -o -perm -2000 \\) -ls 2>/dev/null",
      "Save SUID list for comparison: sudo find / -type f -perm -4000 2>/dev/null > ~/suid_list.txt",
      "Compare later: sudo find / -type f -perm -4000 2>/dev/null | diff - ~/suid_list.txt (shows changes)",
      "Check specific suspicious SUID binaries: ls -l /usr/bin/passwd /usr/bin/sudo /usr/bin/su (should be SUID root)",
      "Find files owned by root but writable by others: sudo find / -user root -perm -022 2>/dev/null",
      "Find hidden files: sudo find / -name '.*' -type f 2>/dev/null",
      "Find files modified in last 7 days: sudo find / -type f -mtime -7 2>/dev/null",
      "Find large files (potential data exfiltration): sudo find / -type f -size +100M 2>/dev/null",
      "Check /tmp for suspicious executables: ls -la /tmp && sudo find /tmp -type f -executable",
      "Audit SSH directory permissions: find ~/.ssh -ls (should be 700 for ~/.ssh, 600 for keys)",
      "Fix SSH permissions: chmod 700 ~/.ssh && chmod 600 ~/.ssh/* && chmod 644 ~/.ssh/*.pub",
      "Check system file integrity with AIDE: sudo aide --check or sudo aide --update",
      "Install AIDE if not present: sudo apt install aide (Ubuntu) or sudo pacman -S aide (Arch)",
      "Initialize AIDE database: sudo aideinit",
      "Check sensitive config files: ls -l /etc/shadow /etc/passwd /etc/sudoers",
      "/etc/shadow should be: -rw-r----- root:shadow",
      "/etc/passwd should be: -rw-r--r-- root:root",
      "/etc/sudoers should be: -r--r----- root:root (440)",
      "Fix sudoers if wrong: sudo chmod 440 /etc/sudoers",
      "Check for .rhosts files (security risk): sudo find /home -name .rhosts",
      "Remove .rhosts: sudo find /home -name .rhosts -delete",
      "Scan for common backdoors: sudo find / -name '.. ' -o -name '..  ' -o -name '. ' (space in names)",
      "Check cron jobs: sudo ls -la /etc/cron.* && cat /etc/crontab",
      "Review systemd services: systemctl list-unit-files --type=service | grep enabled",
      "Check for listening ports: sudo netstat -tlnp or sudo ss -tlnp"
    ],
    "commands": ["find", "ls", "diff", "chmod", "aide", "aideinit", "cat", "systemctl", "netstat", "ss"],
    "packages": {
      "debian_ubuntu": ["findutils", "aide", "net-tools"],
      "arch": ["findutils", "aide", "net-tools"]
    },
    "complexity": "advanced",
    "tags": ["security", "audit", "permissions", "suid", "file-integrity", "hardening", "vulnerability-assessment"]
  }
]
